version: '3.8'

services:
  # Next.js Development Server
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      # Development environment variables
      - NODE_ENV=development
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      - NEXT_PUBLIC_APP_URL=http://localhost:3000
      - NEXT_PUBLIC_GA4_MEASUREMENT_ID=${NEXT_PUBLIC_GA4_MEASUREMENT_ID}
      - NEXT_PUBLIC_SENTRY_DSN=${NEXT_PUBLIC_SENTRY_DSN}
      # Server-side environment variables
      - DATABASE_URL=${DOCKER_DATABASE_URL:-postgresql://suburbmates_user:suburbmates_password@postgres-dev:5432/suburbmates_dev}
      - RESEND_API_KEY=${RESEND_API_KEY}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-dev-secret-key}
      - NEXTAUTH_URL=http://localhost:3000
      - ABR_API_GUID=${ABR_API_GUID}
      - SENDER_DOMAIN=${SENDER_DOMAIN}
      - FROM_EMAIL=${FROM_EMAIL}
      # Development flags
      - NEXT_TELEMETRY_DISABLED=1
      - RUN_MIGRATIONS=${RUN_MIGRATIONS:-false}
      - GENERATE_PRISMA_CLIENT=${GENERATE_PRISMA_CLIENT:-false}
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - postgres-dev
      - redis-dev
    networks:
      - suburbmates-dev-network
    restart: unless-stopped
    command: npm run dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL Database for Development
  postgres-dev:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=suburbmates_dev
      - POSTGRES_USER=suburbmates_user
      - POSTGRES_PASSWORD=suburbmates_password
    ports:
      - "5433:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./prisma/seed.sql:/docker-entrypoint-initdb.d/seed.sql
    networks:
      - suburbmates-dev-network
    restart: unless-stopped

  # Redis for Development
  redis-dev:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - suburbmates-dev-network
    restart: unless-stopped

  # Prisma Studio for Database Management
  prisma-studio:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "5555:5555"
    environment:
      - DATABASE_URL=postgresql://suburbmates_user:suburbmates_password@postgres-dev:5432/suburbmates_dev
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - postgres-dev
    networks:
      - suburbmates-dev-network
    command: npx prisma studio --hostname 0.0.0.0
    profiles:
      - tools

  # MailHog for Email Testing
  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025"  # SMTP server
      - "8025:8025"  # Web UI
    networks:
      - suburbmates-dev-network
    profiles:
      - tools

volumes:
  postgres_dev_data:
  redis_dev_data:

networks:
  suburbmates-dev-network:
    driver: bridge