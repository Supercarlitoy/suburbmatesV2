
> suburbmates@0.1.0 dev
> next dev

   â–² Next.js 15.5.2
   - Local:        http://localhost:3000
   - Network:      http://192.168.1.2:3000
   - Environments: .env.local, .env

 âœ“ Starting...
 âš  Duplicate page detected. app/api/og/route.ts and app/api/og/route.tsx resolve to /api/og
 âš  Duplicate page detected. app/api/og/route.ts and app/api/og/route.tsx resolve to /api/og
 âœ“ Ready in 1286ms
 âœ“ Compiled /api/agent/sentry/search in 259ms (306 modules)
Agent: Searched Sentry for "error", found 0 issues
 POST /api/agent/sentry/search 200 in 1078ms
 âœ“ Compiled /api/agent/sentry/comment in 55ms (308 modules)
Agent Sentry comment error: Error: Sentry API error: Not Found
    at POST (app/api/agent/sentry/comment/route.ts:47:13)
  45 |
  46 |     if (!response.ok) {
> 47 |       throw new Error(`Sentry API error: ${response.statusText}`);
     |             ^
  48 |     }
  49 |
  50 |     const result = await response.json();
 POST /api/agent/sentry/comment 500 in 471ms
 âœ“ Compiled /api/agent/redis/incr in 43ms (310 modules)
Agent: Incremented Redis key "test:counter" by 5, new value: 5
 POST /api/agent/redis/incr 200 in 278ms
 âœ“ Compiled /api/agent/flags/set in 79ms (314 modules)
prisma:query INSERT INTO "public"."feature_flags" ("key","enabled","audience","updatedAt","createdAt") VALUES ($1,$2,$3,$4,$5) ON CONFLICT ("key") DO UPDATE SET "enabled" = $6, "audience" = $7, "updatedAt" = $8 WHERE ("public"."feature_flags"."key" = $9 AND 1=1) RETURNING "public"."feature_flags"."key", "public"."feature_flags"."enabled", "public"."feature_flags"."audience", "public"."feature_flags"."updatedAt", "public"."feature_flags"."createdAt"
Agent: Set feature flag "test-feature" to true, audience: beta-users
 POST /api/agent/flags/set 200 in 481ms
 âœ“ Compiled /api/agent/cache/invalidate in 289ms (329 modules)
Agent: Invalidated Next.js cache tag: business-profiles
Agent: Cache invalidation requested - type: tag, value: business-profiles, pattern: false
 POST /api/agent/cache/invalidate 200 in 351ms
Agent: Invalidated Next.js cache path: /business
Agent: Cache invalidation requested - type: path, value: /business, pattern: false
 POST /api/agent/cache/invalidate 200 in 8ms
Agent: Deleted Redis key: cache:test
Agent: Cache invalidation requested - type: redis-key, value: cache:test, pattern: false
 POST /api/agent/cache/invalidate 200 in 23ms
 â¨¯ ./app/api/og/route.ts
Error:   [31mx[0m Expected '>', got 'style'
    ,-[[36;1;4m/Users/carlg/Documents/PROJECTS/suburbmates/app/api/og/route.ts[0m:52:1]
 [2m49[0m |     return new ImageResponse(
 [2m50[0m |       (
 [2m51[0m |         <div
 [2m52[0m |           style={{
    : [35;1m          ^^^^^[0m
 [2m53[0m |             background: `linear-gradient(135deg, ${colors.primary} 0%, ${colors.text} 100%)`,
 [2m54[0m |             width: '100%',
 [2m55[0m |             height: '100%',
    `----

Caused by:
    Syntax Error

Import trace for requested module:
./app/api/og/route.ts
 âœ“ Compiled /api/og in 127ms (231 modules)
OG image generation error: Error: PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in ``).
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report
    at GET (app/api/og/route.tsx:27:31)
    at AppRouteRouteModule.do (../../../../src/server/route-modules/app-route/module.ts:586:42)
    at eval (../../../../src/server/route-modules/app-route/module.ts:785:24)
  25 |       });
  26 |     } else if (slug) {
> 27 |       business = await prisma.business.findUnique({
     |                               ^
  28 |         where: { slug },
  29 |         include: { customization: true },
  30 |       }); {
  
}
 GET /api/og?slug=test-business&theme=default 200 in 415ms
 â—‹ Compiling /_error ...
 âœ“ Compiled /_error in 1136ms (670 modules)
 POST /api/agent/sentry/search 500 in 1577ms
 âœ“ Compiled in 221ms (450 modules)
 âœ“ Compiled in 426ms (450 modules)
 â—‹ Compiling / ...
 âœ“ Compiled / in 2.6s (1821 modules)
 âš  metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
 GET / 200 in 3110ms
 âœ“ Compiled in 532ms (875 modules)
 GET / 200 in 194ms
 âœ“ Compiled in 221ms (875 modules)
 â—‹ Compiling /api/og ...
 â¨¯ ./app/api/og/route.ts
Error:   [31mx[0m Expected '>', got 'style'
    ,-[[36;1;4m/Users/carlg/Documents/PROJECTS/suburbmates/app/api/og/route.ts[0m:52:1]
 [2m49[0m |     return new ImageResponse(
 [2m50[0m |       (
 [2m51[0m |         <div
 [2m52[0m |           style={{
    : [35;1m          ^^^^^[0m
 [2m53[0m |             background: `linear-gradient(135deg, ${colors.primary} 0%, ${colors.text} 100%)`,
 [2m54[0m |             width: '100%',
 [2m55[0m |             height: '100%',
    `----

Caused by:
    Syntax Error

Import trace for requested module:
./app/api/og/route.ts
 âœ“ Compiled /api/og in 151ms (225 modules)
 GET /api/og 200 in 1170ms
 GET /api/og?slug=demo&name=Demo&suburb=Richmond 200 in 1155ms
 GET /api/og?slug=demo&name=Demo&suburb=Richmond 200 in 541ms
 GET /api/og?slug=test&name=AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&suburb=BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB 200 in 1149ms
 â¨¯ ./app/api/og/route.ts
Error:   [31mx[0m Expected '>', got 'style'
    ,-[[36;1;4m/Users/carlg/Documents/PROJECTS/suburbmates/app/api/og/route.ts[0m:52:1]
 [2m49[0m |     return new ImageResponse(
 [2m50[0m |       (
 [2m51[0m |         <div
 [2m52[0m |           style={{
    : [35;1m          ^^^^^[0m
 [2m53[0m |             background: `linear-gradient(135deg, ${colors.primary} 0%, ${colors.text} 100%)`,
 [2m54[0m |             width: '100%',
 [2m55[0m |             height: '100%',
    `----

Caused by:
    Syntax Error

Import trace for requested module:
./app/api/og/route.ts
 GET /api/og?slug=test&name=AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&suburb=BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB 200 in 602ms
 â—‹ Compiling /api/og ...
 GET /api/og 200 in 242ms
 GET /api/og?slug=demo&name=Demo&suburb=Richmond 200 in 64ms
 âœ“ Compiled /api/og in 537ms (875 modules)
 GET /api/og 200 in 281ms
 GET /api/og?slug=test&name=AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&suburb=BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB 200 in 140ms
 âœ“ Compiled in 401ms (875 modules)
 GET /api/og?slug=demo&name=Demo&suburb=Richmond 200 in 223ms
 âœ“ Compiled in 454ms (875 modules)
 GET /api/og 200 in 181ms
 GET /api/og?slug=test&name=AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&suburb=BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB 200 in 182ms
 GET /api/og?slug=demo&name=Demo&suburb=Richmond 200 in 85ms
 âœ“ Compiled in 398ms (875 modules)
 âœ“ Compiled in 248ms (875 modules)
 GET /api/og 200 in 141ms
 GET /api/og?slug=test&name=AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&suburb=BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB 200 in 140ms
 âœ“ Compiled in 323ms (875 modules)
 âœ“ Compiled in 204ms (875 modules)
<w> [webpack.cache.PackFileCacheStrategy] Caching failed for pack: Error: ENOENT: no such file or directory, rename '/Users/carlg/Documents/PROJECTS/suburbmates/.next/cache/webpack/client-development/7.pack.gz_' -> '/Users/carlg/Documents/PROJECTS/suburbmates/.next/cache/webpack/client-development/7.pack.gz'
 âœ“ Compiled in 406ms (875 modules)
<w> [webpack.cache.PackFileCacheStrategy] Restoring pack failed from /Users/carlg/Documents/PROJECTS/suburbmates/.next/cache/webpack/client-development.pack.gz: Error: incorrect header check
 âœ“ Compiled in 272ms (875 modules)
 âœ“ Compiled in 152ms (875 modules)
 âœ“ Compiled in 233ms (875 modules)
 âœ“ Compiled in 675ms (966 modules)
 âœ“ Compiled in 266ms (875 modules)
 âœ“ Compiled in 371ms (875 modules)
 âœ“ Compiled in 370ms (875 modules)
 âœ“ Compiled in 275ms (875 modules)
<w> [webpack.cache.PackFileCacheStrategy] Caching failed for pack: Error: ENOENT: no such file or directory, rename '/Users/carlg/Documents/PROJECTS/suburbmates/.next/cache/webpack/client-development/1.pack.gz_' -> '/Users/carlg/Documents/PROJECTS/suburbmates/.next/cache/webpack/client-development/1.pack.gz'
 âœ“ Compiled in 518ms (966 modules)
 âœ“ Compiled in 280ms (875 modules)
 âœ“ Compiled in 360ms (875 modules)
 âœ“ Compiled in 424ms (966 modules)
 âœ“ Compiled in 317ms (966 modules)
 â—‹ Compiling /category/[slug] ...
 âœ“ Compiled /category/[slug] in 1080ms (1482 modules)
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:56:70)
    at Array.find (<anonymous>)
    at CategoryLayout (app/category/[slug]/layout.tsx:56:40)
  54 |
  55 | export default function CategoryLayout({ params, children }: Props) {
> 56 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  57 |   
  58 |   if (!category) {
  59 |     notFound();
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at CategoryPage (app/category/[slug]/page.tsx:78:86)
  76 |
  77 | export default async function CategoryPage({ params }: CategoryPageProps) {
> 78 |   const { businesses, category, suburbsWithBusinesses } = await getBusinesses(params.slug);
     |                                                                                      ^
  79 |
  80 |   if (!category) {
  81 |     notFound();
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:11:70)
    at Array.find (<anonymous>)
    at Module.generateMetadata (app/category/[slug]/layout.tsx:11:40)
   9 |
  10 | export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
> 11 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  12 |   
  13 |   if (!category) {
  14 |     return {
 âš  metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
 â¨¯ Error [PrismaClientValidationError]: 
Invalid `prisma.business.findMany()` invocation:

{
  where: {
    category: "Plumbing",
    published: true,
    ~~~~~~~~~
?   AND?: BusinessWhereInput | BusinessWhereInput[],
?   OR?: BusinessWhereInput[],
?   NOT?: BusinessWhereInput | BusinessWhereInput[],
?   id?: StringFilter | String,
?   slug?: StringFilter | String,
?   name?: StringFilter | String,
?   abn?: StringNullableFilter | String | Null,
?   email?: StringFilter | String,
?   bio?: StringNullableFilter | String | Null,
?   suburb?: StringFilter | String,
?   serviceAreas?: StringFilter | String,
?   postcode?: StringNullableFilter | String | Null,
?   phone?: StringNullableFilter | String | Null,
?   website?: StringNullableFilter | String | Null,
?   logo?: StringNullableFilter | String | Null,
?   status?: EnumBusinessStatusFilter | BusinessStatus,
?   needsReview?: BoolFilter | Boolean,
?   themeId?: StringNullableFilter | String | Null,
?   layoutId?: StringNullableFilter | String | Null,
?   headerStyle?: StringNullableFilter | String | Null,
?   ctaText?: StringNullableFilter | String | Null,
?   ctaStyle?: StringNullableFilter | String | Null,
?   showTestimonials?: BoolFilter | Boolean,
?   showGallery?: BoolFilter | Boolean,
?   showBusinessHours?: BoolFilter | Boolean,
?   facebookUrl?: StringNullableFilter | String | Null,
?   instagramUrl?: StringNullableFilter | String | Null,
?   linkedinUrl?: StringNullableFilter | String | Null,
?   abnVerificationStatus?: StringNullableFilter | String | Null,
?   abnVerificationDate?: DateTimeNullableFilter | DateTime | Null,
?   abnVerificationData?: JsonNullableFilter,
?   abnVerificationNotes?: StringNullableFilter | String | Null,
?   abnVerifiedBy?: StringNullableFilter | String | Null,
?   abnAutoVerified?: BoolFilter | Boolean,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   userId?: StringFilter | String,
?   profileTheme?: JsonNullableFilter,
?   user?: UserScalarRelationFilter | UserWhereInput,
?   content?: ContentListRelationFilter,
?   leads?: LeadListRelationFilter,
?   inquiries?: InquiryListRelationFilter,
?   ownershipClaims?: OwnershipClaimListRelationFilter,
?   customization?: BusinessProfileCustomizationNullableScalarRelationFilter | BusinessProfileCustomizationWhereInput | Null
  },
  include: {
    customization: true
  },
  orderBy: [
    {
      featured: "desc"
    },
    {
      createdAt: "desc"
    }
  ],
  take: 20
}

Unknown argument `published`. Available options are marked with ?.
    at async getBusinesses (app/category/[slug]/page.tsx:41:22)
    at async CategoryPage (app/category/[slug]/page.tsx:78:59)
  39 |   if (!category) return { businesses: [], category: null, suburbsWithBusinesses: [] };
  40 |
> 41 |   const businesses = await prisma.business.findMany({
     |                      ^
  42 |     where: {
  43 |       category: category.name,
  44 |       published: true, {
  clientVersion: '6.15.0',
  digest: '1627251804'
}
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:11:70)
    at Array.find (<anonymous>)
    at Module.generateMetadata (app/category/[slug]/layout.tsx:11:40)
   9 |
  10 | export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
> 11 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  12 |   
  13 |   if (!category) {
  14 |     return {
 GET /category/plumbing 500 in 2591ms
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:56:70)
    at Array.find (<anonymous>)
    at CategoryLayout (app/category/[slug]/layout.tsx:56:40)
  54 |
  55 | export default function CategoryLayout({ params, children }: Props) {
> 56 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  57 |   
  58 |   if (!category) {
  59 |     notFound();
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at CategoryPage (app/category/[slug]/page.tsx:78:86)
  76 |
  77 | export default async function CategoryPage({ params }: CategoryPageProps) {
> 78 |   const { businesses, category, suburbsWithBusinesses } = await getBusinesses(params.slug);
     |                                                                                      ^
  79 |
  80 |   if (!category) {
  81 |     notFound();
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:11:70)
    at Array.find (<anonymous>)
    at Module.generateMetadata (app/category/[slug]/layout.tsx:11:40)
   9 |
  10 | export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
> 11 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  12 |   
  13 |   if (!category) {
  14 |     return {
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:11:70)
    at Array.find (<anonymous>)
    at Module.generateMetadata (app/category/[slug]/layout.tsx:11:40)
   9 |
  10 | export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
> 11 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  12 |   
  13 |   if (!category) {
  14 |     return {
 GET /category/electrician 404 in 194ms
 â—‹ Compiling /api/auth/[...nextauth] ...
 âœ“ Compiled /api/auth/[...nextauth] in 664ms (1717 modules)
 âš  Fast Refresh had to perform a full reload due to a runtime error.
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:56:70)
    at Array.find (<anonymous>)
    at CategoryLayout (app/category/[slug]/layout.tsx:56:40)
  54 |
  55 | export default function CategoryLayout({ params, children }: Props) {
> 56 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  57 |   
  58 |   if (!category) {
  59 |     notFound();
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at CategoryPage (app/category/[slug]/page.tsx:78:86)
  76 |
  77 | export default async function CategoryPage({ params }: CategoryPageProps) {
> 78 |   const { businesses, category, suburbsWithBusinesses } = await getBusinesses(params.slug);
     |                                                                                      ^
  79 |
  80 |   if (!category) {
  81 |     notFound();
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:11:70)
    at Array.find (<anonymous>)
    at Module.generateMetadata (app/category/[slug]/layout.tsx:11:40)
   9 |
  10 | export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
> 11 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  12 |   
  13 |   if (!category) {
  14 |     return {
 âš  metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
prisma:query SELECT 1
 â¨¯ Error [PrismaClientValidationError]: 
Invalid `prisma.business.findMany()` invocation:

{
  where: {
    category: "Plumbing",
    published: true,
    ~~~~~~~~~
?   AND?: BusinessWhereInput | BusinessWhereInput[],
?   OR?: BusinessWhereInput[],
?   NOT?: BusinessWhereInput | BusinessWhereInput[],
?   id?: StringFilter | String,
?   slug?: StringFilter | String,
?   name?: StringFilter | String,
?   abn?: StringNullableFilter | String | Null,
?   email?: StringFilter | String,
?   bio?: StringNullableFilter | String | Null,
?   suburb?: StringFilter | String,
?   serviceAreas?: StringFilter | String,
?   postcode?: StringNullableFilter | String | Null,
?   phone?: StringNullableFilter | String | Null,
?   website?: StringNullableFilter | String | Null,
?   logo?: StringNullableFilter | String | Null,
?   status?: EnumBusinessStatusFilter | BusinessStatus,
?   needsReview?: BoolFilter | Boolean,
?   themeId?: StringNullableFilter | String | Null,
?   layoutId?: StringNullableFilter | String | Null,
?   headerStyle?: StringNullableFilter | String | Null,
?   ctaText?: StringNullableFilter | String | Null,
?   ctaStyle?: StringNullableFilter | String | Null,
?   showTestimonials?: BoolFilter | Boolean,
?   showGallery?: BoolFilter | Boolean,
?   showBusinessHours?: BoolFilter | Boolean,
?   facebookUrl?: StringNullableFilter | String | Null,
?   instagramUrl?: StringNullableFilter | String | Null,
?   linkedinUrl?: StringNullableFilter | String | Null,
?   abnVerificationStatus?: StringNullableFilter | String | Null,
?   abnVerificationDate?: DateTimeNullableFilter | DateTime | Null,
?   abnVerificationData?: JsonNullableFilter,
?   abnVerificationNotes?: StringNullableFilter | String | Null,
?   abnVerifiedBy?: StringNullableFilter | String | Null,
?   abnAutoVerified?: BoolFilter | Boolean,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   userId?: StringFilter | String,
?   profileTheme?: JsonNullableFilter,
?   user?: UserScalarRelationFilter | UserWhereInput,
?   content?: ContentListRelationFilter,
?   leads?: LeadListRelationFilter,
?   inquiries?: InquiryListRelationFilter,
?   ownershipClaims?: OwnershipClaimListRelationFilter,
?   customization?: BusinessProfileCustomizationNullableScalarRelationFilter | BusinessProfileCustomizationWhereInput | Null
  },
  include: {
    customization: true
  },
  orderBy: [
    {
      featured: "desc"
    },
    {
      createdAt: "desc"
    }
  ],
  take: 20
}

Unknown argument `published`. Available options are marked with ?.
    at async getBusinesses (app/category/[slug]/page.tsx:41:22)
    at async CategoryPage (app/category/[slug]/page.tsx:78:59)
  39 |   if (!category) return { businesses: [], category: null, suburbsWithBusinesses: [] };
  40 |
> 41 |   const businesses = await prisma.business.findMany({
     |                      ^
  42 |     where: {
  43 |       category: category.name,
  44 |       published: true, {
  clientVersion: '6.15.0',
  digest: '1627251804'
}
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:11:70)
    at Array.find (<anonymous>)
    at Module.generateMetadata (app/category/[slug]/layout.tsx:11:40)
   9 |
  10 | export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
> 11 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  12 |   
  13 |   if (!category) {
  14 |     return {
 GET /category/plumbing 500 in 234ms
 GET /api/auth/session 200 in 1403ms
 âœ“ Compiled /suburb/[slug] in 240ms (1721 modules)
 âš  Fast Refresh had to perform a full reload due to a runtime error.
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:56:70)
    at Array.find (<anonymous>)
    at CategoryLayout (app/category/[slug]/layout.tsx:56:40)
  54 |
  55 | export default function CategoryLayout({ params, children }: Props) {
> 56 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  57 |   
  58 |   if (!category) {
  59 |     notFound();
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at CategoryPage (app/category/[slug]/page.tsx:78:86)
  76 |
  77 | export default async function CategoryPage({ params }: CategoryPageProps) {
> 78 |   const { businesses, category, suburbsWithBusinesses } = await getBusinesses(params.slug);
     |                                                                                      ^
  79 |
  80 |   if (!category) {
  81 |     notFound();
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:11:70)
    at Array.find (<anonymous>)
    at Module.generateMetadata (app/category/[slug]/layout.tsx:11:40)
   9 |
  10 | export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
> 11 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  12 |   
  13 |   if (!category) {
  14 |     return {
 âš  metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
 â¨¯ Error [PrismaClientValidationError]: 
Invalid `prisma.business.findMany()` invocation:

{
  where: {
    category: "Plumbing",
    published: true,
    ~~~~~~~~~
?   AND?: BusinessWhereInput | BusinessWhereInput[],
?   OR?: BusinessWhereInput[],
?   NOT?: BusinessWhereInput | BusinessWhereInput[],
?   id?: StringFilter | String,
?   slug?: StringFilter | String,
?   name?: StringFilter | String,
?   abn?: StringNullableFilter | String | Null,
?   email?: StringFilter | String,
?   bio?: StringNullableFilter | String | Null,
?   suburb?: StringFilter | String,
?   serviceAreas?: StringFilter | String,
?   postcode?: StringNullableFilter | String | Null,
?   phone?: StringNullableFilter | String | Null,
?   website?: StringNullableFilter | String | Null,
?   logo?: StringNullableFilter | String | Null,
?   status?: EnumBusinessStatusFilter | BusinessStatus,
?   needsReview?: BoolFilter | Boolean,
?   themeId?: StringNullableFilter | String | Null,
?   layoutId?: StringNullableFilter | String | Null,
?   headerStyle?: StringNullableFilter | String | Null,
?   ctaText?: StringNullableFilter | String | Null,
?   ctaStyle?: StringNullableFilter | String | Null,
?   showTestimonials?: BoolFilter | Boolean,
?   showGallery?: BoolFilter | Boolean,
?   showBusinessHours?: BoolFilter | Boolean,
?   facebookUrl?: StringNullableFilter | String | Null,
?   instagramUrl?: StringNullableFilter | String | Null,
?   linkedinUrl?: StringNullableFilter | String | Null,
?   abnVerificationStatus?: StringNullableFilter | String | Null,
?   abnVerificationDate?: DateTimeNullableFilter | DateTime | Null,
?   abnVerificationData?: JsonNullableFilter,
?   abnVerificationNotes?: StringNullableFilter | String | Null,
?   abnVerifiedBy?: StringNullableFilter | String | Null,
?   abnAutoVerified?: BoolFilter | Boolean,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   userId?: StringFilter | String,
?   profileTheme?: JsonNullableFilter,
?   user?: UserScalarRelationFilter | UserWhereInput,
?   content?: ContentListRelationFilter,
?   leads?: LeadListRelationFilter,
?   inquiries?: InquiryListRelationFilter,
?   ownershipClaims?: OwnershipClaimListRelationFilter,
?   customization?: BusinessProfileCustomizationNullableScalarRelationFilter | BusinessProfileCustomizationWhereInput | Null
  },
  include: {
    customization: true
  },
  orderBy: [
    {
      featured: "desc"
    },
    {
      createdAt: "desc"
    }
  ],
  take: 20
}

Unknown argument `published`. Available options are marked with ?.
    at async getBusinesses (app/category/[slug]/page.tsx:41:22)
    at async CategoryPage (app/category/[slug]/page.tsx:78:59)
  39 |   if (!category) return { businesses: [], category: null, suburbsWithBusinesses: [] };
  40 |
> 41 |   const businesses = await prisma.business.findMany({
     |                      ^
  42 |     where: {
  43 |       category: category.name,
  44 |       published: true, {
  clientVersion: '6.15.0',
  digest: '1627251804'
}
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:11:70)
    at Array.find (<anonymous>)
    at Module.generateMetadata (app/category/[slug]/layout.tsx:11:40)
   9 |
  10 | export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
> 11 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  12 |   
  13 |   if (!category) {
  14 |     return {
 GET /category/plumbing 500 in 215ms
Error: Route "/suburb/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at SuburbLayout (app/suburb/[slug]/layout.tsx:63:42)
  61 |
  62 | export default function SuburbLayout({ params, children }: Props) {
> 63 |   const suburb = findSuburbBySlug(params.slug);
     |                                          ^
  64 |   
  65 |   if (!suburb) {
  66 |     notFound();
Error: Route "/suburb/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at SuburbPage (app/suburb/[slug]/page.tsx:96:42)
  94 |
  95 | export default async function SuburbPage({ params }: SuburbPageProps) {
> 96 |   const suburb = findSuburbBySlug(params.slug);
     |                                          ^
  97 |   
  98 |   if (!suburb) {
  99 |     notFound();
 â¨¯ TypeError: Cannot read properties of undefined (reading 'toLowerCase')
    at eval (app/suburb/[slug]/layout.tsx:13:17)
    at Array.find (<anonymous>)
    at findSuburbBySlug (app/suburb/[slug]/layout.tsx:11:28)
    at SuburbLayout (app/suburb/[slug]/layout.tsx:63:18)
  11 |   return MELBOURNE_SUBURBS.find(suburb => 
  12 |     suburb.id === slug || 
> 13 |     suburb.name.toLowerCase().replace(/\s+/g, '-') === slug.toLowerCase()
     |                 ^
  14 |   );
  15 | }
  16 | {
  digest: '2188434829'
}
 â¨¯ TypeError: Cannot read properties of undefined (reading 'toLowerCase')
    at eval (app/suburb/[slug]/page.tsx:31:17)
    at Array.find (<anonymous>)
    at findSuburbBySlug (app/suburb/[slug]/page.tsx:29:28)
    at SuburbPage (app/suburb/[slug]/page.tsx:96:18)
  29 |   return MELBOURNE_SUBURBS.find(suburb => 
  30 |     suburb.id === slug || 
> 31 |     suburb.name.toLowerCase().replace(/\s+/g, '-') === slug.toLowerCase()
     |                 ^
  32 |   );
  33 | }
  34 | {
  digest: '1353380502'
}
Error: Route "/suburb/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at Module.generateMetadata (app/suburb/[slug]/layout.tsx:18:42)
  16 |
  17 | export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
> 18 |   const suburb = findSuburbBySlug(params.slug);
     |                                          ^
  19 |   
  20 |   if (!suburb) {
  21 |     return {
Error: Route "/suburb/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at Module.generateMetadata (app/suburb/[slug]/layout.tsx:18:42)
  16 |
  17 | export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
> 18 |   const suburb = findSuburbBySlug(params.slug);
     |                                          ^
  19 |   
  20 |   if (!suburb) {
  21 |     return {
 GET /suburb/richmond 500 in 790ms
Error: Route "/suburb/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at SuburbLayout (app/suburb/[slug]/layout.tsx:63:42)
  61 |
  62 | export default function SuburbLayout({ params, children }: Props) {
> 63 |   const suburb = findSuburbBySlug(params.slug);
     |                                          ^
  64 |   
  65 |   if (!suburb) {
  66 |     notFound();
Error: Route "/suburb/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at SuburbPage (app/suburb/[slug]/page.tsx:96:42)
  94 |
  95 | export default async function SuburbPage({ params }: SuburbPageProps) {
> 96 |   const suburb = findSuburbBySlug(params.slug);
     |                                          ^
  97 |   
  98 |   if (!suburb) {
  99 |     notFound();
 â¨¯ TypeError: Cannot read properties of undefined (reading 'toLowerCase')
    at eval (app/suburb/[slug]/layout.tsx:13:17)
    at Array.find (<anonymous>)
    at findSuburbBySlug (app/suburb/[slug]/layout.tsx:11:28)
    at SuburbLayout (app/suburb/[slug]/layout.tsx:63:18)
  11 |   return MELBOURNE_SUBURBS.find(suburb => 
  12 |     suburb.id === slug || 
> 13 |     suburb.name.toLowerCase().replace(/\s+/g, '-') === slug.toLowerCase()
     |                 ^
  14 |   );
  15 | }
  16 | {
  digest: '2188434829'
}
 â¨¯ TypeError: Cannot read properties of undefined (reading 'toLowerCase')
    at eval (app/suburb/[slug]/page.tsx:31:17)
    at Array.find (<anonymous>)
    at findSuburbBySlug (app/suburb/[slug]/page.tsx:29:28)
    at SuburbPage (app/suburb/[slug]/page.tsx:96:18)
  29 |   return MELBOURNE_SUBURBS.find(suburb => 
  30 |     suburb.id === slug || 
> 31 |     suburb.name.toLowerCase().replace(/\s+/g, '-') === slug.toLowerCase()
     |                 ^
  32 |   );
  33 | }
  34 | {
  digest: '1353380502'
}
Error: Route "/suburb/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at Module.generateMetadata (app/suburb/[slug]/layout.tsx:18:42)
  16 |
  17 | export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
> 18 |   const suburb = findSuburbBySlug(params.slug);
     |                                          ^
  19 |   
  20 |   if (!suburb) {
  21 |     return {
Error: Route "/suburb/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at Module.generateMetadata (app/suburb/[slug]/layout.tsx:18:42)
  16 |
  17 | export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
> 18 |   const suburb = findSuburbBySlug(params.slug);
     |                                          ^
  19 |   
  20 |   if (!suburb) {
  21 |     return {
 GET /suburb/fitzroy 500 in 87ms
 âœ“ Compiled /category in 224ms (1724 modules)
 âš  metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
 â¨¯ Error [PrismaClientValidationError]: 
Invalid `prisma.business.groupBy()` invocation:

{
  select: {
    _count: {
      select: {
        category: true
      }
    },
    category: true
  },
  by: [
    "category"
  ],
  where: {
    published: true,
    ~~~~~~~~~
?   AND?: BusinessWhereInput | BusinessWhereInput[],
?   OR?: BusinessWhereInput[],
?   NOT?: BusinessWhereInput | BusinessWhereInput[],
?   id?: StringFilter | String,
?   slug?: StringFilter | String,
?   name?: StringFilter | String,
?   abn?: StringNullableFilter | String | Null,
?   email?: StringFilter | String,
?   bio?: StringNullableFilter | String | Null,
?   suburb?: StringFilter | String,
?   serviceAreas?: StringFilter | String,
?   postcode?: StringNullableFilter | String | Null,
?   phone?: StringNullableFilter | String | Null,
?   website?: StringNullableFilter | String | Null,
?   logo?: StringNullableFilter | String | Null,
?   category?: StringNullableFilter | String | Null,
?   status?: EnumBusinessStatusFilter | BusinessStatus,
?   needsReview?: BoolFilter | Boolean,
?   themeId?: StringNullableFilter | String | Null,
?   layoutId?: StringNullableFilter | String | Null,
?   headerStyle?: StringNullableFilter | String | Null,
?   ctaText?: StringNullableFilter | String | Null,
?   ctaStyle?: StringNullableFilter | String | Null,
?   showTestimonials?: BoolFilter | Boolean,
?   showGallery?: BoolFilter | Boolean,
?   showBusinessHours?: BoolFilter | Boolean,
?   facebookUrl?: StringNullableFilter | String | Null,
?   instagramUrl?: StringNullableFilter | String | Null,
?   linkedinUrl?: StringNullableFilter | String | Null,
?   abnVerificationStatus?: StringNullableFilter | String | Null,
?   abnVerificationDate?: DateTimeNullableFilter | DateTime | Null,
?   abnVerificationData?: JsonNullableFilter,
?   abnVerificationNotes?: StringNullableFilter | String | Null,
?   abnVerifiedBy?: StringNullableFilter | String | Null,
?   abnAutoVerified?: BoolFilter | Boolean,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   userId?: StringFilter | String,
?   profileTheme?: JsonNullableFilter,
?   user?: UserScalarRelationFilter | UserWhereInput,
?   content?: ContentListRelationFilter,
?   leads?: LeadListRelationFilter,
?   inquiries?: InquiryListRelationFilter,
?   ownershipClaims?: OwnershipClaimListRelationFilter,
?   customization?: BusinessProfileCustomizationNullableScalarRelationFilter | BusinessProfileCustomizationWhereInput | Null
  },
  orderBy: {
    _count: {
      category: "desc"
    }
  }
}

Unknown argument `published`. Available options are marked with ?.
    at async getCategoryStats (app/category/page.tsx:20:25)
    at async CategoriesPage (app/category/page.tsx:39:25)
  18 | async function getCategoryStats() {
  19 |   // Get business counts per category
> 20 |   const categoryStats = await prisma.business.groupBy({
     |                         ^
  21 |     by: ['category'],
  22 |     where: {
  23 |       published: true, {
  clientVersion: '6.15.0',
  digest: '3423921557'
}
 âš  Fast Refresh had to perform a full reload due to a runtime error.
 âš  Fast Refresh had to perform a full reload due to a runtime error.
 âš  Fast Refresh had to perform a full reload due to a runtime error.
 GET /category 500 in 472ms
Error: Route "/suburb/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at SuburbLayout (app/suburb/[slug]/layout.tsx:63:42)
  61 |
  62 | export default function SuburbLayout({ params, children }: Props) {
> 63 |   const suburb = findSuburbBySlug(params.slug);
     |                                          ^
  64 |   
  65 |   if (!suburb) {
  66 |     notFound();
Error: Route "/suburb/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at SuburbPage (app/suburb/[slug]/page.tsx:96:42)
  94 |
  95 | export default async function SuburbPage({ params }: SuburbPageProps) {
> 96 |   const suburb = findSuburbBySlug(params.slug);
     |                                          ^
  97 |   
  98 |   if (!suburb) {
  99 |     notFound();
 â¨¯ TypeError: Cannot read properties of undefined (reading 'toLowerCase')
    at eval (app/suburb/[slug]/layout.tsx:13:17)
    at Array.find (<anonymous>)
    at findSuburbBySlug (app/suburb/[slug]/layout.tsx:11:28)
    at SuburbLayout (app/suburb/[slug]/layout.tsx:63:18)
  11 |   return MELBOURNE_SUBURBS.find(suburb => 
  12 |     suburb.id === slug || 
> 13 |     suburb.name.toLowerCase().replace(/\s+/g, '-') === slug.toLowerCase()
     |                 ^
  14 |   );
  15 | }
  16 | {
  digest: '2188434829'
}
 â¨¯ TypeError: Cannot read properties of undefined (reading 'toLowerCase')
    at eval (app/suburb/[slug]/page.tsx:31:17)
    at Array.find (<anonymous>)
    at findSuburbBySlug (app/suburb/[slug]/page.tsx:29:28)
    at SuburbPage (app/suburb/[slug]/page.tsx:96:18)
  29 |   return MELBOURNE_SUBURBS.find(suburb => 
  30 |     suburb.id === slug || 
> 31 |     suburb.name.toLowerCase().replace(/\s+/g, '-') === slug.toLowerCase()
     |                 ^
  32 |   );
  33 | }
  34 | {
  digest: '1353380502'
}
Error: Route "/suburb/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at Module.generateMetadata (app/suburb/[slug]/layout.tsx:18:42)
  16 |
  17 | export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
> 18 |   const suburb = findSuburbBySlug(params.slug);
     |                                          ^
  19 |   
  20 |   if (!suburb) {
  21 |     return {
Error: Route "/suburb/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at Module.generateMetadata (app/suburb/[slug]/layout.tsx:18:42)
  16 |
  17 | export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
> 18 |   const suburb = findSuburbBySlug(params.slug);
     |                                          ^
  19 |   
  20 |   if (!suburb) {
  21 |     return {
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:56:70)
    at Array.find (<anonymous>)
    at CategoryLayout (app/category/[slug]/layout.tsx:56:40)
  54 |
  55 | export default function CategoryLayout({ params, children }: Props) {
> 56 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  57 |   
  58 |   if (!category) {
  59 |     notFound();
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at CategoryPage (app/category/[slug]/page.tsx:78:86)
  76 |
  77 | export default async function CategoryPage({ params }: CategoryPageProps) {
> 78 |   const { businesses, category, suburbsWithBusinesses } = await getBusinesses(params.slug);
     |                                                                                      ^
  79 |
  80 |   if (!category) {
  81 |     notFound();
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:11:70)
    at Array.find (<anonymous>)
    at Module.generateMetadata (app/category/[slug]/layout.tsx:11:40)
   9 |
  10 | export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
> 11 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  12 |   
  13 |   if (!category) {
  14 |     return {
 â¨¯ Error [PrismaClientValidationError]: 
Invalid `prisma.business.findMany()` invocation:

{
  where: {
    category: "Plumbing",
    published: true,
    ~~~~~~~~~
?   AND?: BusinessWhereInput | BusinessWhereInput[],
?   OR?: BusinessWhereInput[],
?   NOT?: BusinessWhereInput | BusinessWhereInput[],
?   id?: StringFilter | String,
?   slug?: StringFilter | String,
?   name?: StringFilter | String,
?   abn?: StringNullableFilter | String | Null,
?   email?: StringFilter | String,
?   bio?: StringNullableFilter | String | Null,
?   suburb?: StringFilter | String,
?   serviceAreas?: StringFilter | String,
?   postcode?: StringNullableFilter | String | Null,
?   phone?: StringNullableFilter | String | Null,
?   website?: StringNullableFilter | String | Null,
?   logo?: StringNullableFilter | String | Null,
?   status?: EnumBusinessStatusFilter | BusinessStatus,
?   needsReview?: BoolFilter | Boolean,
?   themeId?: StringNullableFilter | String | Null,
?   layoutId?: StringNullableFilter | String | Null,
?   headerStyle?: StringNullableFilter | String | Null,
?   ctaText?: StringNullableFilter | String | Null,
?   ctaStyle?: StringNullableFilter | String | Null,
?   showTestimonials?: BoolFilter | Boolean,
?   showGallery?: BoolFilter | Boolean,
?   showBusinessHours?: BoolFilter | Boolean,
?   facebookUrl?: StringNullableFilter | String | Null,
?   instagramUrl?: StringNullableFilter | String | Null,
?   linkedinUrl?: StringNullableFilter | String | Null,
?   abnVerificationStatus?: StringNullableFilter | String | Null,
?   abnVerificationDate?: DateTimeNullableFilter | DateTime | Null,
?   abnVerificationData?: JsonNullableFilter,
?   abnVerificationNotes?: StringNullableFilter | String | Null,
?   abnVerifiedBy?: StringNullableFilter | String | Null,
?   abnAutoVerified?: BoolFilter | Boolean,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   userId?: StringFilter | String,
?   profileTheme?: JsonNullableFilter,
?   user?: UserScalarRelationFilter | UserWhereInput,
?   content?: ContentListRelationFilter,
?   leads?: LeadListRelationFilter,
?   inquiries?: InquiryListRelationFilter,
?   ownershipClaims?: OwnershipClaimListRelationFilter,
?   customization?: BusinessProfileCustomizationNullableScalarRelationFilter | BusinessProfileCustomizationWhereInput | Null
  },
  include: {
    customization: true
  },
  orderBy: [
    {
      featured: "desc"
    },
    {
      createdAt: "desc"
    }
  ],
  take: 20
}

Unknown argument `published`. Available options are marked with ?.
    at async getBusinesses (app/category/[slug]/page.tsx:41:22)
    at async CategoryPage (app/category/[slug]/page.tsx:78:59)
  39 |   if (!category) return { businesses: [], category: null, suburbsWithBusinesses: [] };
  40 |
> 41 |   const businesses = await prisma.business.findMany({
     |                      ^
  42 |     where: {
  43 |       category: category.name,
  44 |       published: true, {
  clientVersion: '6.15.0',
  digest: '1627251804'
}
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:11:70)
    at Array.find (<anonymous>)
    at Module.generateMetadata (app/category/[slug]/layout.tsx:11:40)
   9 |
  10 | export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
> 11 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  12 |   
  13 |   if (!category) {
  14 |     return {
Error: Route "/suburb/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at SuburbLayout (app/suburb/[slug]/layout.tsx:63:42)
  61 |
  62 | export default function SuburbLayout({ params, children }: Props) {
> 63 |   const suburb = findSuburbBySlug(params.slug);
     |                                          ^
  64 |   
  65 |   if (!suburb) {
  66 |     notFound();
Error: Route "/suburb/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at SuburbPage (app/suburb/[slug]/page.tsx:96:42)
  94 |
  95 | export default async function SuburbPage({ params }: SuburbPageProps) {
> 96 |   const suburb = findSuburbBySlug(params.slug);
     |                                          ^
  97 |   
  98 |   if (!suburb) {
  99 |     notFound();
 â¨¯ TypeError: Cannot read properties of undefined (reading 'toLowerCase')
    at eval (app/suburb/[slug]/layout.tsx:13:17)
    at Array.find (<anonymous>)
    at findSuburbBySlug (app/suburb/[slug]/layout.tsx:11:28)
    at SuburbLayout (app/suburb/[slug]/layout.tsx:63:18)
  11 |   return MELBOURNE_SUBURBS.find(suburb => 
  12 |     suburb.id === slug || 
> 13 |     suburb.name.toLowerCase().replace(/\s+/g, '-') === slug.toLowerCase()
     |                 ^
  14 |   );
  15 | }
  16 | {
  digest: '2188434829'
}
 â¨¯ TypeError: Cannot read properties of undefined (reading 'toLowerCase')
    at eval (app/suburb/[slug]/page.tsx:31:17)
    at Array.find (<anonymous>)
    at findSuburbBySlug (app/suburb/[slug]/page.tsx:29:28)
    at SuburbPage (app/suburb/[slug]/page.tsx:96:18)
  29 |   return MELBOURNE_SUBURBS.find(suburb => 
  30 |     suburb.id === slug || 
> 31 |     suburb.name.toLowerCase().replace(/\s+/g, '-') === slug.toLowerCase()
     |                 ^
  32 |   );
  33 | }
  34 | {
  digest: '1353380502'
}
Error: Route "/suburb/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at Module.generateMetadata (app/suburb/[slug]/layout.tsx:18:42)
  16 |
  17 | export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
> 18 |   const suburb = findSuburbBySlug(params.slug);
     |                                          ^
  19 |   
  20 |   if (!suburb) {
  21 |     return {
Error: Route "/suburb/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at Module.generateMetadata (app/suburb/[slug]/layout.tsx:18:42)
  16 |
  17 | export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
> 18 |   const suburb = findSuburbBySlug(params.slug);
     |                                          ^
  19 |   
  20 |   if (!suburb) {
  21 |     return {
 GET /suburb/richmond 500 in 351ms
 GET /suburb/fitzroy 500 in 304ms
 GET /category/plumbing 500 in 335ms
 âœ“ Compiled /suburb in 267ms (1727 modules)
 âš  metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
 â¨¯ Error [PrismaClientValidationError]: 
Invalid `prisma.business.groupBy()` invocation:

{
  select: {
    _count: {
      select: {
        suburb: true
      }
    },
    suburb: true
  },
  by: [
    "suburb"
  ],
  where: {
    published: true,
    ~~~~~~~~~
?   AND?: BusinessWhereInput | BusinessWhereInput[],
?   OR?: BusinessWhereInput[],
?   NOT?: BusinessWhereInput | BusinessWhereInput[],
?   id?: StringFilter | String,
?   slug?: StringFilter | String,
?   name?: StringFilter | String,
?   abn?: StringNullableFilter | String | Null,
?   email?: StringFilter | String,
?   bio?: StringNullableFilter | String | Null,
?   suburb?: StringFilter | String,
?   serviceAreas?: StringFilter | String,
?   postcode?: StringNullableFilter | String | Null,
?   phone?: StringNullableFilter | String | Null,
?   website?: StringNullableFilter | String | Null,
?   logo?: StringNullableFilter | String | Null,
?   category?: StringNullableFilter | String | Null,
?   status?: EnumBusinessStatusFilter | BusinessStatus,
?   needsReview?: BoolFilter | Boolean,
?   themeId?: StringNullableFilter | String | Null,
?   layoutId?: StringNullableFilter | String | Null,
?   headerStyle?: StringNullableFilter | String | Null,
?   ctaText?: StringNullableFilter | String | Null,
?   ctaStyle?: StringNullableFilter | String | Null,
?   showTestimonials?: BoolFilter | Boolean,
?   showGallery?: BoolFilter | Boolean,
?   showBusinessHours?: BoolFilter | Boolean,
?   facebookUrl?: StringNullableFilter | String | Null,
?   instagramUrl?: StringNullableFilter | String | Null,
?   linkedinUrl?: StringNullableFilter | String | Null,
?   abnVerificationStatus?: StringNullableFilter | String | Null,
?   abnVerificationDate?: DateTimeNullableFilter | DateTime | Null,
?   abnVerificationData?: JsonNullableFilter,
?   abnVerificationNotes?: StringNullableFilter | String | Null,
?   abnVerifiedBy?: StringNullableFilter | String | Null,
?   abnAutoVerified?: BoolFilter | Boolean,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   userId?: StringFilter | String,
?   profileTheme?: JsonNullableFilter,
?   user?: UserScalarRelationFilter | UserWhereInput,
?   content?: ContentListRelationFilter,
?   leads?: LeadListRelationFilter,
?   inquiries?: InquiryListRelationFilter,
?   ownershipClaims?: OwnershipClaimListRelationFilter,
?   customization?: BusinessProfileCustomizationNullableScalarRelationFilter | BusinessProfileCustomizationWhereInput | Null
  },
  orderBy: {
    _count: {
      suburb: "desc"
    }
  },
  take: 50
}

Unknown argument `published`. Available options are marked with ?.
    at async getSuburbStats (app/suburb/page.tsx:20:23)
    at async SuburbsPage (app/suburb/page.tsx:40:23)
  18 | async function getSuburbStats() {
  19 |   // Get business counts per suburb (top suburbs only)
> 20 |   const suburbStats = await prisma.business.groupBy({
     |                       ^
  21 |     by: ['suburb'],
  22 |     where: {
  23 |       published: true, {
  clientVersion: '6.15.0',
  digest: '3786003297'
}
 âš  Fast Refresh had to perform a full reload due to a runtime error.
 âš  Fast Refresh had to perform a full reload due to a runtime error.
 âš  Fast Refresh had to perform a full reload due to a runtime error.
 GET /suburb 500 in 450ms
 âš  Fast Refresh had to perform a full reload due to a runtime error.
 â¨¯ Error [PrismaClientValidationError]: 
Invalid `prisma.business.groupBy()` invocation:

{
  select: {
    _count: {
      select: {
        category: true
      }
    },
    category: true
  },
  by: [
    "category"
  ],
  where: {
    published: true,
    ~~~~~~~~~
?   AND?: BusinessWhereInput | BusinessWhereInput[],
?   OR?: BusinessWhereInput[],
?   NOT?: BusinessWhereInput | BusinessWhereInput[],
?   id?: StringFilter | String,
?   slug?: StringFilter | String,
?   name?: StringFilter | String,
?   abn?: StringNullableFilter | String | Null,
?   email?: StringFilter | String,
?   bio?: StringNullableFilter | String | Null,
?   suburb?: StringFilter | String,
?   serviceAreas?: StringFilter | String,
?   postcode?: StringNullableFilter | String | Null,
?   phone?: StringNullableFilter | String | Null,
?   website?: StringNullableFilter | String | Null,
?   logo?: StringNullableFilter | String | Null,
?   category?: StringNullableFilter | String | Null,
?   status?: EnumBusinessStatusFilter | BusinessStatus,
?   needsReview?: BoolFilter | Boolean,
?   themeId?: StringNullableFilter | String | Null,
?   layoutId?: StringNullableFilter | String | Null,
?   headerStyle?: StringNullableFilter | String | Null,
?   ctaText?: StringNullableFilter | String | Null,
?   ctaStyle?: StringNullableFilter | String | Null,
?   showTestimonials?: BoolFilter | Boolean,
?   showGallery?: BoolFilter | Boolean,
?   showBusinessHours?: BoolFilter | Boolean,
?   facebookUrl?: StringNullableFilter | String | Null,
?   instagramUrl?: StringNullableFilter | String | Null,
?   linkedinUrl?: StringNullableFilter | String | Null,
?   abnVerificationStatus?: StringNullableFilter | String | Null,
?   abnVerificationDate?: DateTimeNullableFilter | DateTime | Null,
?   abnVerificationData?: JsonNullableFilter,
?   abnVerificationNotes?: StringNullableFilter | String | Null,
?   abnVerifiedBy?: StringNullableFilter | String | Null,
?   abnAutoVerified?: BoolFilter | Boolean,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   userId?: StringFilter | String,
?   profileTheme?: JsonNullableFilter,
?   user?: UserScalarRelationFilter | UserWhereInput,
?   content?: ContentListRelationFilter,
?   leads?: LeadListRelationFilter,
?   inquiries?: InquiryListRelationFilter,
?   ownershipClaims?: OwnershipClaimListRelationFilter,
?   customization?: BusinessProfileCustomizationNullableScalarRelationFilter | BusinessProfileCustomizationWhereInput | Null
  },
  orderBy: {
    _count: {
      category: "desc"
    }
  }
}

Unknown argument `published`. Available options are marked with ?.
    at async getCategoryStats (app/category/page.tsx:20:25)
    at async CategoriesPage (app/category/page.tsx:39:25)
  18 | async function getCategoryStats() {
  19 |   // Get business counts per category
> 20 |   const categoryStats = await prisma.business.groupBy({
     |                         ^
  21 |     by: ['category'],
  22 |     where: {
  23 |       published: true, {
  clientVersion: '6.15.0',
  digest: '3423921557'
}
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:56:70)
    at Array.find (<anonymous>)
    at CategoryLayout (app/category/[slug]/layout.tsx:56:40)
  54 |
  55 | export default function CategoryLayout({ params, children }: Props) {
> 56 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  57 |   
  58 |   if (!category) {
  59 |     notFound();
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at CategoryPage (app/category/[slug]/page.tsx:78:86)
  76 |
  77 | export default async function CategoryPage({ params }: CategoryPageProps) {
> 78 |   const { businesses, category, suburbsWithBusinesses } = await getBusinesses(params.slug);
     |                                                                                      ^
  79 |
  80 |   if (!category) {
  81 |     notFound();
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:11:70)
    at Array.find (<anonymous>)
    at Module.generateMetadata (app/category/[slug]/layout.tsx:11:40)
   9 |
  10 | export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
> 11 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  12 |   
  13 |   if (!category) {
  14 |     return {
 â¨¯ Error [PrismaClientValidationError]: 
Invalid `prisma.business.findMany()` invocation:

{
  where: {
    category: "Plumbing",
    published: true,
    ~~~~~~~~~
?   AND?: BusinessWhereInput | BusinessWhereInput[],
?   OR?: BusinessWhereInput[],
?   NOT?: BusinessWhereInput | BusinessWhereInput[],
?   id?: StringFilter | String,
?   slug?: StringFilter | String,
?   name?: StringFilter | String,
?   abn?: StringNullableFilter | String | Null,
?   email?: StringFilter | String,
?   bio?: StringNullableFilter | String | Null,
?   suburb?: StringFilter | String,
?   serviceAreas?: StringFilter | String,
?   postcode?: StringNullableFilter | String | Null,
?   phone?: StringNullableFilter | String | Null,
?   website?: StringNullableFilter | String | Null,
?   logo?: StringNullableFilter | String | Null,
?   status?: EnumBusinessStatusFilter | BusinessStatus,
?   needsReview?: BoolFilter | Boolean,
?   themeId?: StringNullableFilter | String | Null,
?   layoutId?: StringNullableFilter | String | Null,
?   headerStyle?: StringNullableFilter | String | Null,
?   ctaText?: StringNullableFilter | String | Null,
?   ctaStyle?: StringNullableFilter | String | Null,
?   showTestimonials?: BoolFilter | Boolean,
?   showGallery?: BoolFilter | Boolean,
?   showBusinessHours?: BoolFilter | Boolean,
?   facebookUrl?: StringNullableFilter | String | Null,
?   instagramUrl?: StringNullableFilter | String | Null,
?   linkedinUrl?: StringNullableFilter | String | Null,
?   abnVerificationStatus?: StringNullableFilter | String | Null,
?   abnVerificationDate?: DateTimeNullableFilter | DateTime | Null,
?   abnVerificationData?: JsonNullableFilter,
?   abnVerificationNotes?: StringNullableFilter | String | Null,
?   abnVerifiedBy?: StringNullableFilter | String | Null,
?   abnAutoVerified?: BoolFilter | Boolean,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   userId?: StringFilter | String,
?   profileTheme?: JsonNullableFilter,
?   user?: UserScalarRelationFilter | UserWhereInput,
?   content?: ContentListRelationFilter,
?   leads?: LeadListRelationFilter,
?   inquiries?: InquiryListRelationFilter,
?   ownershipClaims?: OwnershipClaimListRelationFilter,
?   customization?: BusinessProfileCustomizationNullableScalarRelationFilter | BusinessProfileCustomizationWhereInput | Null
  },
  include: {
    customization: true
  },
  orderBy: [
    {
      featured: "desc"
    },
    {
      createdAt: "desc"
    }
  ],
  take: 20
}

Unknown argument `published`. Available options are marked with ?.
    at async getBusinesses (app/category/[slug]/page.tsx:41:22)
    at async CategoryPage (app/category/[slug]/page.tsx:78:59)
  39 |   if (!category) return { businesses: [], category: null, suburbsWithBusinesses: [] };
  40 |
> 41 |   const businesses = await prisma.business.findMany({
     |                      ^
  42 |     where: {
  43 |       category: category.name,
  44 |       published: true, {
  clientVersion: '6.15.0',
  digest: '1627251804'
}
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:11:70)
    at Array.find (<anonymous>)
    at Module.generateMetadata (app/category/[slug]/layout.tsx:11:40)
   9 |
  10 | export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
> 11 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  12 |   
  13 |   if (!category) {
  14 |     return {
Error: Route "/suburb/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at SuburbLayout (app/suburb/[slug]/layout.tsx:63:42)
  61 |
  62 | export default function SuburbLayout({ params, children }: Props) {
> 63 |   const suburb = findSuburbBySlug(params.slug);
     |                                          ^
  64 |   
  65 |   if (!suburb) {
  66 |     notFound();
Error: Route "/suburb/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at SuburbPage (app/suburb/[slug]/page.tsx:96:42)
  94 |
  95 | export default async function SuburbPage({ params }: SuburbPageProps) {
> 96 |   const suburb = findSuburbBySlug(params.slug);
     |                                          ^
  97 |   
  98 |   if (!suburb) {
  99 |     notFound();
 â¨¯ TypeError: Cannot read properties of undefined (reading 'toLowerCase')
    at eval (app/suburb/[slug]/layout.tsx:13:17)
    at Array.find (<anonymous>)
    at findSuburbBySlug (app/suburb/[slug]/layout.tsx:11:28)
    at SuburbLayout (app/suburb/[slug]/layout.tsx:63:18)
  11 |   return MELBOURNE_SUBURBS.find(suburb => 
  12 |     suburb.id === slug || 
> 13 |     suburb.name.toLowerCase().replace(/\s+/g, '-') === slug.toLowerCase()
     |                 ^
  14 |   );
  15 | }
  16 | {
  digest: '2188434829'
}
 â¨¯ TypeError: Cannot read properties of undefined (reading 'toLowerCase')
    at eval (app/suburb/[slug]/page.tsx:31:17)
    at Array.find (<anonymous>)
    at findSuburbBySlug (app/suburb/[slug]/page.tsx:29:28)
    at SuburbPage (app/suburb/[slug]/page.tsx:96:18)
  29 |   return MELBOURNE_SUBURBS.find(suburb => 
  30 |     suburb.id === slug || 
> 31 |     suburb.name.toLowerCase().replace(/\s+/g, '-') === slug.toLowerCase()
     |                 ^
  32 |   );
  33 | }
  34 | {
  digest: '1353380502'
}
Error: Route "/suburb/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at Module.generateMetadata (app/suburb/[slug]/layout.tsx:18:42)
  16 |
  17 | export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
> 18 |   const suburb = findSuburbBySlug(params.slug);
     |                                          ^
  19 |   
  20 |   if (!suburb) {
  21 |     return {
Error: Route "/suburb/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at Module.generateMetadata (app/suburb/[slug]/layout.tsx:18:42)
  16 |
  17 | export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
> 18 |   const suburb = findSuburbBySlug(params.slug);
     |                                          ^
  19 |   
  20 |   if (!suburb) {
  21 |     return {
 GET /category 500 in 284ms
Error: Route "/suburb/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at SuburbLayout (app/suburb/[slug]/layout.tsx:63:42)
  61 |
  62 | export default function SuburbLayout({ params, children }: Props) {
> 63 |   const suburb = findSuburbBySlug(params.slug);
     |                                          ^
  64 |   
  65 |   if (!suburb) {
  66 |     notFound();
Error: Route "/suburb/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at SuburbPage (app/suburb/[slug]/page.tsx:96:42)
  94 |
  95 | export default async function SuburbPage({ params }: SuburbPageProps) {
> 96 |   const suburb = findSuburbBySlug(params.slug);
     |                                          ^
  97 |   
  98 |   if (!suburb) {
  99 |     notFound();
 â¨¯ TypeError: Cannot read properties of undefined (reading 'toLowerCase')
    at eval (app/suburb/[slug]/layout.tsx:13:17)
    at Array.find (<anonymous>)
    at findSuburbBySlug (app/suburb/[slug]/layout.tsx:11:28)
    at SuburbLayout (app/suburb/[slug]/layout.tsx:63:18)
  11 |   return MELBOURNE_SUBURBS.find(suburb => 
  12 |     suburb.id === slug || 
> 13 |     suburb.name.toLowerCase().replace(/\s+/g, '-') === slug.toLowerCase()
     |                 ^
  14 |   );
  15 | }
  16 | {
  digest: '2188434829'
}
 â¨¯ TypeError: Cannot read properties of undefined (reading 'toLowerCase')
    at eval (app/suburb/[slug]/page.tsx:31:17)
    at Array.find (<anonymous>)
    at findSuburbBySlug (app/suburb/[slug]/page.tsx:29:28)
    at SuburbPage (app/suburb/[slug]/page.tsx:96:18)
  29 |   return MELBOURNE_SUBURBS.find(suburb => 
  30 |     suburb.id === slug || 
> 31 |     suburb.name.toLowerCase().replace(/\s+/g, '-') === slug.toLowerCase()
     |                 ^
  32 |   );
  33 | }
  34 | {
  digest: '1353380502'
}
Error: Route "/suburb/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at Module.generateMetadata (app/suburb/[slug]/layout.tsx:18:42)
  16 |
  17 | export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
> 18 |   const suburb = findSuburbBySlug(params.slug);
     |                                          ^
  19 |   
  20 |   if (!suburb) {
  21 |     return {
Error: Route "/suburb/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at Module.generateMetadata (app/suburb/[slug]/layout.tsx:18:42)
  16 |
  17 | export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
> 18 |   const suburb = findSuburbBySlug(params.slug);
     |                                          ^
  19 |   
  20 |   if (!suburb) {
  21 |     return {
 GET /suburb/fitzroy 500 in 316ms
 GET /category/plumbing 500 in 326ms
 GET /suburb/richmond 500 in 237ms
 âš  Fast Refresh had to perform a full reload due to a runtime error.
 âš  Fast Refresh had to perform a full reload due to a runtime error.
 âš  Fast Refresh had to perform a full reload due to a runtime error.
 âš  Fast Refresh had to perform a full reload due to a runtime error.
 âš  Fast Refresh had to perform a full reload due to a runtime error.
 âœ“ Compiled in 1207ms (1507 modules)
 âš  metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
prisma:query SELECT 1
 â¨¯ Error [PrismaClientValidationError]: 
Invalid `prisma.business.groupBy()` invocation:

{
  select: {
    _count: {
      select: {
        suburb: true
      }
    },
    suburb: true
  },
  by: [
    "suburb"
  ],
  where: {
    published: true,
    ~~~~~~~~~
?   AND?: BusinessWhereInput | BusinessWhereInput[],
?   OR?: BusinessWhereInput[],
?   NOT?: BusinessWhereInput | BusinessWhereInput[],
?   id?: StringFilter | String,
?   slug?: StringFilter | String,
?   name?: StringFilter | String,
?   abn?: StringNullableFilter | String | Null,
?   email?: StringFilter | String,
?   bio?: StringNullableFilter | String | Null,
?   suburb?: StringFilter | String,
?   serviceAreas?: StringFilter | String,
?   postcode?: StringNullableFilter | String | Null,
?   phone?: StringNullableFilter | String | Null,
?   website?: StringNullableFilter | String | Null,
?   logo?: StringNullableFilter | String | Null,
?   category?: StringNullableFilter | String | Null,
?   status?: EnumBusinessStatusFilter | BusinessStatus,
?   needsReview?: BoolFilter | Boolean,
?   themeId?: StringNullableFilter | String | Null,
?   layoutId?: StringNullableFilter | String | Null,
?   headerStyle?: StringNullableFilter | String | Null,
?   ctaText?: StringNullableFilter | String | Null,
?   ctaStyle?: StringNullableFilter | String | Null,
?   showTestimonials?: BoolFilter | Boolean,
?   showGallery?: BoolFilter | Boolean,
?   showBusinessHours?: BoolFilter | Boolean,
?   facebookUrl?: StringNullableFilter | String | Null,
?   instagramUrl?: StringNullableFilter | String | Null,
?   linkedinUrl?: StringNullableFilter | String | Null,
?   abnVerificationStatus?: StringNullableFilter | String | Null,
?   abnVerificationDate?: DateTimeNullableFilter | DateTime | Null,
?   abnVerificationData?: JsonNullableFilter,
?   abnVerificationNotes?: StringNullableFilter | String | Null,
?   abnVerifiedBy?: StringNullableFilter | String | Null,
?   abnAutoVerified?: BoolFilter | Boolean,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   userId?: StringFilter | String,
?   profileTheme?: JsonNullableFilter,
?   user?: UserScalarRelationFilter | UserWhereInput,
?   content?: ContentListRelationFilter,
?   leads?: LeadListRelationFilter,
?   inquiries?: InquiryListRelationFilter,
?   ownershipClaims?: OwnershipClaimListRelationFilter,
?   customization?: BusinessProfileCustomizationNullableScalarRelationFilter | BusinessProfileCustomizationWhereInput | Null
  },
  orderBy: {
    _count: {
      suburb: "desc"
    }
  },
  take: 50
}

Unknown argument `published`. Available options are marked with ?.
    at async getSuburbStats (app/suburb/page.tsx:20:23)
    at async SuburbsPage (app/suburb/page.tsx:40:23)
  18 | async function getSuburbStats() {
  19 |   // Get business counts per suburb (top suburbs only)
> 20 |   const suburbStats = await prisma.business.groupBy({
     |                       ^
  21 |     by: ['suburb'],
  22 |     where: {
  23 |       published: true, {
  clientVersion: '6.15.0',
  digest: '3786003297'
}
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:56:70)
    at Array.find (<anonymous>)
    at CategoryLayout (app/category/[slug]/layout.tsx:56:40)
  54 |
  55 | export default function CategoryLayout({ params, children }: Props) {
> 56 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  57 |   
  58 |   if (!category) {
  59 |     notFound();
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at CategoryPage (app/category/[slug]/page.tsx:78:86)
  76 |
  77 | export default async function CategoryPage({ params }: CategoryPageProps) {
> 78 |   const { businesses, category, suburbsWithBusinesses } = await getBusinesses(params.slug);
     |                                                                                      ^
  79 |
  80 |   if (!category) {
  81 |     notFound();
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:56:70)
    at Array.find (<anonymous>)
    at CategoryLayout (app/category/[slug]/layout.tsx:56:40)
  54 |
  55 | export default function CategoryLayout({ params, children }: Props) {
> 56 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  57 |   
  58 |   if (!category) {
  59 |     notFound();
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at CategoryPage (app/category/[slug]/page.tsx:78:86)
  76 |
  77 | export default async function CategoryPage({ params }: CategoryPageProps) {
> 78 |   const { businesses, category, suburbsWithBusinesses } = await getBusinesses(params.slug);
     |                                                                                      ^
  79 |
  80 |   if (!category) {
  81 |     notFound();
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:11:70)
    at Array.find (<anonymous>)
    at Module.generateMetadata (app/category/[slug]/layout.tsx:11:40)
   9 |
  10 | export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
> 11 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  12 |   
  13 |   if (!category) {
  14 |     return {
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:11:70)
    at Array.find (<anonymous>)
    at Module.generateMetadata (app/category/[slug]/layout.tsx:11:40)
   9 |
  10 | export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
> 11 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  12 |   
  13 |   if (!category) {
  14 |     return {
 â¨¯ Error [PrismaClientValidationError]: 
Invalid `prisma.business.groupBy()` invocation:

{
  select: {
    _count: {
      select: {
        category: true
      }
    },
    category: true
  },
  by: [
    "category"
  ],
  where: {
    published: true,
    ~~~~~~~~~
?   AND?: BusinessWhereInput | BusinessWhereInput[],
?   OR?: BusinessWhereInput[],
?   NOT?: BusinessWhereInput | BusinessWhereInput[],
?   id?: StringFilter | String,
?   slug?: StringFilter | String,
?   name?: StringFilter | String,
?   abn?: StringNullableFilter | String | Null,
?   email?: StringFilter | String,
?   bio?: StringNullableFilter | String | Null,
?   suburb?: StringFilter | String,
?   serviceAreas?: StringFilter | String,
?   postcode?: StringNullableFilter | String | Null,
?   phone?: StringNullableFilter | String | Null,
?   website?: StringNullableFilter | String | Null,
?   logo?: StringNullableFilter | String | Null,
?   category?: StringNullableFilter | String | Null,
?   status?: EnumBusinessStatusFilter | BusinessStatus,
?   needsReview?: BoolFilter | Boolean,
?   themeId?: StringNullableFilter | String | Null,
?   layoutId?: StringNullableFilter | String | Null,
?   headerStyle?: StringNullableFilter | String | Null,
?   ctaText?: StringNullableFilter | String | Null,
?   ctaStyle?: StringNullableFilter | String | Null,
?   showTestimonials?: BoolFilter | Boolean,
?   showGallery?: BoolFilter | Boolean,
?   showBusinessHours?: BoolFilter | Boolean,
?   facebookUrl?: StringNullableFilter | String | Null,
?   instagramUrl?: StringNullableFilter | String | Null,
?   linkedinUrl?: StringNullableFilter | String | Null,
?   abnVerificationStatus?: StringNullableFilter | String | Null,
?   abnVerificationDate?: DateTimeNullableFilter | DateTime | Null,
?   abnVerificationData?: JsonNullableFilter,
?   abnVerificationNotes?: StringNullableFilter | String | Null,
?   abnVerifiedBy?: StringNullableFilter | String | Null,
?   abnAutoVerified?: BoolFilter | Boolean,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   userId?: StringFilter | String,
?   profileTheme?: JsonNullableFilter,
?   user?: UserScalarRelationFilter | UserWhereInput,
?   content?: ContentListRelationFilter,
?   leads?: LeadListRelationFilter,
?   inquiries?: InquiryListRelationFilter,
?   ownershipClaims?: OwnershipClaimListRelationFilter,
?   customization?: BusinessProfileCustomizationNullableScalarRelationFilter | BusinessProfileCustomizationWhereInput | Null
  },
  orderBy: {
    _count: {
      category: "desc"
    }
  }
}

Unknown argument `published`. Available options are marked with ?.
    at async getCategoryStats (app/category/page.tsx:20:25)
    at async CategoriesPage (app/category/page.tsx:39:25)
  18 | async function getCategoryStats() {
  19 |   // Get business counts per category
> 20 |   const categoryStats = await prisma.business.groupBy({
     |                         ^
  21 |     by: ['category'],
  22 |     where: {
  23 |       published: true, {
  clientVersion: '6.15.0',
  digest: '3423921557'
}
 â¨¯ Error [PrismaClientValidationError]: 
Invalid `prisma.business.findMany()` invocation:

{
  where: {
    category: "Plumbing",
    published: true,
    ~~~~~~~~~
?   AND?: BusinessWhereInput | BusinessWhereInput[],
?   OR?: BusinessWhereInput[],
?   NOT?: BusinessWhereInput | BusinessWhereInput[],
?   id?: StringFilter | String,
?   slug?: StringFilter | String,
?   name?: StringFilter | String,
?   abn?: StringNullableFilter | String | Null,
?   email?: StringFilter | String,
?   bio?: StringNullableFilter | String | Null,
?   suburb?: StringFilter | String,
?   serviceAreas?: StringFilter | String,
?   postcode?: StringNullableFilter | String | Null,
?   phone?: StringNullableFilter | String | Null,
?   website?: StringNullableFilter | String | Null,
?   logo?: StringNullableFilter | String | Null,
?   status?: EnumBusinessStatusFilter | BusinessStatus,
?   needsReview?: BoolFilter | Boolean,
?   themeId?: StringNullableFilter | String | Null,
?   layoutId?: StringNullableFilter | String | Null,
?   headerStyle?: StringNullableFilter | String | Null,
?   ctaText?: StringNullableFilter | String | Null,
?   ctaStyle?: StringNullableFilter | String | Null,
?   showTestimonials?: BoolFilter | Boolean,
?   showGallery?: BoolFilter | Boolean,
?   showBusinessHours?: BoolFilter | Boolean,
?   facebookUrl?: StringNullableFilter | String | Null,
?   instagramUrl?: StringNullableFilter | String | Null,
?   linkedinUrl?: StringNullableFilter | String | Null,
?   abnVerificationStatus?: StringNullableFilter | String | Null,
?   abnVerificationDate?: DateTimeNullableFilter | DateTime | Null,
?   abnVerificationData?: JsonNullableFilter,
?   abnVerificationNotes?: StringNullableFilter | String | Null,
?   abnVerifiedBy?: StringNullableFilter | String | Null,
?   abnAutoVerified?: BoolFilter | Boolean,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   userId?: StringFilter | String,
?   profileTheme?: JsonNullableFilter,
?   user?: UserScalarRelationFilter | UserWhereInput,
?   content?: ContentListRelationFilter,
?   leads?: LeadListRelationFilter,
?   inquiries?: InquiryListRelationFilter,
?   ownershipClaims?: OwnershipClaimListRelationFilter,
?   customization?: BusinessProfileCustomizationNullableScalarRelationFilter | BusinessProfileCustomizationWhereInput | Null
  },
  include: {
    customization: true
  },
  orderBy: [
    {
      featured: "desc"
    },
    {
      createdAt: "desc"
    }
  ],
  take: 20
}

Unknown argument `published`. Available options are marked with ?.
    at async getBusinesses (app/category/[slug]/page.tsx:41:22)
    at async CategoryPage (app/category/[slug]/page.tsx:78:59)
  39 |   if (!category) return { businesses: [], category: null, suburbsWithBusinesses: [] };
  40 |
> 41 |   const businesses = await prisma.business.findMany({
     |                      ^
  42 |     where: {
  43 |       category: category.name,
  44 |       published: true, {
  clientVersion: '6.15.0',
  digest: '1627251804'
}
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:11:70)
    at Array.find (<anonymous>)
    at Module.generateMetadata (app/category/[slug]/layout.tsx:11:40)
   9 |
  10 | export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
> 11 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  12 |   
  13 |   if (!category) {
  14 |     return {
 GET /category/electrician 200 in 658ms
 GET /suburb 500 in 1315ms
 GET /category 500 in 1118ms
 GET /category/plumbing 500 in 1010ms
 âš  Fast Refresh had to perform a full reload due to a runtime error.
 â¨¯ Failed to generate static paths for /category/[slug]:
[Error [PageNotFoundError]: Cannot find module for page: /category/[slug]/page] {
  type: 'PageNotFoundError',
  code: 'ENOENT'
}
 â¨¯ Failed to generate static paths for /category/[slug]:
[Error [PageNotFoundError]: Cannot find module for page: /category/[slug]/page] {
  type: 'PageNotFoundError',
  code: 'ENOENT'
}
 âš  Fast Refresh had to perform a full reload due to a runtime error.
 âœ“ Compiled /_not-found in 311ms (1498 modules)
 âš  metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
 GET /suburb/richmond 404 in 1434ms
 GET /suburb/fitzroy 404 in 1494ms
 âœ“ Compiled /api/auth/[...nextauth] in 148ms (867 modules)
 GET /api/auth/session 200 in 309ms
 GET /api/auth/session 200 in 13ms
 GET /api/auth/session 200 in 13ms
 GET /api/auth/session 200 in 12ms
 âš  Fast Refresh had to perform a full reload due to a runtime error.
 âš  Fast Refresh had to perform a full reload due to a runtime error.
 âš  Fast Refresh had to perform a full reload due to a runtime error.
 âœ“ Compiled in 509ms (1747 modules)
 âœ“ Compiled in 0ms (867 modules)
 âœ“ Compiled in 0ms (867 modules)
 âœ“ Compiled in 1ms (867 modules)
 âš  metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
 â¨¯ Error [PrismaClientValidationError]: 
Invalid `prisma.business.groupBy()` invocation:

{
  select: {
    _count: {
      select: {
        suburb: true
      }
    },
    suburb: true
  },
  by: [
    "suburb"
  ],
  where: {
    published: true,
    ~~~~~~~~~
?   AND?: BusinessWhereInput | BusinessWhereInput[],
?   OR?: BusinessWhereInput[],
?   NOT?: BusinessWhereInput | BusinessWhereInput[],
?   id?: StringFilter | String,
?   slug?: StringFilter | String,
?   name?: StringFilter | String,
?   abn?: StringNullableFilter | String | Null,
?   email?: StringFilter | String,
?   bio?: StringNullableFilter | String | Null,
?   suburb?: StringFilter | String,
?   serviceAreas?: StringFilter | String,
?   postcode?: StringNullableFilter | String | Null,
?   phone?: StringNullableFilter | String | Null,
?   website?: StringNullableFilter | String | Null,
?   logo?: StringNullableFilter | String | Null,
?   category?: StringNullableFilter | String | Null,
?   status?: EnumBusinessStatusFilter | BusinessStatus,
?   needsReview?: BoolFilter | Boolean,
?   themeId?: StringNullableFilter | String | Null,
?   layoutId?: StringNullableFilter | String | Null,
?   headerStyle?: StringNullableFilter | String | Null,
?   ctaText?: StringNullableFilter | String | Null,
?   ctaStyle?: StringNullableFilter | String | Null,
?   showTestimonials?: BoolFilter | Boolean,
?   showGallery?: BoolFilter | Boolean,
?   showBusinessHours?: BoolFilter | Boolean,
?   facebookUrl?: StringNullableFilter | String | Null,
?   instagramUrl?: StringNullableFilter | String | Null,
?   linkedinUrl?: StringNullableFilter | String | Null,
?   abnVerificationStatus?: StringNullableFilter | String | Null,
?   abnVerificationDate?: DateTimeNullableFilter | DateTime | Null,
?   abnVerificationData?: JsonNullableFilter,
?   abnVerificationNotes?: StringNullableFilter | String | Null,
?   abnVerifiedBy?: StringNullableFilter | String | Null,
?   abnAutoVerified?: BoolFilter | Boolean,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   userId?: StringFilter | String,
?   profileTheme?: JsonNullableFilter,
?   user?: UserScalarRelationFilter | UserWhereInput,
?   content?: ContentListRelationFilter,
?   leads?: LeadListRelationFilter,
?   inquiries?: InquiryListRelationFilter,
?   ownershipClaims?: OwnershipClaimListRelationFilter,
?   customization?: BusinessProfileCustomizationNullableScalarRelationFilter | BusinessProfileCustomizationWhereInput | Null
  },
  orderBy: {
    _count: {
      suburb: "desc"
    }
  },
  take: 50
}

Unknown argument `published`. Available options are marked with ?.
    at async getSuburbStats (app/suburb/page.tsx:20:23)
    at async SuburbsPage (app/suburb/page.tsx:40:23)
  18 | async function getSuburbStats() {
  19 |   // Get business counts per suburb (top suburbs only)
> 20 |   const suburbStats = await prisma.business.groupBy({
     |                       ^
  21 |     by: ['suburb'],
  22 |     where: {
  23 |       published: true, {
  clientVersion: '6.15.0',
  digest: '3786003297'
}
 GET /suburb 500 in 1207ms
 â¨¯ Error [PrismaClientValidationError]: 
Invalid `prisma.business.groupBy()` invocation:

{
  select: {
    _count: {
      select: {
        category: true
      }
    },
    category: true
  },
  by: [
    "category"
  ],
  where: {
    published: true,
    ~~~~~~~~~
?   AND?: BusinessWhereInput | BusinessWhereInput[],
?   OR?: BusinessWhereInput[],
?   NOT?: BusinessWhereInput | BusinessWhereInput[],
?   id?: StringFilter | String,
?   slug?: StringFilter | String,
?   name?: StringFilter | String,
?   abn?: StringNullableFilter | String | Null,
?   email?: StringFilter | String,
?   bio?: StringNullableFilter | String | Null,
?   suburb?: StringFilter | String,
?   serviceAreas?: StringFilter | String,
?   postcode?: StringNullableFilter | String | Null,
?   phone?: StringNullableFilter | String | Null,
?   website?: StringNullableFilter | String | Null,
?   logo?: StringNullableFilter | String | Null,
?   category?: StringNullableFilter | String | Null,
?   status?: EnumBusinessStatusFilter | BusinessStatus,
?   needsReview?: BoolFilter | Boolean,
?   themeId?: StringNullableFilter | String | Null,
?   layoutId?: StringNullableFilter | String | Null,
?   headerStyle?: StringNullableFilter | String | Null,
?   ctaText?: StringNullableFilter | String | Null,
?   ctaStyle?: StringNullableFilter | String | Null,
?   showTestimonials?: BoolFilter | Boolean,
?   showGallery?: BoolFilter | Boolean,
?   showBusinessHours?: BoolFilter | Boolean,
?   facebookUrl?: StringNullableFilter | String | Null,
?   instagramUrl?: StringNullableFilter | String | Null,
?   linkedinUrl?: StringNullableFilter | String | Null,
?   abnVerificationStatus?: StringNullableFilter | String | Null,
?   abnVerificationDate?: DateTimeNullableFilter | DateTime | Null,
?   abnVerificationData?: JsonNullableFilter,
?   abnVerificationNotes?: StringNullableFilter | String | Null,
?   abnVerifiedBy?: StringNullableFilter | String | Null,
?   abnAutoVerified?: BoolFilter | Boolean,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   userId?: StringFilter | String,
?   profileTheme?: JsonNullableFilter,
?   user?: UserScalarRelationFilter | UserWhereInput,
?   content?: ContentListRelationFilter,
?   leads?: LeadListRelationFilter,
?   inquiries?: InquiryListRelationFilter,
?   ownershipClaims?: OwnershipClaimListRelationFilter,
?   customization?: BusinessProfileCustomizationNullableScalarRelationFilter | BusinessProfileCustomizationWhereInput | Null
  },
  orderBy: {
    _count: {
      category: "desc"
    }
  }
}

Unknown argument `published`. Available options are marked with ?.
    at async getCategoryStats (app/category/page.tsx:20:25)
    at async CategoriesPage (app/category/page.tsx:39:25)
  18 | async function getCategoryStats() {
  19 |   // Get business counts per category
> 20 |   const categoryStats = await prisma.business.groupBy({
     |                         ^
  21 |     by: ['category'],
  22 |     where: {
  23 |       published: true, {
  clientVersion: '6.15.0',
  digest: '3423921557'
}
 GET /category 500 in 1361ms
Error: Route "/suburb/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at SuburbLayout (app/suburb/[slug]/layout.tsx:63:42)
  61 |
  62 | export default function SuburbLayout({ params, children }: Props) {
> 63 |   const suburb = findSuburbBySlug(params.slug);
     |                                          ^
  64 |   
  65 |   if (!suburb) {
  66 |     notFound();
Error: Route "/suburb/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at SuburbPage (app/suburb/[slug]/page.tsx:96:42)
  94 |
  95 | export default async function SuburbPage({ params }: SuburbPageProps) {
> 96 |   const suburb = findSuburbBySlug(params.slug);
     |                                          ^
  97 |   
  98 |   if (!suburb) {
  99 |     notFound();
Error: Route "/suburb/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at SuburbLayout (app/suburb/[slug]/layout.tsx:63:42)
  61 |
  62 | export default function SuburbLayout({ params, children }: Props) {
> 63 |   const suburb = findSuburbBySlug(params.slug);
     |                                          ^
  64 |   
  65 |   if (!suburb) {
  66 |     notFound();
Error: Route "/suburb/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at SuburbPage (app/suburb/[slug]/page.tsx:96:42)
  94 |
  95 | export default async function SuburbPage({ params }: SuburbPageProps) {
> 96 |   const suburb = findSuburbBySlug(params.slug);
     |                                          ^
  97 |   
  98 |   if (!suburb) {
  99 |     notFound();
 â¨¯ TypeError: Cannot read properties of undefined (reading 'toLowerCase')
    at eval (app/suburb/[slug]/layout.tsx:13:17)
    at Array.find (<anonymous>)
    at findSuburbBySlug (app/suburb/[slug]/layout.tsx:11:28)
    at SuburbLayout (app/suburb/[slug]/layout.tsx:63:18)
  11 |   return MELBOURNE_SUBURBS.find(suburb => 
  12 |     suburb.id === slug || 
> 13 |     suburb.name.toLowerCase().replace(/\s+/g, '-') === slug.toLowerCase()
     |                 ^
  14 |   );
  15 | }
  16 | {
  digest: '2188434829'
}
 â¨¯ TypeError: Cannot read properties of undefined (reading 'toLowerCase')
    at eval (app/suburb/[slug]/layout.tsx:13:17)
    at Array.find (<anonymous>)
    at findSuburbBySlug (app/suburb/[slug]/layout.tsx:11:28)
    at SuburbLayout (app/suburb/[slug]/layout.tsx:63:18)
  11 |   return MELBOURNE_SUBURBS.find(suburb => 
  12 |     suburb.id === slug || 
> 13 |     suburb.name.toLowerCase().replace(/\s+/g, '-') === slug.toLowerCase()
     |                 ^
  14 |   );
  15 | }
  16 | {
  digest: '2188434829'
}
 â¨¯ TypeError: Cannot read properties of undefined (reading 'toLowerCase')
    at eval (app/suburb/[slug]/page.tsx:31:17)
    at Array.find (<anonymous>)
    at findSuburbBySlug (app/suburb/[slug]/page.tsx:29:28)
    at SuburbPage (app/suburb/[slug]/page.tsx:96:18)
  29 |   return MELBOURNE_SUBURBS.find(suburb => 
  30 |     suburb.id === slug || 
> 31 |     suburb.name.toLowerCase().replace(/\s+/g, '-') === slug.toLowerCase()
     |                 ^
  32 |   );
  33 | }
  34 | {
  digest: '1353380502'
}
 â¨¯ TypeError: Cannot read properties of undefined (reading 'toLowerCase')
    at eval (app/suburb/[slug]/page.tsx:31:17)
    at Array.find (<anonymous>)
    at findSuburbBySlug (app/suburb/[slug]/page.tsx:29:28)
    at SuburbPage (app/suburb/[slug]/page.tsx:96:18)
  29 |   return MELBOURNE_SUBURBS.find(suburb => 
  30 |     suburb.id === slug || 
> 31 |     suburb.name.toLowerCase().replace(/\s+/g, '-') === slug.toLowerCase()
     |                 ^
  32 |   );
  33 | }
  34 | {
  digest: '1353380502'
}
Error: Route "/suburb/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at Module.generateMetadata (app/suburb/[slug]/layout.tsx:18:42)
  16 |
  17 | export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
> 18 |   const suburb = findSuburbBySlug(params.slug);
     |                                          ^
  19 |   
  20 |   if (!suburb) {
  21 |     return {
 âš  metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
Error: Route "/suburb/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at Module.generateMetadata (app/suburb/[slug]/layout.tsx:18:42)
  16 |
  17 | export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
> 18 |   const suburb = findSuburbBySlug(params.slug);
     |                                          ^
  19 |   
  20 |   if (!suburb) {
  21 |     return {
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:56:70)
    at Array.find (<anonymous>)
    at CategoryLayout (app/category/[slug]/layout.tsx:56:40)
  54 |
  55 | export default function CategoryLayout({ params, children }: Props) {
> 56 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  57 |   
  58 |   if (!category) {
  59 |     notFound();
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at CategoryPage (app/category/[slug]/page.tsx:78:86)
  76 |
  77 | export default async function CategoryPage({ params }: CategoryPageProps) {
> 78 |   const { businesses, category, suburbsWithBusinesses } = await getBusinesses(params.slug);
     |                                                                                      ^
  79 |
  80 |   if (!category) {
  81 |     notFound();
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:11:70)
    at Array.find (<anonymous>)
    at Module.generateMetadata (app/category/[slug]/layout.tsx:11:40)
   9 |
  10 | export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
> 11 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  12 |   
  13 |   if (!category) {
  14 |     return {
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:56:70)
    at Array.find (<anonymous>)
    at CategoryLayout (app/category/[slug]/layout.tsx:56:40)
  54 |
  55 | export default function CategoryLayout({ params, children }: Props) {
> 56 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  57 |   
  58 |   if (!category) {
  59 |     notFound();
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at CategoryPage (app/category/[slug]/page.tsx:78:86)
  76 |
  77 | export default async function CategoryPage({ params }: CategoryPageProps) {
> 78 |   const { businesses, category, suburbsWithBusinesses } = await getBusinesses(params.slug);
     |                                                                                      ^
  79 |
  80 |   if (!category) {
  81 |     notFound();
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:11:70)
    at Array.find (<anonymous>)
    at Module.generateMetadata (app/category/[slug]/layout.tsx:11:40)
   9 |
  10 | export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
> 11 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  12 |   
  13 |   if (!category) {
  14 |     return {
 â¨¯ Error [PrismaClientValidationError]: 
Invalid `prisma.business.findMany()` invocation:

{
  where: {
    category: "Plumbing",
    published: true,
    ~~~~~~~~~
?   AND?: BusinessWhereInput | BusinessWhereInput[],
?   OR?: BusinessWhereInput[],
?   NOT?: BusinessWhereInput | BusinessWhereInput[],
?   id?: StringFilter | String,
?   slug?: StringFilter | String,
?   name?: StringFilter | String,
?   abn?: StringNullableFilter | String | Null,
?   email?: StringFilter | String,
?   bio?: StringNullableFilter | String | Null,
?   suburb?: StringFilter | String,
?   serviceAreas?: StringFilter | String,
?   postcode?: StringNullableFilter | String | Null,
?   phone?: StringNullableFilter | String | Null,
?   website?: StringNullableFilter | String | Null,
?   logo?: StringNullableFilter | String | Null,
?   status?: EnumBusinessStatusFilter | BusinessStatus,
?   needsReview?: BoolFilter | Boolean,
?   themeId?: StringNullableFilter | String | Null,
?   layoutId?: StringNullableFilter | String | Null,
?   headerStyle?: StringNullableFilter | String | Null,
?   ctaText?: StringNullableFilter | String | Null,
?   ctaStyle?: StringNullableFilter | String | Null,
?   showTestimonials?: BoolFilter | Boolean,
?   showGallery?: BoolFilter | Boolean,
?   showBusinessHours?: BoolFilter | Boolean,
?   facebookUrl?: StringNullableFilter | String | Null,
?   instagramUrl?: StringNullableFilter | String | Null,
?   linkedinUrl?: StringNullableFilter | String | Null,
?   abnVerificationStatus?: StringNullableFilter | String | Null,
?   abnVerificationDate?: DateTimeNullableFilter | DateTime | Null,
?   abnVerificationData?: JsonNullableFilter,
?   abnVerificationNotes?: StringNullableFilter | String | Null,
?   abnVerifiedBy?: StringNullableFilter | String | Null,
?   abnAutoVerified?: BoolFilter | Boolean,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   userId?: StringFilter | String,
?   profileTheme?: JsonNullableFilter,
?   user?: UserScalarRelationFilter | UserWhereInput,
?   content?: ContentListRelationFilter,
?   leads?: LeadListRelationFilter,
?   inquiries?: InquiryListRelationFilter,
?   ownershipClaims?: OwnershipClaimListRelationFilter,
?   customization?: BusinessProfileCustomizationNullableScalarRelationFilter | BusinessProfileCustomizationWhereInput | Null
  },
  include: {
    customization: true
  },
  orderBy: [
    {
      featured: "desc"
    },
    {
      createdAt: "desc"
    }
  ],
  take: 20
}

Unknown argument `published`. Available options are marked with ?.
    at async getBusinesses (app/category/[slug]/page.tsx:41:22)
    at async CategoryPage (app/category/[slug]/page.tsx:78:59)
  39 |   if (!category) return { businesses: [], category: null, suburbsWithBusinesses: [] };
  40 |
> 41 |   const businesses = await prisma.business.findMany({
     |                      ^
  42 |     where: {
  43 |       category: category.name,
  44 |       published: true, {
  clientVersion: '6.15.0',
  digest: '1627251804'
}
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:11:70)
    at Array.find (<anonymous>)
    at Module.generateMetadata (app/category/[slug]/layout.tsx:11:40)
   9 |
  10 | export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
> 11 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  12 |   
  13 |   if (!category) {
  14 |     return {
 GET /suburb/richmond 200 in 1407ms
 GET /suburb/fitzroy 200 in 1407ms
 GET /category/electrician 200 in 1410ms
 GET /category/plumbing 500 in 1594ms
 â¨¯ Failed to generate static paths for /suburb/[slug]:
[Error [PageNotFoundError]: Cannot find module for page: /suburb/[slug]/page] {
  type: 'PageNotFoundError',
  code: 'ENOENT'
}
 â¨¯ Failed to generate static paths for /suburb/[slug]:
[Error [PageNotFoundError]: Cannot find module for page: /suburb/[slug]/page] {
  type: 'PageNotFoundError',
  code: 'ENOENT'
}
 âœ“ Compiled in 645ms (1747 modules)
 âš  metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
prisma:query SELECT 1
 â¨¯ Error [PrismaClientValidationError]: 
Invalid `prisma.business.groupBy()` invocation:

{
  select: {
    _count: {
      select: {
        suburb: true
      }
    },
    suburb: true
  },
  by: [
    "suburb"
  ],
  where: {
    published: true,
    ~~~~~~~~~
?   AND?: BusinessWhereInput | BusinessWhereInput[],
?   OR?: BusinessWhereInput[],
?   NOT?: BusinessWhereInput | BusinessWhereInput[],
?   id?: StringFilter | String,
?   slug?: StringFilter | String,
?   name?: StringFilter | String,
?   abn?: StringNullableFilter | String | Null,
?   email?: StringFilter | String,
?   bio?: StringNullableFilter | String | Null,
?   suburb?: StringFilter | String,
?   serviceAreas?: StringFilter | String,
?   postcode?: StringNullableFilter | String | Null,
?   phone?: StringNullableFilter | String | Null,
?   website?: StringNullableFilter | String | Null,
?   logo?: StringNullableFilter | String | Null,
?   category?: StringNullableFilter | String | Null,
?   status?: EnumBusinessStatusFilter | BusinessStatus,
?   needsReview?: BoolFilter | Boolean,
?   themeId?: StringNullableFilter | String | Null,
?   layoutId?: StringNullableFilter | String | Null,
?   headerStyle?: StringNullableFilter | String | Null,
?   ctaText?: StringNullableFilter | String | Null,
?   ctaStyle?: StringNullableFilter | String | Null,
?   showTestimonials?: BoolFilter | Boolean,
?   showGallery?: BoolFilter | Boolean,
?   showBusinessHours?: BoolFilter | Boolean,
?   facebookUrl?: StringNullableFilter | String | Null,
?   instagramUrl?: StringNullableFilter | String | Null,
?   linkedinUrl?: StringNullableFilter | String | Null,
?   abnVerificationStatus?: StringNullableFilter | String | Null,
?   abnVerificationDate?: DateTimeNullableFilter | DateTime | Null,
?   abnVerificationData?: JsonNullableFilter,
?   abnVerificationNotes?: StringNullableFilter | String | Null,
?   abnVerifiedBy?: StringNullableFilter | String | Null,
?   abnAutoVerified?: BoolFilter | Boolean,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   userId?: StringFilter | String,
?   profileTheme?: JsonNullableFilter,
?   user?: UserScalarRelationFilter | UserWhereInput,
?   content?: ContentListRelationFilter,
?   leads?: LeadListRelationFilter,
?   inquiries?: InquiryListRelationFilter,
?   ownershipClaims?: OwnershipClaimListRelationFilter,
?   customization?: BusinessProfileCustomizationNullableScalarRelationFilter | BusinessProfileCustomizationWhereInput | Null
  },
  orderBy: {
    _count: {
      suburb: "desc"
    }
  },
  take: 50
}

Unknown argument `published`. Available options are marked with ?.
    at async getSuburbStats (app/suburb/page.tsx:20:23)
    at async SuburbsPage (app/suburb/page.tsx:40:23)
  18 | async function getSuburbStats() {
  19 |   // Get business counts per suburb (top suburbs only)
> 20 |   const suburbStats = await prisma.business.groupBy({
     |                       ^
  21 |     by: ['suburb'],
  22 |     where: {
  23 |       published: true, {
  clientVersion: '6.15.0',
  digest: '3786003297'
}
 â¨¯ Error [PrismaClientValidationError]: 
Invalid `prisma.business.groupBy()` invocation:

{
  select: {
    _count: {
      select: {
        category: true
      }
    },
    category: true
  },
  by: [
    "category"
  ],
  where: {
    published: true,
    ~~~~~~~~~
?   AND?: BusinessWhereInput | BusinessWhereInput[],
?   OR?: BusinessWhereInput[],
?   NOT?: BusinessWhereInput | BusinessWhereInput[],
?   id?: StringFilter | String,
?   slug?: StringFilter | String,
?   name?: StringFilter | String,
?   abn?: StringNullableFilter | String | Null,
?   email?: StringFilter | String,
?   bio?: StringNullableFilter | String | Null,
?   suburb?: StringFilter | String,
?   serviceAreas?: StringFilter | String,
?   postcode?: StringNullableFilter | String | Null,
?   phone?: StringNullableFilter | String | Null,
?   website?: StringNullableFilter | String | Null,
?   logo?: StringNullableFilter | String | Null,
?   category?: StringNullableFilter | String | Null,
?   status?: EnumBusinessStatusFilter | BusinessStatus,
?   needsReview?: BoolFilter | Boolean,
?   themeId?: StringNullableFilter | String | Null,
?   layoutId?: StringNullableFilter | String | Null,
?   headerStyle?: StringNullableFilter | String | Null,
?   ctaText?: StringNullableFilter | String | Null,
?   ctaStyle?: StringNullableFilter | String | Null,
?   showTestimonials?: BoolFilter | Boolean,
?   showGallery?: BoolFilter | Boolean,
?   showBusinessHours?: BoolFilter | Boolean,
?   facebookUrl?: StringNullableFilter | String | Null,
?   instagramUrl?: StringNullableFilter | String | Null,
?   linkedinUrl?: StringNullableFilter | String | Null,
?   abnVerificationStatus?: StringNullableFilter | String | Null,
?   abnVerificationDate?: DateTimeNullableFilter | DateTime | Null,
?   abnVerificationData?: JsonNullableFilter,
?   abnVerificationNotes?: StringNullableFilter | String | Null,
?   abnVerifiedBy?: StringNullableFilter | String | Null,
?   abnAutoVerified?: BoolFilter | Boolean,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   userId?: StringFilter | String,
?   profileTheme?: JsonNullableFilter,
?   user?: UserScalarRelationFilter | UserWhereInput,
?   content?: ContentListRelationFilter,
?   leads?: LeadListRelationFilter,
?   inquiries?: InquiryListRelationFilter,
?   ownershipClaims?: OwnershipClaimListRelationFilter,
?   customization?: BusinessProfileCustomizationNullableScalarRelationFilter | BusinessProfileCustomizationWhereInput | Null
  },
  orderBy: {
    _count: {
      category: "desc"
    }
  }
}

Unknown argument `published`. Available options are marked with ?.
    at async getCategoryStats (app/category/page.tsx:20:25)
    at async CategoriesPage (app/category/page.tsx:39:25)
  18 | async function getCategoryStats() {
  19 |   // Get business counts per category
> 20 |   const categoryStats = await prisma.business.groupBy({
     |                         ^
  21 |     by: ['category'],
  22 |     where: {
  23 |       published: true, {
  clientVersion: '6.15.0',
  digest: '3423921557'
}
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:56:70)
    at Array.find (<anonymous>)
    at CategoryLayout (app/category/[slug]/layout.tsx:56:40)
  54 |
  55 | export default function CategoryLayout({ params, children }: Props) {
> 56 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  57 |   
  58 |   if (!category) {
  59 |     notFound();
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at CategoryPage (app/category/[slug]/page.tsx:78:86)
  76 |
  77 | export default async function CategoryPage({ params }: CategoryPageProps) {
> 78 |   const { businesses, category, suburbsWithBusinesses } = await getBusinesses(params.slug);
     |                                                                                      ^
  79 |
  80 |   if (!category) {
  81 |     notFound();
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:11:70)
    at Array.find (<anonymous>)
    at Module.generateMetadata (app/category/[slug]/layout.tsx:11:40)
   9 |
  10 | export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
> 11 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  12 |   
  13 |   if (!category) {
  14 |     return {
 âš  Fast Refresh had to perform a full reload due to a runtime error.
 â¨¯ Error [PrismaClientValidationError]: 
Invalid `prisma.business.findMany()` invocation:

{
  where: {
    category: "Plumbing",
    published: true,
    ~~~~~~~~~
?   AND?: BusinessWhereInput | BusinessWhereInput[],
?   OR?: BusinessWhereInput[],
?   NOT?: BusinessWhereInput | BusinessWhereInput[],
?   id?: StringFilter | String,
?   slug?: StringFilter | String,
?   name?: StringFilter | String,
?   abn?: StringNullableFilter | String | Null,
?   email?: StringFilter | String,
?   bio?: StringNullableFilter | String | Null,
?   suburb?: StringFilter | String,
?   serviceAreas?: StringFilter | String,
?   postcode?: StringNullableFilter | String | Null,
?   phone?: StringNullableFilter | String | Null,
?   website?: StringNullableFilter | String | Null,
?   logo?: StringNullableFilter | String | Null,
?   status?: EnumBusinessStatusFilter | BusinessStatus,
?   needsReview?: BoolFilter | Boolean,
?   themeId?: StringNullableFilter | String | Null,
?   layoutId?: StringNullableFilter | String | Null,
?   headerStyle?: StringNullableFilter | String | Null,
?   ctaText?: StringNullableFilter | String | Null,
?   ctaStyle?: StringNullableFilter | String | Null,
?   showTestimonials?: BoolFilter | Boolean,
?   showGallery?: BoolFilter | Boolean,
?   showBusinessHours?: BoolFilter | Boolean,
?   facebookUrl?: StringNullableFilter | String | Null,
?   instagramUrl?: StringNullableFilter | String | Null,
?   linkedinUrl?: StringNullableFilter | String | Null,
?   abnVerificationStatus?: StringNullableFilter | String | Null,
?   abnVerificationDate?: DateTimeNullableFilter | DateTime | Null,
?   abnVerificationData?: JsonNullableFilter,
?   abnVerificationNotes?: StringNullableFilter | String | Null,
?   abnVerifiedBy?: StringNullableFilter | String | Null,
?   abnAutoVerified?: BoolFilter | Boolean,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   userId?: StringFilter | String,
?   profileTheme?: JsonNullableFilter,
?   user?: UserScalarRelationFilter | UserWhereInput,
?   content?: ContentListRelationFilter,
?   leads?: LeadListRelationFilter,
?   inquiries?: InquiryListRelationFilter,
?   ownershipClaims?: OwnershipClaimListRelationFilter,
?   customization?: BusinessProfileCustomizationNullableScalarRelationFilter | BusinessProfileCustomizationWhereInput | Null
  },
  include: {
    customization: true
  },
  orderBy: [
    {
      featured: "desc"
    },
    {
      createdAt: "desc"
    }
  ],
  take: 20
}

Unknown argument `published`. Available options are marked with ?.
    at async getBusinesses (app/category/[slug]/page.tsx:41:22)
    at async CategoryPage (app/category/[slug]/page.tsx:78:59)
  39 |   if (!category) return { businesses: [], category: null, suburbsWithBusinesses: [] };
  40 |
> 41 |   const businesses = await prisma.business.findMany({
     |                      ^
  42 |     where: {
  43 |       category: category.name,
  44 |       published: true, {
  clientVersion: '6.15.0',
  digest: '1627251804'
}
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:11:70)
    at Array.find (<anonymous>)
    at Module.generateMetadata (app/category/[slug]/layout.tsx:11:40)
   9 |
  10 | export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
> 11 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  12 |   
  13 |   if (!category) {
  14 |     return {
 âš  Fast Refresh had to perform a full reload due to a runtime error.
 GET /suburb 500 in 803ms
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:56:70)
    at Array.find (<anonymous>)
    at CategoryLayout (app/category/[slug]/layout.tsx:56:40)
  54 |
  55 | export default function CategoryLayout({ params, children }: Props) {
> 56 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  57 |   
  58 |   if (!category) {
  59 |     notFound();
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at CategoryPage (app/category/[slug]/page.tsx:78:86)
  76 |
  77 | export default async function CategoryPage({ params }: CategoryPageProps) {
> 78 |   const { businesses, category, suburbsWithBusinesses } = await getBusinesses(params.slug);
     |                                                                                      ^
  79 |
  80 |   if (!category) {
  81 |     notFound();
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:11:70)
    at Array.find (<anonymous>)
    at Module.generateMetadata (app/category/[slug]/layout.tsx:11:40)
   9 |
  10 | export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
> 11 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  12 |   
  13 |   if (!category) {
  14 |     return {
 GET /category 500 in 835ms
 GET /category/plumbing 500 in 826ms
 GET /category/electrician 200 in 789ms
 âš  Fast Refresh had to perform a full reload due to a runtime error.
 âš  Fast Refresh had to perform a full reload due to a runtime error.
 â¨¯ Failed to generate static paths for /category/[slug]:
TypeError: Cannot read properties of undefined (reading 'call')
    at eval (webpack-internal:///(rsc)/./app/category/[slug]/layout.tsx:8:73)
    at <unknown> (rsc)/./app/category/[slug]/layout.tsx (/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/app/category/[slug]/page.js:22:1) {
  type: 'TypeError'
}
 â¨¯ Failed to generate static paths for /category/[slug]:
TypeError: Cannot read properties of undefined (reading 'call')
    at eval (webpack-internal:///(rsc)/./app/category/[slug]/layout.tsx:8:73)
    at <unknown> (rsc)/./app/category/[slug]/layout.tsx (/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/app/category/[slug]/page.js:22:1) {
  type: 'TypeError'
}
<w> [webpack.cache.PackFileCacheStrategy] Caching failed for pack: Error: ENOENT: no such file or directory, rename '/Users/carlg/Documents/PROJECTS/suburbmates/.next/cache/webpack/client-development/0.pack.gz_' -> '/Users/carlg/Documents/PROJECTS/suburbmates/.next/cache/webpack/client-development/0.pack.gz'
 â¨¯ TypeError: Cannot read properties of undefined (reading 'call')
    at eval (webpack-internal:///(rsc)/./app/suburb/[slug]/layout.tsx:8:73)
    at <unknown> (rsc)/./app/suburb/[slug]/layout.tsx (/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/app/suburb/[slug]/page.js:44:1) {
  type: 'TypeError',
  page: '/suburb/richmond'
}
 â¨¯ TypeError: Cannot read properties of undefined (reading 'call')
    at eval (webpack-internal:///(rsc)/./app/suburb/[slug]/layout.tsx:8:73)
    at <unknown> (rsc)/./app/suburb/[slug]/layout.tsx (/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/app/suburb/[slug]/page.js:44:1) {
  type: 'TypeError',
  page: '/suburb/richmond'
}
 âš  Fast Refresh had to perform a full reload due to a runtime error.
 âš  Fast Refresh had to perform a full reload due to a runtime error.
 âš  Fast Refresh had to perform a full reload due to a runtime error.
 âš  Fast Refresh had to perform a full reload due to a runtime error.
 âš  Fast Refresh had to perform a full reload due to a runtime error.
 âœ“ Compiled /_error in 391ms (1826 modules)
 âš  metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
 â¨¯ Error [PrismaClientValidationError]: 
Invalid `prisma.business.groupBy()` invocation:

{
  select: {
    _count: {
      select: {
        suburb: true
      }
    },
    suburb: true
  },
  by: [
    "suburb"
  ],
  where: {
    published: true,
    ~~~~~~~~~
?   AND?: BusinessWhereInput | BusinessWhereInput[],
?   OR?: BusinessWhereInput[],
?   NOT?: BusinessWhereInput | BusinessWhereInput[],
?   id?: StringFilter | String,
?   slug?: StringFilter | String,
?   name?: StringFilter | String,
?   abn?: StringNullableFilter | String | Null,
?   email?: StringFilter | String,
?   bio?: StringNullableFilter | String | Null,
?   suburb?: StringFilter | String,
?   serviceAreas?: StringFilter | String,
?   postcode?: StringNullableFilter | String | Null,
?   phone?: StringNullableFilter | String | Null,
?   website?: StringNullableFilter | String | Null,
?   logo?: StringNullableFilter | String | Null,
?   category?: StringNullableFilter | String | Null,
?   status?: EnumBusinessStatusFilter | BusinessStatus,
?   needsReview?: BoolFilter | Boolean,
?   themeId?: StringNullableFilter | String | Null,
?   layoutId?: StringNullableFilter | String | Null,
?   headerStyle?: StringNullableFilter | String | Null,
?   ctaText?: StringNullableFilter | String | Null,
?   ctaStyle?: StringNullableFilter | String | Null,
?   showTestimonials?: BoolFilter | Boolean,
?   showGallery?: BoolFilter | Boolean,
?   showBusinessHours?: BoolFilter | Boolean,
?   facebookUrl?: StringNullableFilter | String | Null,
?   instagramUrl?: StringNullableFilter | String | Null,
?   linkedinUrl?: StringNullableFilter | String | Null,
?   abnVerificationStatus?: StringNullableFilter | String | Null,
?   abnVerificationDate?: DateTimeNullableFilter | DateTime | Null,
?   abnVerificationData?: JsonNullableFilter,
?   abnVerificationNotes?: StringNullableFilter | String | Null,
?   abnVerifiedBy?: StringNullableFilter | String | Null,
?   abnAutoVerified?: BoolFilter | Boolean,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   userId?: StringFilter | String,
?   profileTheme?: JsonNullableFilter,
?   user?: UserScalarRelationFilter | UserWhereInput,
?   content?: ContentListRelationFilter,
?   leads?: LeadListRelationFilter,
?   inquiries?: InquiryListRelationFilter,
?   ownershipClaims?: OwnershipClaimListRelationFilter,
?   customization?: BusinessProfileCustomizationNullableScalarRelationFilter | BusinessProfileCustomizationWhereInput | Null
  },
  orderBy: {
    _count: {
      suburb: "desc"
    }
  },
  take: 50
}

Unknown argument `published`. Available options are marked with ?.
    at async getSuburbStats (app/suburb/page.tsx:20:23)
    at async SuburbsPage (app/suburb/page.tsx:40:23)
  18 | async function getSuburbStats() {
  19 |   // Get business counts per suburb (top suburbs only)
> 20 |   const suburbStats = await prisma.business.groupBy({
     |                       ^
  21 |     by: ['suburb'],
  22 |     where: {
  23 |       published: true, {
  clientVersion: '6.15.0',
  digest: '3786003297'
}
 â¨¯ Error [PrismaClientValidationError]: 
Invalid `prisma.business.groupBy()` invocation:

{
  select: {
    _count: {
      select: {
        category: true
      }
    },
    category: true
  },
  by: [
    "category"
  ],
  where: {
    published: true,
    ~~~~~~~~~
?   AND?: BusinessWhereInput | BusinessWhereInput[],
?   OR?: BusinessWhereInput[],
?   NOT?: BusinessWhereInput | BusinessWhereInput[],
?   id?: StringFilter | String,
?   slug?: StringFilter | String,
?   name?: StringFilter | String,
?   abn?: StringNullableFilter | String | Null,
?   email?: StringFilter | String,
?   bio?: StringNullableFilter | String | Null,
?   suburb?: StringFilter | String,
?   serviceAreas?: StringFilter | String,
?   postcode?: StringNullableFilter | String | Null,
?   phone?: StringNullableFilter | String | Null,
?   website?: StringNullableFilter | String | Null,
?   logo?: StringNullableFilter | String | Null,
?   category?: StringNullableFilter | String | Null,
?   status?: EnumBusinessStatusFilter | BusinessStatus,
?   needsReview?: BoolFilter | Boolean,
?   themeId?: StringNullableFilter | String | Null,
?   layoutId?: StringNullableFilter | String | Null,
?   headerStyle?: StringNullableFilter | String | Null,
?   ctaText?: StringNullableFilter | String | Null,
?   ctaStyle?: StringNullableFilter | String | Null,
?   showTestimonials?: BoolFilter | Boolean,
?   showGallery?: BoolFilter | Boolean,
?   showBusinessHours?: BoolFilter | Boolean,
?   facebookUrl?: StringNullableFilter | String | Null,
?   instagramUrl?: StringNullableFilter | String | Null,
?   linkedinUrl?: StringNullableFilter | String | Null,
?   abnVerificationStatus?: StringNullableFilter | String | Null,
?   abnVerificationDate?: DateTimeNullableFilter | DateTime | Null,
?   abnVerificationData?: JsonNullableFilter,
?   abnVerificationNotes?: StringNullableFilter | String | Null,
?   abnVerifiedBy?: StringNullableFilter | String | Null,
?   abnAutoVerified?: BoolFilter | Boolean,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   userId?: StringFilter | String,
?   profileTheme?: JsonNullableFilter,
?   user?: UserScalarRelationFilter | UserWhereInput,
?   content?: ContentListRelationFilter,
?   leads?: LeadListRelationFilter,
?   inquiries?: InquiryListRelationFilter,
?   ownershipClaims?: OwnershipClaimListRelationFilter,
?   customization?: BusinessProfileCustomizationNullableScalarRelationFilter | BusinessProfileCustomizationWhereInput | Null
  },
  orderBy: {
    _count: {
      category: "desc"
    }
  }
}

Unknown argument `published`. Available options are marked with ?.
    at async getCategoryStats (app/category/page.tsx:20:25)
    at async CategoriesPage (app/category/page.tsx:39:25)
  18 | async function getCategoryStats() {
  19 |   // Get business counts per category
> 20 |   const categoryStats = await prisma.business.groupBy({
     |                         ^
  21 |     by: ['category'],
  22 |     where: {
  23 |       published: true, {
  clientVersion: '6.15.0',
  digest: '3423921557'
}
 GET /suburb/fitzroy 500 in 2425ms
 GET /suburb/richmond 500 in 2422ms
 GET /suburb 500 in 883ms
 GET /category 500 in 806ms
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:56:70)
    at Array.find (<anonymous>)
    at CategoryLayout (app/category/[slug]/layout.tsx:56:40)
  54 |
  55 | export default function CategoryLayout({ params, children }: Props) {
> 56 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  57 |   
  58 |   if (!category) {
  59 |     notFound();
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at CategoryPage (app/category/[slug]/page.tsx:78:86)
  76 |
  77 | export default async function CategoryPage({ params }: CategoryPageProps) {
> 78 |   const { businesses, category, suburbsWithBusinesses } = await getBusinesses(params.slug);
     |                                                                                      ^
  79 |
  80 |   if (!category) {
  81 |     notFound();
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:11:70)
    at Array.find (<anonymous>)
    at Module.generateMetadata (app/category/[slug]/layout.tsx:11:40)
   9 |
  10 | export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
> 11 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  12 |   
  13 |   if (!category) {
  14 |     return {
 â¨¯ Error [PrismaClientValidationError]: 
Invalid `prisma.business.findMany()` invocation:

{
  where: {
    category: "Plumbing",
    published: true,
    ~~~~~~~~~
?   AND?: BusinessWhereInput | BusinessWhereInput[],
?   OR?: BusinessWhereInput[],
?   NOT?: BusinessWhereInput | BusinessWhereInput[],
?   id?: StringFilter | String,
?   slug?: StringFilter | String,
?   name?: StringFilter | String,
?   abn?: StringNullableFilter | String | Null,
?   email?: StringFilter | String,
?   bio?: StringNullableFilter | String | Null,
?   suburb?: StringFilter | String,
?   serviceAreas?: StringFilter | String,
?   postcode?: StringNullableFilter | String | Null,
?   phone?: StringNullableFilter | String | Null,
?   website?: StringNullableFilter | String | Null,
?   logo?: StringNullableFilter | String | Null,
?   status?: EnumBusinessStatusFilter | BusinessStatus,
?   needsReview?: BoolFilter | Boolean,
?   themeId?: StringNullableFilter | String | Null,
?   layoutId?: StringNullableFilter | String | Null,
?   headerStyle?: StringNullableFilter | String | Null,
?   ctaText?: StringNullableFilter | String | Null,
?   ctaStyle?: StringNullableFilter | String | Null,
?   showTestimonials?: BoolFilter | Boolean,
?   showGallery?: BoolFilter | Boolean,
?   showBusinessHours?: BoolFilter | Boolean,
?   facebookUrl?: StringNullableFilter | String | Null,
?   instagramUrl?: StringNullableFilter | String | Null,
?   linkedinUrl?: StringNullableFilter | String | Null,
?   abnVerificationStatus?: StringNullableFilter | String | Null,
?   abnVerificationDate?: DateTimeNullableFilter | DateTime | Null,
?   abnVerificationData?: JsonNullableFilter,
?   abnVerificationNotes?: StringNullableFilter | String | Null,
?   abnVerifiedBy?: StringNullableFilter | String | Null,
?   abnAutoVerified?: BoolFilter | Boolean,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   userId?: StringFilter | String,
?   profileTheme?: JsonNullableFilter,
?   user?: UserScalarRelationFilter | UserWhereInput,
?   content?: ContentListRelationFilter,
?   leads?: LeadListRelationFilter,
?   inquiries?: InquiryListRelationFilter,
?   ownershipClaims?: OwnershipClaimListRelationFilter,
?   customization?: BusinessProfileCustomizationNullableScalarRelationFilter | BusinessProfileCustomizationWhereInput | Null
  },
  include: {
    customization: true
  },
  orderBy: [
    {
      featured: "desc"
    },
    {
      createdAt: "desc"
    }
  ],
  take: 20
}

Unknown argument `published`. Available options are marked with ?.
    at async getBusinesses (app/category/[slug]/page.tsx:41:22)
    at async CategoryPage (app/category/[slug]/page.tsx:78:59)
  39 |   if (!category) return { businesses: [], category: null, suburbsWithBusinesses: [] };
  40 |
> 41 |   const businesses = await prisma.business.findMany({
     |                      ^
  42 |     where: {
  43 |       category: category.name,
  44 |       published: true, {
  clientVersion: '6.15.0',
  digest: '1627251804'
}
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:11:70)
    at Array.find (<anonymous>)
    at Module.generateMetadata (app/category/[slug]/layout.tsx:11:40)
   9 |
  10 | export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
> 11 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  12 |   
  13 |   if (!category) {
  14 |     return {
 GET /category/plumbing 500 in 1958ms
 âš  Fast Refresh had to perform a full reload due to a runtime error.
 âš  Fast Refresh had to perform a full reload due to a runtime error.
 âš  Fast Refresh had to perform a full reload due to a runtime error.
 âœ“ Compiled in 689ms (1840 modules)
 âš  metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
 â¨¯ Error [PrismaClientValidationError]: 
Invalid `prisma.business.groupBy()` invocation:

{
  select: {
    _count: {
      select: {
        suburb: true
      }
    },
    suburb: true
  },
  by: [
    "suburb"
  ],
  where: {
    published: true,
    ~~~~~~~~~
?   AND?: BusinessWhereInput | BusinessWhereInput[],
?   OR?: BusinessWhereInput[],
?   NOT?: BusinessWhereInput | BusinessWhereInput[],
?   id?: StringFilter | String,
?   slug?: StringFilter | String,
?   name?: StringFilter | String,
?   abn?: StringNullableFilter | String | Null,
?   email?: StringFilter | String,
?   bio?: StringNullableFilter | String | Null,
?   suburb?: StringFilter | String,
?   serviceAreas?: StringFilter | String,
?   postcode?: StringNullableFilter | String | Null,
?   phone?: StringNullableFilter | String | Null,
?   website?: StringNullableFilter | String | Null,
?   logo?: StringNullableFilter | String | Null,
?   category?: StringNullableFilter | String | Null,
?   status?: EnumBusinessStatusFilter | BusinessStatus,
?   needsReview?: BoolFilter | Boolean,
?   themeId?: StringNullableFilter | String | Null,
?   layoutId?: StringNullableFilter | String | Null,
?   headerStyle?: StringNullableFilter | String | Null,
?   ctaText?: StringNullableFilter | String | Null,
?   ctaStyle?: StringNullableFilter | String | Null,
?   showTestimonials?: BoolFilter | Boolean,
?   showGallery?: BoolFilter | Boolean,
?   showBusinessHours?: BoolFilter | Boolean,
?   facebookUrl?: StringNullableFilter | String | Null,
?   instagramUrl?: StringNullableFilter | String | Null,
?   linkedinUrl?: StringNullableFilter | String | Null,
?   abnVerificationStatus?: StringNullableFilter | String | Null,
?   abnVerificationDate?: DateTimeNullableFilter | DateTime | Null,
?   abnVerificationData?: JsonNullableFilter,
?   abnVerificationNotes?: StringNullableFilter | String | Null,
?   abnVerifiedBy?: StringNullableFilter | String | Null,
?   abnAutoVerified?: BoolFilter | Boolean,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   userId?: StringFilter | String,
?   profileTheme?: JsonNullableFilter,
?   user?: UserScalarRelationFilter | UserWhereInput,
?   content?: ContentListRelationFilter,
?   leads?: LeadListRelationFilter,
?   inquiries?: InquiryListRelationFilter,
?   ownershipClaims?: OwnershipClaimListRelationFilter,
?   customization?: BusinessProfileCustomizationNullableScalarRelationFilter | BusinessProfileCustomizationWhereInput | Null
  },
  orderBy: {
    _count: {
      suburb: "desc"
    }
  },
  take: 50
}

Unknown argument `published`. Available options are marked with ?.
    at async getSuburbStats (app/suburb/page.tsx:20:23)
    at async SuburbsPage (app/suburb/page.tsx:40:23)
  18 | async function getSuburbStats() {
  19 |   // Get business counts per suburb (top suburbs only)
> 20 |   const suburbStats = await prisma.business.groupBy({
     |                       ^
  21 |     by: ['suburb'],
  22 |     where: {
  23 |       published: true, {
  clientVersion: '6.15.0',
  digest: '3786003297'
}
 â¨¯ Error [PrismaClientValidationError]: 
Invalid `prisma.business.groupBy()` invocation:

{
  select: {
    _count: {
      select: {
        category: true
      }
    },
    category: true
  },
  by: [
    "category"
  ],
  where: {
    published: true,
    ~~~~~~~~~
?   AND?: BusinessWhereInput | BusinessWhereInput[],
?   OR?: BusinessWhereInput[],
?   NOT?: BusinessWhereInput | BusinessWhereInput[],
?   id?: StringFilter | String,
?   slug?: StringFilter | String,
?   name?: StringFilter | String,
?   abn?: StringNullableFilter | String | Null,
?   email?: StringFilter | String,
?   bio?: StringNullableFilter | String | Null,
?   suburb?: StringFilter | String,
?   serviceAreas?: StringFilter | String,
?   postcode?: StringNullableFilter | String | Null,
?   phone?: StringNullableFilter | String | Null,
?   website?: StringNullableFilter | String | Null,
?   logo?: StringNullableFilter | String | Null,
?   category?: StringNullableFilter | String | Null,
?   status?: EnumBusinessStatusFilter | BusinessStatus,
?   needsReview?: BoolFilter | Boolean,
?   themeId?: StringNullableFilter | String | Null,
?   layoutId?: StringNullableFilter | String | Null,
?   headerStyle?: StringNullableFilter | String | Null,
?   ctaText?: StringNullableFilter | String | Null,
?   ctaStyle?: StringNullableFilter | String | Null,
?   showTestimonials?: BoolFilter | Boolean,
?   showGallery?: BoolFilter | Boolean,
?   showBusinessHours?: BoolFilter | Boolean,
?   facebookUrl?: StringNullableFilter | String | Null,
?   instagramUrl?: StringNullableFilter | String | Null,
?   linkedinUrl?: StringNullableFilter | String | Null,
?   abnVerificationStatus?: StringNullableFilter | String | Null,
?   abnVerificationDate?: DateTimeNullableFilter | DateTime | Null,
?   abnVerificationData?: JsonNullableFilter,
?   abnVerificationNotes?: StringNullableFilter | String | Null,
?   abnVerifiedBy?: StringNullableFilter | String | Null,
?   abnAutoVerified?: BoolFilter | Boolean,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   userId?: StringFilter | String,
?   profileTheme?: JsonNullableFilter,
?   user?: UserScalarRelationFilter | UserWhereInput,
?   content?: ContentListRelationFilter,
?   leads?: LeadListRelationFilter,
?   inquiries?: InquiryListRelationFilter,
?   ownershipClaims?: OwnershipClaimListRelationFilter,
?   customization?: BusinessProfileCustomizationNullableScalarRelationFilter | BusinessProfileCustomizationWhereInput | Null
  },
  orderBy: {
    _count: {
      category: "desc"
    }
  }
}

Unknown argument `published`. Available options are marked with ?.
    at async getCategoryStats (app/category/page.tsx:20:25)
    at async CategoriesPage (app/category/page.tsx:39:25)
  18 | async function getCategoryStats() {
  19 |   // Get business counts per category
> 20 |   const categoryStats = await prisma.business.groupBy({
     |                         ^
  21 |     by: ['category'],
  22 |     where: {
  23 |       published: true, {
  clientVersion: '6.15.0',
  digest: '3423921557'
}
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:56:70)
    at Array.find (<anonymous>)
    at CategoryLayout (app/category/[slug]/layout.tsx:56:40)
  54 |
  55 | export default function CategoryLayout({ params, children }: Props) {
> 56 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  57 |   
  58 |   if (!category) {
  59 |     notFound();
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at CategoryPage (app/category/[slug]/page.tsx:78:86)
  76 |
  77 | export default async function CategoryPage({ params }: CategoryPageProps) {
> 78 |   const { businesses, category, suburbsWithBusinesses } = await getBusinesses(params.slug);
     |                                                                                      ^
  79 |
  80 |   if (!category) {
  81 |     notFound();
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:56:70)
    at Array.find (<anonymous>)
    at CategoryLayout (app/category/[slug]/layout.tsx:56:40)
  54 |
  55 | export default function CategoryLayout({ params, children }: Props) {
> 56 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  57 |   
  58 |   if (!category) {
  59 |     notFound();
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at CategoryPage (app/category/[slug]/page.tsx:78:86)
  76 |
  77 | export default async function CategoryPage({ params }: CategoryPageProps) {
> 78 |   const { businesses, category, suburbsWithBusinesses } = await getBusinesses(params.slug);
     |                                                                                      ^
  79 |
  80 |   if (!category) {
  81 |     notFound();
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:11:70)
    at Array.find (<anonymous>)
    at Module.generateMetadata (app/category/[slug]/layout.tsx:11:40)
   9 |
  10 | export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
> 11 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  12 |   
  13 |   if (!category) {
  14 |     return {
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:11:70)
    at Array.find (<anonymous>)
    at Module.generateMetadata (app/category/[slug]/layout.tsx:11:40)
   9 |
  10 | export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
> 11 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  12 |   
  13 |   if (!category) {
  14 |     return {
 â¨¯ Error [PrismaClientValidationError]: 
Invalid `prisma.business.findMany()` invocation:

{
  where: {
    category: "Plumbing",
    published: true,
    ~~~~~~~~~
?   AND?: BusinessWhereInput | BusinessWhereInput[],
?   OR?: BusinessWhereInput[],
?   NOT?: BusinessWhereInput | BusinessWhereInput[],
?   id?: StringFilter | String,
?   slug?: StringFilter | String,
?   name?: StringFilter | String,
?   abn?: StringNullableFilter | String | Null,
?   email?: StringFilter | String,
?   bio?: StringNullableFilter | String | Null,
?   suburb?: StringFilter | String,
?   serviceAreas?: StringFilter | String,
?   postcode?: StringNullableFilter | String | Null,
?   phone?: StringNullableFilter | String | Null,
?   website?: StringNullableFilter | String | Null,
?   logo?: StringNullableFilter | String | Null,
?   status?: EnumBusinessStatusFilter | BusinessStatus,
?   needsReview?: BoolFilter | Boolean,
?   themeId?: StringNullableFilter | String | Null,
?   layoutId?: StringNullableFilter | String | Null,
?   headerStyle?: StringNullableFilter | String | Null,
?   ctaText?: StringNullableFilter | String | Null,
?   ctaStyle?: StringNullableFilter | String | Null,
?   showTestimonials?: BoolFilter | Boolean,
?   showGallery?: BoolFilter | Boolean,
?   showBusinessHours?: BoolFilter | Boolean,
?   facebookUrl?: StringNullableFilter | String | Null,
?   instagramUrl?: StringNullableFilter | String | Null,
?   linkedinUrl?: StringNullableFilter | String | Null,
?   abnVerificationStatus?: StringNullableFilter | String | Null,
?   abnVerificationDate?: DateTimeNullableFilter | DateTime | Null,
?   abnVerificationData?: JsonNullableFilter,
?   abnVerificationNotes?: StringNullableFilter | String | Null,
?   abnVerifiedBy?: StringNullableFilter | String | Null,
?   abnAutoVerified?: BoolFilter | Boolean,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   userId?: StringFilter | String,
?   profileTheme?: JsonNullableFilter,
?   user?: UserScalarRelationFilter | UserWhereInput,
?   content?: ContentListRelationFilter,
?   leads?: LeadListRelationFilter,
?   inquiries?: InquiryListRelationFilter,
?   ownershipClaims?: OwnershipClaimListRelationFilter,
?   customization?: BusinessProfileCustomizationNullableScalarRelationFilter | BusinessProfileCustomizationWhereInput | Null
  },
  include: {
    customization: true
  },
  orderBy: [
    {
      featured: "desc"
    },
    {
      createdAt: "desc"
    }
  ],
  take: 20
}

Unknown argument `published`. Available options are marked with ?.
    at async getBusinesses (app/category/[slug]/page.tsx:41:22)
    at async CategoryPage (app/category/[slug]/page.tsx:78:59)
  39 |   if (!category) return { businesses: [], category: null, suburbsWithBusinesses: [] };
  40 |
> 41 |   const businesses = await prisma.business.findMany({
     |                      ^
  42 |     where: {
  43 |       category: category.name,
  44 |       published: true, {
  clientVersion: '6.15.0',
  digest: '1627251804'
}
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:11:70)
    at Array.find (<anonymous>)
    at Module.generateMetadata (app/category/[slug]/layout.tsx:11:40)
   9 |
  10 | export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
> 11 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  12 |   
  13 |   if (!category) {
  14 |     return {
 GET /category/electrician 200 in 512ms
 GET /suburb 500 in 875ms
 GET /category 500 in 731ms
 GET /category/plumbing 500 in 881ms
 âœ“ Compiled in 352ms (881 modules)
 âš  Fast Refresh had to perform a full reload due to a runtime error.
prisma:query SELECT 1
 â¨¯ Error [PrismaClientValidationError]: 
Invalid `prisma.business.groupBy()` invocation:

{
  select: {
    _count: {
      select: {
        suburb: true
      }
    },
    suburb: true
  },
  by: [
    "suburb"
  ],
  where: {
    published: true,
    ~~~~~~~~~
?   AND?: BusinessWhereInput | BusinessWhereInput[],
?   OR?: BusinessWhereInput[],
?   NOT?: BusinessWhereInput | BusinessWhereInput[],
?   id?: StringFilter | String,
?   slug?: StringFilter | String,
?   name?: StringFilter | String,
?   abn?: StringNullableFilter | String | Null,
?   email?: StringFilter | String,
?   bio?: StringNullableFilter | String | Null,
?   suburb?: StringFilter | String,
?   serviceAreas?: StringFilter | String,
?   postcode?: StringNullableFilter | String | Null,
?   phone?: StringNullableFilter | String | Null,
?   website?: StringNullableFilter | String | Null,
?   logo?: StringNullableFilter | String | Null,
?   category?: StringNullableFilter | String | Null,
?   status?: EnumBusinessStatusFilter | BusinessStatus,
?   needsReview?: BoolFilter | Boolean,
?   themeId?: StringNullableFilter | String | Null,
?   layoutId?: StringNullableFilter | String | Null,
?   headerStyle?: StringNullableFilter | String | Null,
?   ctaText?: StringNullableFilter | String | Null,
?   ctaStyle?: StringNullableFilter | String | Null,
?   showTestimonials?: BoolFilter | Boolean,
?   showGallery?: BoolFilter | Boolean,
?   showBusinessHours?: BoolFilter | Boolean,
?   facebookUrl?: StringNullableFilter | String | Null,
?   instagramUrl?: StringNullableFilter | String | Null,
?   linkedinUrl?: StringNullableFilter | String | Null,
?   abnVerificationStatus?: StringNullableFilter | String | Null,
?   abnVerificationDate?: DateTimeNullableFilter | DateTime | Null,
?   abnVerificationData?: JsonNullableFilter,
?   abnVerificationNotes?: StringNullableFilter | String | Null,
?   abnVerifiedBy?: StringNullableFilter | String | Null,
?   abnAutoVerified?: BoolFilter | Boolean,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   userId?: StringFilter | String,
?   profileTheme?: JsonNullableFilter,
?   user?: UserScalarRelationFilter | UserWhereInput,
?   content?: ContentListRelationFilter,
?   leads?: LeadListRelationFilter,
?   inquiries?: InquiryListRelationFilter,
?   ownershipClaims?: OwnershipClaimListRelationFilter,
?   customization?: BusinessProfileCustomizationNullableScalarRelationFilter | BusinessProfileCustomizationWhereInput | Null
  },
  orderBy: {
    _count: {
      suburb: "desc"
    }
  },
  take: 50
}

Unknown argument `published`. Available options are marked with ?.
    at async getSuburbStats (app/suburb/page.tsx:20:23)
    at async SuburbsPage (app/suburb/page.tsx:40:23)
  18 | async function getSuburbStats() {
  19 |   // Get business counts per suburb (top suburbs only)
> 20 |   const suburbStats = await prisma.business.groupBy({
     |                       ^
  21 |     by: ['suburb'],
  22 |     where: {
  23 |       published: true, {
  clientVersion: '6.15.0',
  digest: '3786003297'
}
 â¨¯ Error [PrismaClientValidationError]: 
Invalid `prisma.business.groupBy()` invocation:

{
  select: {
    _count: {
      select: {
        category: true
      }
    },
    category: true
  },
  by: [
    "category"
  ],
  where: {
    published: true,
    ~~~~~~~~~
?   AND?: BusinessWhereInput | BusinessWhereInput[],
?   OR?: BusinessWhereInput[],
?   NOT?: BusinessWhereInput | BusinessWhereInput[],
?   id?: StringFilter | String,
?   slug?: StringFilter | String,
?   name?: StringFilter | String,
?   abn?: StringNullableFilter | String | Null,
?   email?: StringFilter | String,
?   bio?: StringNullableFilter | String | Null,
?   suburb?: StringFilter | String,
?   serviceAreas?: StringFilter | String,
?   postcode?: StringNullableFilter | String | Null,
?   phone?: StringNullableFilter | String | Null,
?   website?: StringNullableFilter | String | Null,
?   logo?: StringNullableFilter | String | Null,
?   category?: StringNullableFilter | String | Null,
?   status?: EnumBusinessStatusFilter | BusinessStatus,
?   needsReview?: BoolFilter | Boolean,
?   themeId?: StringNullableFilter | String | Null,
?   layoutId?: StringNullableFilter | String | Null,
?   headerStyle?: StringNullableFilter | String | Null,
?   ctaText?: StringNullableFilter | String | Null,
?   ctaStyle?: StringNullableFilter | String | Null,
?   showTestimonials?: BoolFilter | Boolean,
?   showGallery?: BoolFilter | Boolean,
?   showBusinessHours?: BoolFilter | Boolean,
?   facebookUrl?: StringNullableFilter | String | Null,
?   instagramUrl?: StringNullableFilter | String | Null,
?   linkedinUrl?: StringNullableFilter | String | Null,
?   abnVerificationStatus?: StringNullableFilter | String | Null,
?   abnVerificationDate?: DateTimeNullableFilter | DateTime | Null,
?   abnVerificationData?: JsonNullableFilter,
?   abnVerificationNotes?: StringNullableFilter | String | Null,
?   abnVerifiedBy?: StringNullableFilter | String | Null,
?   abnAutoVerified?: BoolFilter | Boolean,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   userId?: StringFilter | String,
?   profileTheme?: JsonNullableFilter,
?   user?: UserScalarRelationFilter | UserWhereInput,
?   content?: ContentListRelationFilter,
?   leads?: LeadListRelationFilter,
?   inquiries?: InquiryListRelationFilter,
?   ownershipClaims?: OwnershipClaimListRelationFilter,
?   customization?: BusinessProfileCustomizationNullableScalarRelationFilter | BusinessProfileCustomizationWhereInput | Null
  },
  orderBy: {
    _count: {
      category: "desc"
    }
  }
}

Unknown argument `published`. Available options are marked with ?.
    at async getCategoryStats (app/category/page.tsx:20:25)
    at async CategoriesPage (app/category/page.tsx:39:25)
  18 | async function getCategoryStats() {
  19 |   // Get business counts per category
> 20 |   const categoryStats = await prisma.business.groupBy({
     |                         ^
  21 |     by: ['category'],
  22 |     where: {
  23 |       published: true, {
  clientVersion: '6.15.0',
  digest: '3423921557'
}
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:56:70)
    at Array.find (<anonymous>)
    at CategoryLayout (app/category/[slug]/layout.tsx:56:40)
  54 |
  55 | export default function CategoryLayout({ params, children }: Props) {
> 56 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  57 |   
  58 |   if (!category) {
  59 |     notFound();
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at CategoryPage (app/category/[slug]/page.tsx:78:86)
  76 |
  77 | export default async function CategoryPage({ params }: CategoryPageProps) {
> 78 |   const { businesses, category, suburbsWithBusinesses } = await getBusinesses(params.slug);
     |                                                                                      ^
  79 |
  80 |   if (!category) {
  81 |     notFound();
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:56:70)
    at Array.find (<anonymous>)
    at CategoryLayout (app/category/[slug]/layout.tsx:56:40)
  54 |
  55 | export default function CategoryLayout({ params, children }: Props) {
> 56 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  57 |   
  58 |   if (!category) {
  59 |     notFound();
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at CategoryPage (app/category/[slug]/page.tsx:78:86)
  76 |
  77 | export default async function CategoryPage({ params }: CategoryPageProps) {
> 78 |   const { businesses, category, suburbsWithBusinesses } = await getBusinesses(params.slug);
     |                                                                                      ^
  79 |
  80 |   if (!category) {
  81 |     notFound();
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:11:70)
    at Array.find (<anonymous>)
    at Module.generateMetadata (app/category/[slug]/layout.tsx:11:40)
   9 |
  10 | export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
> 11 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  12 |   
  13 |   if (!category) {
  14 |     return {
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:11:70)
    at Array.find (<anonymous>)
    at Module.generateMetadata (app/category/[slug]/layout.tsx:11:40)
   9 |
  10 | export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
> 11 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  12 |   
  13 |   if (!category) {
  14 |     return {
 â¨¯ Error [PrismaClientValidationError]: 
Invalid `prisma.business.findMany()` invocation:

{
  where: {
    category: "Plumbing",
    published: true,
    ~~~~~~~~~
?   AND?: BusinessWhereInput | BusinessWhereInput[],
?   OR?: BusinessWhereInput[],
?   NOT?: BusinessWhereInput | BusinessWhereInput[],
?   id?: StringFilter | String,
?   slug?: StringFilter | String,
?   name?: StringFilter | String,
?   abn?: StringNullableFilter | String | Null,
?   email?: StringFilter | String,
?   bio?: StringNullableFilter | String | Null,
?   suburb?: StringFilter | String,
?   serviceAreas?: StringFilter | String,
?   postcode?: StringNullableFilter | String | Null,
?   phone?: StringNullableFilter | String | Null,
?   website?: StringNullableFilter | String | Null,
?   logo?: StringNullableFilter | String | Null,
?   status?: EnumBusinessStatusFilter | BusinessStatus,
?   needsReview?: BoolFilter | Boolean,
?   themeId?: StringNullableFilter | String | Null,
?   layoutId?: StringNullableFilter | String | Null,
?   headerStyle?: StringNullableFilter | String | Null,
?   ctaText?: StringNullableFilter | String | Null,
?   ctaStyle?: StringNullableFilter | String | Null,
?   showTestimonials?: BoolFilter | Boolean,
?   showGallery?: BoolFilter | Boolean,
?   showBusinessHours?: BoolFilter | Boolean,
?   facebookUrl?: StringNullableFilter | String | Null,
?   instagramUrl?: StringNullableFilter | String | Null,
?   linkedinUrl?: StringNullableFilter | String | Null,
?   abnVerificationStatus?: StringNullableFilter | String | Null,
?   abnVerificationDate?: DateTimeNullableFilter | DateTime | Null,
?   abnVerificationData?: JsonNullableFilter,
?   abnVerificationNotes?: StringNullableFilter | String | Null,
?   abnVerifiedBy?: StringNullableFilter | String | Null,
?   abnAutoVerified?: BoolFilter | Boolean,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   userId?: StringFilter | String,
?   profileTheme?: JsonNullableFilter,
?   user?: UserScalarRelationFilter | UserWhereInput,
?   content?: ContentListRelationFilter,
?   leads?: LeadListRelationFilter,
?   inquiries?: InquiryListRelationFilter,
?   ownershipClaims?: OwnershipClaimListRelationFilter,
?   customization?: BusinessProfileCustomizationNullableScalarRelationFilter | BusinessProfileCustomizationWhereInput | Null
  },
  include: {
    customization: true
  },
  orderBy: [
    {
      featured: "desc"
    },
    {
      createdAt: "desc"
    }
  ],
  take: 20
}

Unknown argument `published`. Available options are marked with ?.
    at async getBusinesses (app/category/[slug]/page.tsx:41:22)
    at async CategoryPage (app/category/[slug]/page.tsx:78:59)
  39 |   if (!category) return { businesses: [], category: null, suburbsWithBusinesses: [] };
  40 |
> 41 |   const businesses = await prisma.business.findMany({
     |                      ^
  42 |     where: {
  43 |       category: category.name,
  44 |       published: true, {
  clientVersion: '6.15.0',
  digest: '1627251804'
}
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:11:70)
    at Array.find (<anonymous>)
    at Module.generateMetadata (app/category/[slug]/layout.tsx:11:40)
   9 |
  10 | export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
> 11 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  12 |   
  13 |   if (!category) {
  14 |     return {
 âš  Fast Refresh had to perform a full reload due to a runtime error.
 GET /suburb 500 in 475ms
 GET /category/electrician 200 in 452ms
 GET /category 500 in 474ms
 GET /category/plumbing 500 in 478ms
 âš  Fast Refresh had to perform a full reload due to a runtime error.
 âš  Fast Refresh had to perform a full reload due to a runtime error.
 âš  Fast Refresh had to perform a full reload due to a runtime error.
 âœ“ Compiled in 490ms (1599 modules)
 âš  metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
prisma:query SELECT 1
 â¨¯ Error [PrismaClientValidationError]: 
Invalid `prisma.business.groupBy()` invocation:

{
  select: {
    _count: {
      select: {
        suburb: true
      }
    },
    suburb: true
  },
  by: [
    "suburb"
  ],
  where: {
    published: true,
    ~~~~~~~~~
?   AND?: BusinessWhereInput | BusinessWhereInput[],
?   OR?: BusinessWhereInput[],
?   NOT?: BusinessWhereInput | BusinessWhereInput[],
?   id?: StringFilter | String,
?   slug?: StringFilter | String,
?   name?: StringFilter | String,
?   abn?: StringNullableFilter | String | Null,
?   email?: StringFilter | String,
?   bio?: StringNullableFilter | String | Null,
?   suburb?: StringFilter | String,
?   serviceAreas?: StringFilter | String,
?   postcode?: StringNullableFilter | String | Null,
?   phone?: StringNullableFilter | String | Null,
?   website?: StringNullableFilter | String | Null,
?   logo?: StringNullableFilter | String | Null,
?   category?: StringNullableFilter | String | Null,
?   status?: EnumBusinessStatusFilter | BusinessStatus,
?   needsReview?: BoolFilter | Boolean,
?   themeId?: StringNullableFilter | String | Null,
?   layoutId?: StringNullableFilter | String | Null,
?   headerStyle?: StringNullableFilter | String | Null,
?   ctaText?: StringNullableFilter | String | Null,
?   ctaStyle?: StringNullableFilter | String | Null,
?   showTestimonials?: BoolFilter | Boolean,
?   showGallery?: BoolFilter | Boolean,
?   showBusinessHours?: BoolFilter | Boolean,
?   facebookUrl?: StringNullableFilter | String | Null,
?   instagramUrl?: StringNullableFilter | String | Null,
?   linkedinUrl?: StringNullableFilter | String | Null,
?   abnVerificationStatus?: StringNullableFilter | String | Null,
?   abnVerificationDate?: DateTimeNullableFilter | DateTime | Null,
?   abnVerificationData?: JsonNullableFilter,
?   abnVerificationNotes?: StringNullableFilter | String | Null,
?   abnVerifiedBy?: StringNullableFilter | String | Null,
?   abnAutoVerified?: BoolFilter | Boolean,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   userId?: StringFilter | String,
?   profileTheme?: JsonNullableFilter,
?   user?: UserScalarRelationFilter | UserWhereInput,
?   content?: ContentListRelationFilter,
?   leads?: LeadListRelationFilter,
?   inquiries?: InquiryListRelationFilter,
?   ownershipClaims?: OwnershipClaimListRelationFilter,
?   customization?: BusinessProfileCustomizationNullableScalarRelationFilter | BusinessProfileCustomizationWhereInput | Null
  },
  orderBy: {
    _count: {
      suburb: "desc"
    }
  },
  take: 50
}

Unknown argument `published`. Available options are marked with ?.
    at async getSuburbStats (app/suburb/page.tsx:20:23)
    at async SuburbsPage (app/suburb/page.tsx:40:23)
  18 | async function getSuburbStats() {
  19 |   // Get business counts per suburb (top suburbs only)
> 20 |   const suburbStats = await prisma.business.groupBy({
     |                       ^
  21 |     by: ['suburb'],
  22 |     where: {
  23 |       published: true, {
  clientVersion: '6.15.0',
  digest: '3786003297'
}
 GET /suburb 500 in 840ms
 âš  Fast Refresh had to perform a full reload due to a runtime error.
 âš  Fast Refresh had to perform a full reload due to a runtime error.
 âœ“ Compiled /_not-found in 196ms (1590 modules)
 âš  metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
 GET /category/electrician 404 in 949ms
 GET /category/plumbing 404 in 1190ms
 GET /category 404 in 1180ms
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:56:70)
    at Array.find (<anonymous>)
    at CategoryLayout (app/category/[slug]/layout.tsx:56:40)
  54 |
  55 | export default function CategoryLayout({ params, children }: Props) {
> 56 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  57 |   
  58 |   if (!category) {
  59 |     notFound();
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at CategoryPage (app/category/[slug]/page.tsx:77:86)
  75 |
  76 | export default async function CategoryPage({ params }: CategoryPageProps) {
> 77 |   const { businesses, category, suburbsWithBusinesses } = await getBusinesses(params.slug);
     |                                                                                      ^
  78 |
  79 |   if (!category) {
  80 |     notFound();
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:11:70)
    at Array.find (<anonymous>)
    at Module.generateMetadata (app/category/[slug]/layout.tsx:11:40)
   9 |
  10 | export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
> 11 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  12 |   
  13 |   if (!category) {
  14 |     return {
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:11:70)
    at Array.find (<anonymous>)
    at Module.generateMetadata (app/category/[slug]/layout.tsx:11:40)
   9 |
  10 | export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
> 11 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  12 |   
  13 |   if (!category) {
  14 |     return {
 GET /category/electrician 404 in 197ms
 âœ“ Compiled /api/auth/[...nextauth] in 185ms (959 modules)
 GET /api/auth/session 200 in 729ms
 GET /api/auth/session 200 in 16ms
 GET /api/auth/session 200 in 15ms
 GET /api/auth/session 200 in 15ms
 GET /api/auth/session 200 in 19ms
 âš  Fast Refresh had to perform a full reload due to a runtime error.
 âœ“ Compiled in 727ms (1747 modules)
 âœ“ Compiled in 0ms (867 modules)
 âœ“ Compiled in 0ms (867 modules)
 âœ“ Compiled in 1ms (867 modules)
 âš  metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
 â¨¯ Error [PrismaClientValidationError]: 
Invalid `prisma.business.groupBy()` invocation:

{
  select: {
    _count: {
      select: {
        suburb: true
      }
    },
    suburb: true
  },
  by: [
    "suburb"
  ],
  where: {
    published: true,
    ~~~~~~~~~
?   AND?: BusinessWhereInput | BusinessWhereInput[],
?   OR?: BusinessWhereInput[],
?   NOT?: BusinessWhereInput | BusinessWhereInput[],
?   id?: StringFilter | String,
?   slug?: StringFilter | String,
?   name?: StringFilter | String,
?   abn?: StringNullableFilter | String | Null,
?   email?: StringFilter | String,
?   bio?: StringNullableFilter | String | Null,
?   suburb?: StringFilter | String,
?   serviceAreas?: StringFilter | String,
?   postcode?: StringNullableFilter | String | Null,
?   phone?: StringNullableFilter | String | Null,
?   website?: StringNullableFilter | String | Null,
?   logo?: StringNullableFilter | String | Null,
?   category?: StringNullableFilter | String | Null,
?   status?: EnumBusinessStatusFilter | BusinessStatus,
?   needsReview?: BoolFilter | Boolean,
?   themeId?: StringNullableFilter | String | Null,
?   layoutId?: StringNullableFilter | String | Null,
?   headerStyle?: StringNullableFilter | String | Null,
?   ctaText?: StringNullableFilter | String | Null,
?   ctaStyle?: StringNullableFilter | String | Null,
?   showTestimonials?: BoolFilter | Boolean,
?   showGallery?: BoolFilter | Boolean,
?   showBusinessHours?: BoolFilter | Boolean,
?   facebookUrl?: StringNullableFilter | String | Null,
?   instagramUrl?: StringNullableFilter | String | Null,
?   linkedinUrl?: StringNullableFilter | String | Null,
?   abnVerificationStatus?: StringNullableFilter | String | Null,
?   abnVerificationDate?: DateTimeNullableFilter | DateTime | Null,
?   abnVerificationData?: JsonNullableFilter,
?   abnVerificationNotes?: StringNullableFilter | String | Null,
?   abnVerifiedBy?: StringNullableFilter | String | Null,
?   abnAutoVerified?: BoolFilter | Boolean,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   userId?: StringFilter | String,
?   profileTheme?: JsonNullableFilter,
?   user?: UserScalarRelationFilter | UserWhereInput,
?   content?: ContentListRelationFilter,
?   leads?: LeadListRelationFilter,
?   inquiries?: InquiryListRelationFilter,
?   ownershipClaims?: OwnershipClaimListRelationFilter,
?   customization?: BusinessProfileCustomizationNullableScalarRelationFilter | BusinessProfileCustomizationWhereInput | Null
  },
  orderBy: {
    _count: {
      suburb: "desc"
    }
  },
  take: 50
}

Unknown argument `published`. Available options are marked with ?.
    at async getSuburbStats (app/suburb/page.tsx:20:23)
    at async SuburbsPage (app/suburb/page.tsx:40:23)
  18 | async function getSuburbStats() {
  19 |   // Get business counts per suburb (top suburbs only)
> 20 |   const suburbStats = await prisma.business.groupBy({
     |                       ^
  21 |     by: ['suburb'],
  22 |     where: {
  23 |       published: true, {
  clientVersion: '6.15.0',
  digest: '3786003297'
}
 GET /suburb 500 in 1279ms
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:56:70)
    at Array.find (<anonymous>)
    at CategoryLayout (app/category/[slug]/layout.tsx:56:40)
  54 |
  55 | export default function CategoryLayout({ params, children }: Props) {
> 56 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  57 |   
  58 |   if (!category) {
  59 |     notFound();
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at CategoryPage (app/category/[slug]/page.tsx:77:86)
  75 |
  76 | export default async function CategoryPage({ params }: CategoryPageProps) {
> 77 |   const { businesses, category, suburbsWithBusinesses } = await getBusinesses(params.slug);
     |                                                                                      ^
  78 |
  79 |   if (!category) {
  80 |     notFound();
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:56:70)
    at Array.find (<anonymous>)
    at CategoryLayout (app/category/[slug]/layout.tsx:56:40)
  54 |
  55 | export default function CategoryLayout({ params, children }: Props) {
> 56 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  57 |   
  58 |   if (!category) {
  59 |     notFound();
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at CategoryPage (app/category/[slug]/page.tsx:77:86)
  75 |
  76 | export default async function CategoryPage({ params }: CategoryPageProps) {
> 77 |   const { businesses, category, suburbsWithBusinesses } = await getBusinesses(params.slug);
     |                                                                                      ^
  78 |
  79 |   if (!category) {
  80 |     notFound();
 âš  metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:11:70)
    at Array.find (<anonymous>)
    at Module.generateMetadata (app/category/[slug]/layout.tsx:11:40)
   9 |
  10 | export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
> 11 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  12 |   
  13 |   if (!category) {
  14 |     return {
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:11:70)
    at Array.find (<anonymous>)
    at Module.generateMetadata (app/category/[slug]/layout.tsx:11:40)
   9 |
  10 | export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
> 11 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  12 |   
  13 |   if (!category) {
  14 |     return {
 GET /category/electrician 200 in 1221ms
prisma:query SELECT 1
 â¨¯ Error [PrismaClientValidationError]: 
Invalid `prisma.business.groupBy()` invocation:

{
  select: {
    _count: {
      select: {
        category: true
      }
    },
    category: true
  },
  by: [
    "category"
  ],
  where: {
    published: true,
    ~~~~~~~~~
?   AND?: BusinessWhereInput | BusinessWhereInput[],
?   OR?: BusinessWhereInput[],
?   NOT?: BusinessWhereInput | BusinessWhereInput[],
?   id?: StringFilter | String,
?   slug?: StringFilter | String,
?   name?: StringFilter | String,
?   abn?: StringNullableFilter | String | Null,
?   email?: StringFilter | String,
?   bio?: StringNullableFilter | String | Null,
?   suburb?: StringFilter | String,
?   serviceAreas?: StringFilter | String,
?   postcode?: StringNullableFilter | String | Null,
?   phone?: StringNullableFilter | String | Null,
?   website?: StringNullableFilter | String | Null,
?   logo?: StringNullableFilter | String | Null,
?   category?: StringNullableFilter | String | Null,
?   status?: EnumBusinessStatusFilter | BusinessStatus,
?   needsReview?: BoolFilter | Boolean,
?   themeId?: StringNullableFilter | String | Null,
?   layoutId?: StringNullableFilter | String | Null,
?   headerStyle?: StringNullableFilter | String | Null,
?   ctaText?: StringNullableFilter | String | Null,
?   ctaStyle?: StringNullableFilter | String | Null,
?   showTestimonials?: BoolFilter | Boolean,
?   showGallery?: BoolFilter | Boolean,
?   showBusinessHours?: BoolFilter | Boolean,
?   facebookUrl?: StringNullableFilter | String | Null,
?   instagramUrl?: StringNullableFilter | String | Null,
?   linkedinUrl?: StringNullableFilter | String | Null,
?   abnVerificationStatus?: StringNullableFilter | String | Null,
?   abnVerificationDate?: DateTimeNullableFilter | DateTime | Null,
?   abnVerificationData?: JsonNullableFilter,
?   abnVerificationNotes?: StringNullableFilter | String | Null,
?   abnVerifiedBy?: StringNullableFilter | String | Null,
?   abnAutoVerified?: BoolFilter | Boolean,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   userId?: StringFilter | String,
?   profileTheme?: JsonNullableFilter,
?   user?: UserScalarRelationFilter | UserWhereInput,
?   content?: ContentListRelationFilter,
?   leads?: LeadListRelationFilter,
?   inquiries?: InquiryListRelationFilter,
?   ownershipClaims?: OwnershipClaimListRelationFilter,
?   customization?: BusinessProfileCustomizationNullableScalarRelationFilter | BusinessProfileCustomizationWhereInput | Null
  },
  orderBy: {
    _count: {
      category: "desc"
    }
  }
}

Unknown argument `published`. Available options are marked with ?.
    at async getCategoryStats (app/category/page.tsx:20:25)
    at async CategoriesPage (app/category/page.tsx:39:25)
  18 | async function getCategoryStats() {
  19 |   // Get business counts per category
> 20 |   const categoryStats = await prisma.business.groupBy({
     |                         ^
  21 |     by: ['category'],
  22 |     where: {
  23 |       published: true, {
  clientVersion: '6.15.0',
  digest: '3423921557'
}
prisma:query SELECT 1
 GET /category 200 in 1289ms
prisma:query SELECT "public"."businesses"."id", "public"."businesses"."slug", "public"."businesses"."name", "public"."businesses"."abn", "public"."businesses"."email", "public"."businesses"."bio", "public"."businesses"."suburb", "public"."businesses"."serviceAreas", "public"."businesses"."postcode", "public"."businesses"."phone", "public"."businesses"."website", "public"."businesses"."logo", "public"."businesses"."category", "public"."businesses"."status"::text, "public"."businesses"."needsReview", "public"."businesses"."themeId", "public"."businesses"."layoutId", "public"."businesses"."headerStyle", "public"."businesses"."ctaText", "public"."businesses"."ctaStyle", "public"."businesses"."showTestimonials", "public"."businesses"."showGallery", "public"."businesses"."showBusinessHours", "public"."businesses"."facebookUrl", "public"."businesses"."instagramUrl", "public"."businesses"."linkedinUrl", "public"."businesses"."abnVerificationStatus", "public"."businesses"."abnVerificationDate", "public"."businesses"."abnVerificationData", "public"."businesses"."abnVerificationNotes", "public"."businesses"."abnVerifiedBy", "public"."businesses"."abnAutoVerified", "public"."businesses"."createdAt", "public"."businesses"."updatedAt", "public"."businesses"."userId", "public"."businesses"."profileTheme" FROM "public"."businesses" WHERE ("public"."businesses"."category" = $1 AND "public"."businesses"."status" = CAST($2::text AS "public"."BusinessStatus")) ORDER BY "public"."businesses"."createdAt" DESC LIMIT $3 OFFSET $4
prisma:query SELECT COUNT("public"."businesses"."suburb"), "public"."businesses"."suburb" FROM "public"."businesses" WHERE ("public"."businesses"."category" = $1 AND "public"."businesses"."status" = CAST($2::text AS "public"."BusinessStatus")) GROUP BY "public"."businesses"."suburb" ORDER BY COUNT("public"."businesses"."suburb") DESC LIMIT $3 OFFSET $4
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/page.tsx:382:52)
    at Array.filter (<anonymous>)
    at CategoryPage (app/category/[slug]/page.tsx:382:20)
  380 |               <CardContent className="space-y-2">
  381 |                 {BUSINESS_CATEGORIES
> 382 |                   .filter(cat => cat.id !== params.slug)
      |                                                    ^
  383 |                   .slice(0, 6)
  384 |                   .map(cat => (
  385 |                     <Link key={cat.id} href={`/category/${cat.id}`}>
 GET /category/plumbing 200 in 1527ms
 âš  Fast Refresh had to perform a full reload due to a runtime error.
 âš  Fast Refresh had to perform a full reload due to a runtime error.
 âœ“ Compiled in 646ms (1747 modules)
 âœ“ Compiled in 0ms (867 modules)
 âœ“ Compiled in 0ms (867 modules)
 âœ“ Compiled in 0ms (867 modules)
 âš  metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
 â¨¯ Error [PrismaClientValidationError]: 
Invalid `prisma.business.groupBy()` invocation:

{
  select: {
    _count: {
      select: {
        suburb: true
      }
    },
    suburb: true
  },
  by: [
    "suburb"
  ],
  where: {
    published: true,
    ~~~~~~~~~
?   AND?: BusinessWhereInput | BusinessWhereInput[],
?   OR?: BusinessWhereInput[],
?   NOT?: BusinessWhereInput | BusinessWhereInput[],
?   id?: StringFilter | String,
?   slug?: StringFilter | String,
?   name?: StringFilter | String,
?   abn?: StringNullableFilter | String | Null,
?   email?: StringFilter | String,
?   bio?: StringNullableFilter | String | Null,
?   suburb?: StringFilter | String,
?   serviceAreas?: StringFilter | String,
?   postcode?: StringNullableFilter | String | Null,
?   phone?: StringNullableFilter | String | Null,
?   website?: StringNullableFilter | String | Null,
?   logo?: StringNullableFilter | String | Null,
?   category?: StringNullableFilter | String | Null,
?   status?: EnumBusinessStatusFilter | BusinessStatus,
?   needsReview?: BoolFilter | Boolean,
?   themeId?: StringNullableFilter | String | Null,
?   layoutId?: StringNullableFilter | String | Null,
?   headerStyle?: StringNullableFilter | String | Null,
?   ctaText?: StringNullableFilter | String | Null,
?   ctaStyle?: StringNullableFilter | String | Null,
?   showTestimonials?: BoolFilter | Boolean,
?   showGallery?: BoolFilter | Boolean,
?   showBusinessHours?: BoolFilter | Boolean,
?   facebookUrl?: StringNullableFilter | String | Null,
?   instagramUrl?: StringNullableFilter | String | Null,
?   linkedinUrl?: StringNullableFilter | String | Null,
?   abnVerificationStatus?: StringNullableFilter | String | Null,
?   abnVerificationDate?: DateTimeNullableFilter | DateTime | Null,
?   abnVerificationData?: JsonNullableFilter,
?   abnVerificationNotes?: StringNullableFilter | String | Null,
?   abnVerifiedBy?: StringNullableFilter | String | Null,
?   abnAutoVerified?: BoolFilter | Boolean,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   userId?: StringFilter | String,
?   profileTheme?: JsonNullableFilter,
?   user?: UserScalarRelationFilter | UserWhereInput,
?   content?: ContentListRelationFilter,
?   leads?: LeadListRelationFilter,
?   inquiries?: InquiryListRelationFilter,
?   ownershipClaims?: OwnershipClaimListRelationFilter,
?   customization?: BusinessProfileCustomizationNullableScalarRelationFilter | BusinessProfileCustomizationWhereInput | Null
  },
  orderBy: {
    _count: {
      suburb: "desc"
    }
  },
  take: 50
}

Unknown argument `published`. Available options are marked with ?.
    at async getSuburbStats (app/suburb/page.tsx:20:23)
    at async SuburbsPage (app/suburb/page.tsx:40:23)
  18 | async function getSuburbStats() {
  19 |   // Get business counts per suburb (top suburbs only)
> 20 |   const suburbStats = await prisma.business.groupBy({
     |                       ^
  21 |     by: ['suburb'],
  22 |     where: {
  23 |       published: true, {
  clientVersion: '6.15.0',
  digest: '3786003297'
}
prisma:query SELECT COUNT("public"."businesses"."category"), "public"."businesses"."category" FROM "public"."businesses" WHERE "public"."businesses"."status" = CAST($1::text AS "public"."BusinessStatus") GROUP BY "public"."businesses"."category" ORDER BY COUNT("public"."businesses"."category") DESC OFFSET $2
 GET /suburb 500 in 959ms
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:56:70)
    at Array.find (<anonymous>)
    at CategoryLayout (app/category/[slug]/layout.tsx:56:40)
  54 |
  55 | export default function CategoryLayout({ params, children }: Props) {
> 56 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  57 |   
  58 |   if (!category) {
  59 |     notFound();
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at CategoryPage (app/category/[slug]/page.tsx:77:86)
  75 |
  76 | export default async function CategoryPage({ params }: CategoryPageProps) {
> 77 |   const { businesses, category, suburbsWithBusinesses } = await getBusinesses(params.slug);
     |                                                                                      ^
  78 |
  79 |   if (!category) {
  80 |     notFound();
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:56:70)
    at Array.find (<anonymous>)
    at CategoryLayout (app/category/[slug]/layout.tsx:56:40)
  54 |
  55 | export default function CategoryLayout({ params, children }: Props) {
> 56 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  57 |   
  58 |   if (!category) {
  59 |     notFound();
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at CategoryPage (app/category/[slug]/page.tsx:77:86)
  75 |
  76 | export default async function CategoryPage({ params }: CategoryPageProps) {
> 77 |   const { businesses, category, suburbsWithBusinesses } = await getBusinesses(params.slug);
     |                                                                                      ^
  78 |
  79 |   if (!category) {
  80 |     notFound();
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:11:70)
    at Array.find (<anonymous>)
    at Module.generateMetadata (app/category/[slug]/layout.tsx:11:40)
   9 |
  10 | export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
> 11 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  12 |   
  13 |   if (!category) {
  14 |     return {
 âš  metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:11:70)
    at Array.find (<anonymous>)
    at Module.generateMetadata (app/category/[slug]/layout.tsx:11:40)
   9 |
  10 | export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
> 11 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  12 |   
  13 |   if (!category) {
  14 |     return {
 GET /category/electrician 200 in 992ms
prisma:query SELECT "public"."businesses"."id", "public"."businesses"."slug", "public"."businesses"."name", "public"."businesses"."abn", "public"."businesses"."email", "public"."businesses"."bio", "public"."businesses"."suburb", "public"."businesses"."serviceAreas", "public"."businesses"."postcode", "public"."businesses"."phone", "public"."businesses"."website", "public"."businesses"."logo", "public"."businesses"."category", "public"."businesses"."status"::text, "public"."businesses"."needsReview", "public"."businesses"."themeId", "public"."businesses"."layoutId", "public"."businesses"."headerStyle", "public"."businesses"."ctaText", "public"."businesses"."ctaStyle", "public"."businesses"."showTestimonials", "public"."businesses"."showGallery", "public"."businesses"."showBusinessHours", "public"."businesses"."facebookUrl", "public"."businesses"."instagramUrl", "public"."businesses"."linkedinUrl", "public"."businesses"."abnVerificationStatus", "public"."businesses"."abnVerificationDate", "public"."businesses"."abnVerificationData", "public"."businesses"."abnVerificationNotes", "public"."businesses"."abnVerifiedBy", "public"."businesses"."abnAutoVerified", "public"."businesses"."createdAt", "public"."businesses"."updatedAt", "public"."businesses"."userId", "public"."businesses"."profileTheme" FROM "public"."businesses" WHERE ("public"."businesses"."category" = $1 AND "public"."businesses"."status" = CAST($2::text AS "public"."BusinessStatus")) ORDER BY "public"."businesses"."createdAt" DESC LIMIT $3 OFFSET $4
prisma:query SELECT COUNT("public"."businesses"."suburb"), "public"."businesses"."suburb" FROM "public"."businesses" WHERE ("public"."businesses"."category" = $1 AND "public"."businesses"."status" = CAST($2::text AS "public"."BusinessStatus")) GROUP BY "public"."businesses"."suburb" ORDER BY COUNT("public"."businesses"."suburb") DESC LIMIT $3 OFFSET $4
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/page.tsx:382:52)
    at Array.filter (<anonymous>)
    at CategoryPage (app/category/[slug]/page.tsx:382:20)
  380 |               <CardContent className="space-y-2">
  381 |                 {BUSINESS_CATEGORIES
> 382 |                   .filter(cat => cat.id !== params.slug)
      |                                                    ^
  383 |                   .slice(0, 6)
  384 |                   .map(cat => (
  385 |                     <Link key={cat.id} href={`/category/${cat.id}`}>
 GET /category 200 in 1316ms
 GET /category/plumbing 200 in 1094ms
 GET /api/auth/session 200 in 58ms
 GET /api/auth/session 200 in 12ms
 GET /api/auth/session 200 in 15ms
 âš  Fast Refresh had to perform a full reload due to a runtime error.
 âš  Fast Refresh had to perform a full reload. Read more: https://nextjs.org/docs/messages/fast-refresh-reload
 âœ“ Compiled in 429ms (1747 modules)
 âœ“ Compiled in 0ms (867 modules)
 âœ“ Compiled in 0ms (867 modules)
 âœ“ Compiled in 2ms (867 modules)
 âš  metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT COUNT("public"."businesses"."category"), "public"."businesses"."category" FROM "public"."businesses" WHERE "public"."businesses"."status" = CAST($1::text AS "public"."BusinessStatus") GROUP BY "public"."businesses"."category" ORDER BY COUNT("public"."businesses"."category") DESC OFFSET $2
prisma:query SELECT COUNT("public"."businesses"."category"), "public"."businesses"."category" FROM "public"."businesses" WHERE "public"."businesses"."status" = CAST($1::text AS "public"."BusinessStatus") GROUP BY "public"."businesses"."category" ORDER BY COUNT("public"."businesses"."category") DESC OFFSET $2
 GET /category 200 in 853ms
prisma:query SELECT COUNT("public"."businesses"."suburb"), "public"."businesses"."suburb" FROM "public"."businesses" WHERE "public"."businesses"."status" = CAST($1::text AS "public"."BusinessStatus") GROUP BY "public"."businesses"."suburb" ORDER BY COUNT("public"."businesses"."suburb") DESC LIMIT $2 OFFSET $3
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:56:70)
    at Array.find (<anonymous>)
    at CategoryLayout (app/category/[slug]/layout.tsx:56:40)
  54 |
  55 | export default function CategoryLayout({ params, children }: Props) {
> 56 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  57 |   
  58 |   if (!category) {
  59 |     notFound();
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at CategoryPage (app/category/[slug]/page.tsx:77:86)
  75 |
  76 | export default async function CategoryPage({ params }: CategoryPageProps) {
> 77 |   const { businesses, category, suburbsWithBusinesses } = await getBusinesses(params.slug);
     |                                                                                      ^
  78 |
  79 |   if (!category) {
  80 |     notFound();
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:56:70)
    at Array.find (<anonymous>)
    at CategoryLayout (app/category/[slug]/layout.tsx:56:40)
  54 |
  55 | export default function CategoryLayout({ params, children }: Props) {
> 56 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  57 |   
  58 |   if (!category) {
  59 |     notFound();
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at CategoryPage (app/category/[slug]/page.tsx:77:86)
  75 |
  76 | export default async function CategoryPage({ params }: CategoryPageProps) {
> 77 |   const { businesses, category, suburbsWithBusinesses } = await getBusinesses(params.slug);
     |                                                                                      ^
  78 |
  79 |   if (!category) {
  80 |     notFound();
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:11:70)
    at Array.find (<anonymous>)
    at Module.generateMetadata (app/category/[slug]/layout.tsx:11:40)
   9 |
  10 | export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
> 11 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  12 |   
  13 |   if (!category) {
  14 |     return {
 âš  metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:11:70)
    at Array.find (<anonymous>)
    at Module.generateMetadata (app/category/[slug]/layout.tsx:11:40)
   9 |
  10 | export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
> 11 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  12 |   
  13 |   if (!category) {
  14 |     return {
 GET /suburb 200 in 1261ms
 GET /category/electrician 200 in 1109ms
prisma:query SELECT "public"."businesses"."id", "public"."businesses"."slug", "public"."businesses"."name", "public"."businesses"."abn", "public"."businesses"."email", "public"."businesses"."bio", "public"."businesses"."suburb", "public"."businesses"."serviceAreas", "public"."businesses"."postcode", "public"."businesses"."phone", "public"."businesses"."website", "public"."businesses"."logo", "public"."businesses"."category", "public"."businesses"."status"::text, "public"."businesses"."needsReview", "public"."businesses"."themeId", "public"."businesses"."layoutId", "public"."businesses"."headerStyle", "public"."businesses"."ctaText", "public"."businesses"."ctaStyle", "public"."businesses"."showTestimonials", "public"."businesses"."showGallery", "public"."businesses"."showBusinessHours", "public"."businesses"."facebookUrl", "public"."businesses"."instagramUrl", "public"."businesses"."linkedinUrl", "public"."businesses"."abnVerificationStatus", "public"."businesses"."abnVerificationDate", "public"."businesses"."abnVerificationData", "public"."businesses"."abnVerificationNotes", "public"."businesses"."abnVerifiedBy", "public"."businesses"."abnAutoVerified", "public"."businesses"."createdAt", "public"."businesses"."updatedAt", "public"."businesses"."userId", "public"."businesses"."profileTheme" FROM "public"."businesses" WHERE ("public"."businesses"."category" = $1 AND "public"."businesses"."status" = CAST($2::text AS "public"."BusinessStatus")) ORDER BY "public"."businesses"."createdAt" DESC LIMIT $3 OFFSET $4
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/page.tsx:382:52)
    at Array.filter (<anonymous>)
    at CategoryPage (app/category/[slug]/page.tsx:382:20)
  380 |               <CardContent className="space-y-2">
  381 |                 {BUSINESS_CATEGORIES
> 382 |                   .filter(cat => cat.id !== params.slug)
      |                                                    ^
  383 |                   .slice(0, 6)
  384 |                   .map(cat => (
  385 |                     <Link key={cat.id} href={`/category/${cat.id}`}>
prisma:query SELECT COUNT("public"."businesses"."suburb"), "public"."businesses"."suburb" FROM "public"."businesses" WHERE ("public"."businesses"."category" = $1 AND "public"."businesses"."status" = CAST($2::text AS "public"."BusinessStatus")) GROUP BY "public"."businesses"."suburb" ORDER BY COUNT("public"."businesses"."suburb") DESC LIMIT $3 OFFSET $4
 GET /category 200 in 1291ms
 GET /category/plumbing 200 in 1185ms
 GET /api/auth/session 200 in 57ms
 GET /api/auth/session 200 in 15ms
 GET /api/auth/session 200 in 16ms
 GET /api/auth/session 200 in 13ms
 GET /api/auth/session 200 in 13ms
<w> [webpack.cache.PackFileCacheStrategy] Caching failed for pack: Error: ENOENT: no such file or directory, rename '/Users/carlg/Documents/PROJECTS/suburbmates/.next/cache/webpack/client-development/0.pack.gz_' -> '/Users/carlg/Documents/PROJECTS/suburbmates/.next/cache/webpack/client-development/0.pack.gz'
 â—‹ Compiling / ...
 âœ“ Compiled / in 704ms (1045 modules)
 âš  metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
 GET / 200 in 951ms
 â—‹ Compiling /search ...
 âœ“ Compiled /search in 1019ms (2075 modules)
 âš  Fast Refresh had to perform a full reload. Read more: https://nextjs.org/docs/messages/fast-refresh-reload
 âš  metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
 âš  Fast Refresh had to perform a full reload. Read more: https://nextjs.org/docs/messages/fast-refresh-reload
 GET /search 200 in 1237ms
 GET / 200 in 285ms
 âœ“ Compiled /api/auth/[...nextauth] in 180ms (1368 modules)
 â¨¯ TypeError: Cannot read properties of undefined (reading 'call')
    at __webpack_exec__ (.next/server/app/api/auth/[...nextauth]/route.js:283:39)
    at <unknown> (.next/server/app/api/auth/[...nextauth]/route.js:284:397)
    at <unknown> (.next/server/app/api/auth/[...nextauth]/route.js:284:47)
    at Object.<anonymous> (.next/server/app/api/auth/[...nextauth]/route.js:287:3) {
  page: '/api/auth/session'
}
prisma:query SELECT COUNT("public"."businesses"."category"), "public"."businesses"."category" FROM "public"."businesses" WHERE "public"."businesses"."status" = CAST($1::text AS "public"."BusinessStatus") GROUP BY "public"."businesses"."category" ORDER BY COUNT("public"."businesses"."category") DESC OFFSET $2
 âœ“ Compiled /_error in 453ms (2404 modules)
 â¨¯ [Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'
}
 GET /category 200 in 1470ms
TypeError: Cannot read properties of undefined (reading 'call')
    at __webpack_exec__ (.next/server/app/api/auth/[...nextauth]/route.js:283:39)
    at <unknown> (.next/server/app/api/auth/[...nextauth]/route.js:284:397)
    at <unknown> (.next/server/app/api/auth/[...nextauth]/route.js:284:47)
    at Object.<anonymous> (.next/server/app/api/auth/[...nextauth]/route.js:287:3) {
  page: '/api/auth/session'
}
 â¨¯ [Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'
}
[Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/fallback-build-manifest.json'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/fallback-build-manifest.json'
}
 GET /api/auth/session 500 in 1346ms
 GET /api/auth/session 500 in 231ms
 â¨¯ TypeError: Cannot read properties of undefined (reading 'call')
    at __webpack_exec__ (.next/server/app/api/auth/[...nextauth]/route.js:283:39)
    at <unknown> (.next/server/app/api/auth/[...nextauth]/route.js:284:397)
    at <unknown> (.next/server/app/api/auth/[...nextauth]/route.js:284:47)
    at Object.<anonymous> (.next/server/app/api/auth/[...nextauth]/route.js:287:3) {
  page: '/api/auth/_log'
}
 â¨¯ [Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'
}
 â¨¯ TypeError: Cannot read properties of undefined (reading 'call')
    at __webpack_exec__ (.next/server/app/api/auth/[...nextauth]/route.js:283:39)
    at <unknown> (.next/server/app/api/auth/[...nextauth]/route.js:284:397)
    at <unknown> (.next/server/app/api/auth/[...nextauth]/route.js:284:47)
    at Object.<anonymous> (.next/server/app/api/auth/[...nextauth]/route.js:287:3) {
  page: '/api/auth/session'
}
 â¨¯ [Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'
}
TypeError: Cannot read properties of undefined (reading 'call')
    at __webpack_exec__ (.next/server/app/api/auth/[...nextauth]/route.js:283:39)
    at <unknown> (.next/server/app/api/auth/[...nextauth]/route.js:284:397)
    at <unknown> (.next/server/app/api/auth/[...nextauth]/route.js:284:47)
    at Object.<anonymous> (.next/server/app/api/auth/[...nextauth]/route.js:287:3) {
  page: '/api/auth/_log'
}
TypeError: Cannot read properties of undefined (reading 'call')
    at __webpack_exec__ (.next/server/app/api/auth/[...nextauth]/route.js:283:39)
    at <unknown> (.next/server/app/api/auth/[...nextauth]/route.js:284:397)
    at <unknown> (.next/server/app/api/auth/[...nextauth]/route.js:284:47)
    at Object.<anonymous> (.next/server/app/api/auth/[...nextauth]/route.js:287:3) {
  page: '/api/auth/session'
}
 â¨¯ [Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'
}
 â¨¯ [Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'
}
[Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/fallback-build-manifest.json'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/fallback-build-manifest.json'
}
 POST /api/auth/_log 500 in 934ms
 POST /api/auth/_log 500 in 552ms
[Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/fallback-build-manifest.json'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/fallback-build-manifest.json'
}
 GET /api/auth/session 500 in 951ms
 GET /api/auth/session 500 in 555ms
 â¨¯ TypeError: Cannot read properties of undefined (reading 'call')
    at __webpack_exec__ (.next/server/app/api/auth/[...nextauth]/route.js:283:39)
    at <unknown> (.next/server/app/api/auth/[...nextauth]/route.js:284:397)
    at <unknown> (.next/server/app/api/auth/[...nextauth]/route.js:284:47)
    at Object.<anonymous> (.next/server/app/api/auth/[...nextauth]/route.js:287:3) {
  page: '/api/auth/session'
}
 â¨¯ [Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'
}
 â¨¯ TypeError: Cannot read properties of undefined (reading 'call')
    at __webpack_exec__ (.next/server/app/api/auth/[...nextauth]/route.js:283:39)
    at <unknown> (.next/server/app/api/auth/[...nextauth]/route.js:284:397)
    at <unknown> (.next/server/app/api/auth/[...nextauth]/route.js:284:47)
    at Object.<anonymous> (.next/server/app/api/auth/[...nextauth]/route.js:287:3) {
  page: '/api/auth/_log'
}
 â¨¯ [Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'
}
TypeError: Cannot read properties of undefined (reading 'call')
    at __webpack_exec__ (.next/server/app/api/auth/[...nextauth]/route.js:283:39)
    at <unknown> (.next/server/app/api/auth/[...nextauth]/route.js:284:397)
    at <unknown> (.next/server/app/api/auth/[...nextauth]/route.js:284:47)
    at Object.<anonymous> (.next/server/app/api/auth/[...nextauth]/route.js:287:3) {
  page: '/api/auth/session'
}
TypeError: Cannot read properties of undefined (reading 'call')
    at __webpack_exec__ (.next/server/app/api/auth/[...nextauth]/route.js:283:39)
    at <unknown> (.next/server/app/api/auth/[...nextauth]/route.js:284:397)
    at <unknown> (.next/server/app/api/auth/[...nextauth]/route.js:284:47)
    at Object.<anonymous> (.next/server/app/api/auth/[...nextauth]/route.js:287:3) {
  page: '/api/auth/_log'
}
 â¨¯ [Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'
}
 â¨¯ [Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'
}
[Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/fallback-build-manifest.json'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/fallback-build-manifest.json'
}
 GET /api/auth/session 500 in 573ms
 GET /api/auth/session 500 in 247ms
[Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/fallback-build-manifest.json'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/fallback-build-manifest.json'
}
 POST /api/auth/_log 500 in 550ms
 POST /api/auth/_log 500 in 245ms
 â¨¯ TypeError: Cannot read properties of undefined (reading 'call')
    at __webpack_exec__ (.next/server/app/api/auth/[...nextauth]/route.js:283:39)
    at <unknown> (.next/server/app/api/auth/[...nextauth]/route.js:284:397)
    at <unknown> (.next/server/app/api/auth/[...nextauth]/route.js:284:47)
    at Object.<anonymous> (.next/server/app/api/auth/[...nextauth]/route.js:287:3) {
  page: '/api/auth/_log'
}
 â¨¯ [Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'
}
TypeError: Cannot read properties of undefined (reading 'call')
    at __webpack_exec__ (.next/server/app/api/auth/[...nextauth]/route.js:283:39)
    at <unknown> (.next/server/app/api/auth/[...nextauth]/route.js:284:397)
    at <unknown> (.next/server/app/api/auth/[...nextauth]/route.js:284:47)
    at Object.<anonymous> (.next/server/app/api/auth/[...nextauth]/route.js:287:3) {
  page: '/api/auth/_log'
}
 â¨¯ [Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'
}
[Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/fallback-build-manifest.json'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/fallback-build-manifest.json'
}
 POST /api/auth/_log 500 in 492ms
 POST /api/auth/_log 500 in 230ms
 âœ“ Compiled /feed in 463ms (2411 modules)
 âš  metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
 GET /feed 200 in 591ms
 âœ“ Compiled /middleware in 442ms (261 modules)
 â—‹ Compiling /login ...
 âœ“ Compiled /login in 543ms (2421 modules)
 âš  metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
 GET /login 200 in 634ms
 â¨¯ TypeError: Cannot read properties of undefined (reading 'call')
    at eval (webpack-internal:///(rsc)/./lib/utils.ts:5:62)
    at <unknown> (rsc)/./lib/utils.ts (/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/app/suburb/[slug]/page.js:165:1)
    at eval (webpack-internal:///(rsc)/./components/ui/card.tsx:14:68)
    at <unknown> (rsc)/./components/ui/card.tsx (/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/app/suburb/[slug]/page.js:110:1)
    at eval (webpack-internal:///(rsc)/./app/suburb/[slug]/page.tsx:11:77)
    at <unknown> (rsc)/./app/suburb/[slug]/page.tsx (/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/app/suburb/[slug]/page.js:55:1) {
  type: 'TypeError',
  page: '/suburb/fitzroy'
}
 â¨¯ [Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'
}
TypeError: Cannot read properties of undefined (reading 'call')
    at eval (webpack-internal:///(rsc)/./lib/utils.ts:5:62)
    at <unknown> (rsc)/./lib/utils.ts (/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/app/suburb/[slug]/page.js:165:1)
    at eval (webpack-internal:///(rsc)/./components/ui/card.tsx:14:68)
    at <unknown> (rsc)/./components/ui/card.tsx (/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/app/suburb/[slug]/page.js:110:1)
    at eval (webpack-internal:///(rsc)/./app/suburb/[slug]/page.tsx:11:77)
    at <unknown> (rsc)/./app/suburb/[slug]/page.tsx (/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/app/suburb/[slug]/page.js:55:1) {
  type: 'TypeError',
  page: '/suburb/fitzroy'
}
 â¨¯ [Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'
}
[Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/fallback-build-manifest.json'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/fallback-build-manifest.json'
}
 GET /suburb/fitzroy 500 in 967ms
 GET /suburb/fitzroy 500 in 249ms
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:56:70)
    at Array.find (<anonymous>)
    at CategoryLayout (app/category/[slug]/layout.tsx:56:40)
  54 |
  55 | export default function CategoryLayout({ params, children }: Props) {
> 56 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  57 |   
  58 |   if (!category) {
  59 |     notFound();
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at CategoryPage (app/category/[slug]/page.tsx:77:86)
  75 |
  76 | export default async function CategoryPage({ params }: CategoryPageProps) {
> 77 |   const { businesses, category, suburbsWithBusinesses } = await getBusinesses(params.slug);
     |                                                                                      ^
  78 |
  79 |   if (!category) {
  80 |     notFound();
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/layout.tsx:11:70)
    at Array.find (<anonymous>)
    at Module.generateMetadata (app/category/[slug]/layout.tsx:11:40)
   9 |
  10 | export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
> 11 |   const category = BUSINESS_CATEGORIES.find(cat => cat.id === params.slug);
     |                                                                      ^
  12 |   
  13 |   if (!category) {
  14 |     return {
prisma:query SELECT 1
prisma:query SELECT "public"."businesses"."id", "public"."businesses"."slug", "public"."businesses"."name", "public"."businesses"."abn", "public"."businesses"."email", "public"."businesses"."bio", "public"."businesses"."suburb", "public"."businesses"."serviceAreas", "public"."businesses"."postcode", "public"."businesses"."phone", "public"."businesses"."website", "public"."businesses"."logo", "public"."businesses"."category", "public"."businesses"."status"::text, "public"."businesses"."needsReview", "public"."businesses"."themeId", "public"."businesses"."layoutId", "public"."businesses"."headerStyle", "public"."businesses"."ctaText", "public"."businesses"."ctaStyle", "public"."businesses"."showTestimonials", "public"."businesses"."showGallery", "public"."businesses"."showBusinessHours", "public"."businesses"."facebookUrl", "public"."businesses"."instagramUrl", "public"."businesses"."linkedinUrl", "public"."businesses"."abnVerificationStatus", "public"."businesses"."abnVerificationDate", "public"."businesses"."abnVerificationData", "public"."businesses"."abnVerificationNotes", "public"."businesses"."abnVerifiedBy", "public"."businesses"."abnAutoVerified", "public"."businesses"."createdAt", "public"."businesses"."updatedAt", "public"."businesses"."userId", "public"."businesses"."profileTheme" FROM "public"."businesses" WHERE ("public"."businesses"."category" = $1 AND "public"."businesses"."status" = CAST($2::text AS "public"."BusinessStatus")) ORDER BY "public"."businesses"."createdAt" DESC LIMIT $3 OFFSET $4
prisma:query SELECT COUNT("public"."businesses"."suburb"), "public"."businesses"."suburb" FROM "public"."businesses" WHERE ("public"."businesses"."category" = $1 AND "public"."businesses"."status" = CAST($2::text AS "public"."BusinessStatus")) GROUP BY "public"."businesses"."suburb" ORDER BY COUNT("public"."businesses"."suburb") DESC LIMIT $3 OFFSET $4
Error: Route "/category/[slug]" used `params.slug`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at eval (app/category/[slug]/page.tsx:382:52)
    at Array.filter (<anonymous>)
    at CategoryPage (app/category/[slug]/page.tsx:382:20)
  380 |               <CardContent className="space-y-2">
  381 |                 {BUSINESS_CATEGORIES
> 382 |                   .filter(cat => cat.id !== params.slug)
      |                                                    ^
  383 |                   .slice(0, 6)
  384 |                   .map(cat => (
  385 |                     <Link key={cat.id} href={`/category/${cat.id}`}>
 GET /category/plumbing 200 in 426ms
 â¨¯ Failed to generate static paths for /category/[slug]:
TypeError: Cannot read properties of undefined (reading 'call')
    at eval (webpack-internal:///(rsc)/./lib/utils.ts:5:62)
    at <unknown> (rsc)/./lib/utils.ts (/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/app/category/[slug]/page.js:165:1)
    at eval (webpack-internal:///(rsc)/./components/ui/card.tsx:14:68)
    at <unknown> (rsc)/./components/ui/card.tsx (/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/app/category/[slug]/page.js:110:1)
    at eval (webpack-internal:///(rsc)/./app/category/[slug]/page.tsx:11:77)
    at <unknown> (rsc)/./app/category/[slug]/page.tsx (/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/app/category/[slug]/page.js:33:1) {
  type: 'TypeError'
}
 GET / 200 in 175ms
 GET /api/auth/session 200 in 77ms
 GET /api/auth/session 200 in 18ms
 GET /api/auth/session 200 in 16ms
 â¨¯ Failed to generate static paths for /api/auth/[...nextauth]:
[TypeError: Cannot read properties of undefined (reading 'call')] {
  type: 'TypeError'
}
 â¨¯ Failed to generate static paths for /api/auth/[...nextauth]:
[TypeError: Cannot read properties of undefined (reading 'call')] {
  type: 'TypeError'
}
 â¨¯ Failed to generate static paths for /api/auth/[...nextauth]:
[TypeError: Cannot read properties of undefined (reading 'call')] {
  type: 'TypeError'
}
 â—‹ Compiling /business/preview-demo ...
 âœ“ Compiled /business/preview-demo in 1204ms (2412 modules)
 âš  metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
 GET /business/preview-demo 200 in 1674ms
 â¨¯ [TypeError: Cannot read properties of undefined (reading 'call')] {
  type: 'TypeError',
  page: '/api/auth/session'
}
 â¨¯ [Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'
}
[TypeError: Cannot read properties of undefined (reading 'call')] {
  type: 'TypeError',
  page: '/api/auth/session'
}
 â¨¯ [Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'
}
[Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/fallback-build-manifest.json'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/fallback-build-manifest.json'
}
 GET /api/auth/session 500 in 872ms
 GET /api/auth/session 500 in 247ms
 â¨¯ [TypeError: Cannot read properties of undefined (reading 'call')] {
  type: 'TypeError',
  page: '/api/auth/session'
}
 â¨¯ [TypeError: Cannot read properties of undefined (reading 'call')] {
  type: 'TypeError',
  page: '/api/auth/session'
}
 â¨¯ [Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'
}
 â¨¯ [Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'
}
[TypeError: Cannot read properties of undefined (reading 'call')] {
  type: 'TypeError',
  page: '/api/auth/session'
}
[TypeError: Cannot read properties of undefined (reading 'call')] {
  type: 'TypeError',
  page: '/api/auth/session'
}
 â¨¯ [Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'
}
 â¨¯ [Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'
}
[Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/fallback-build-manifest.json'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/fallback-build-manifest.json'
}
 POST /api/auth/_log 500 in 845ms
 POST /api/auth/_log 500 in 287ms
[Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/fallback-build-manifest.json'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/fallback-build-manifest.json'
}
 GET /api/auth/session 500 in 859ms
 GET /api/auth/session 500 in 295ms
 â¨¯ [TypeError: Cannot read properties of undefined (reading 'call')] {
  type: 'TypeError',
  page: '/api/auth/_log'
}
 â¨¯ [TypeError: Cannot read properties of undefined (reading 'call')] {
  type: 'TypeError',
  page: '/api/auth/_log'
}
 â¨¯ [Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'
}
 â¨¯ [Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'
}
[TypeError: Cannot read properties of undefined (reading 'call')] {
  type: 'TypeError',
  page: '/api/auth/_log'
}
[TypeError: Cannot read properties of undefined (reading 'call')] {
  type: 'TypeError',
  page: '/api/auth/_log'
}
 â¨¯ [Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'
}
 â¨¯ [Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'
}
[Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/fallback-build-manifest.json'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/fallback-build-manifest.json'
}
 GET /api/auth/session 500 in 840ms
 GET /api/auth/session 500 in 282ms
[Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/fallback-build-manifest.json'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/fallback-build-manifest.json'
}
 POST /api/auth/_log 500 in 852ms
 POST /api/auth/_log 500 in 285ms
 â¨¯ [TypeError: Cannot read properties of undefined (reading 'call')] {
  type: 'TypeError',
  page: '/api/auth/_log'
}
 â¨¯ [TypeError: Cannot read properties of undefined (reading 'call')] {
  type: 'TypeError',
  page: '/api/auth/_log'
}
 â¨¯ [Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'
}
 â¨¯ [Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'
}
[TypeError: Cannot read properties of undefined (reading 'call')] {
  type: 'TypeError',
  page: '/api/auth/_log'
}
[TypeError: Cannot read properties of undefined (reading 'call')] {
  type: 'TypeError',
  page: '/api/auth/_log'
}
 â¨¯ [Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'
}
 â¨¯ [Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'
}
[Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/fallback-build-manifest.json'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/fallback-build-manifest.json'
}
 GET /api/auth/session 500 in 825ms
 GET /api/auth/session 500 in 287ms
[Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/fallback-build-manifest.json'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/fallback-build-manifest.json'
}
 POST /api/auth/_log 500 in 838ms
 POST /api/auth/_log 500 in 295ms
 â¨¯ [TypeError: Cannot read properties of undefined (reading 'call')] {
  type: 'TypeError',
  page: '/api/auth/_log'
}
 â¨¯ [Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'
}
[TypeError: Cannot read properties of undefined (reading 'call')] {
  type: 'TypeError',
  page: '/api/auth/_log'
}
 â¨¯ [Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/server/pages/_document.js'
}
[Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/fallback-build-manifest.json'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/fallback-build-manifest.json'
}
 POST /api/auth/_log 500 in 813ms
 POST /api/auth/_log 500 in 259ms
 âœ“ Compiled /search in 395ms (1224 modules)
 âš  metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
 GET /search 200 in 660ms
 â—‹ Compiling /api/business/search ...
 âœ“ Compiled /api/business/search in 608ms (2223 modules)
prisma:query SELECT 1
prisma:query SELECT "public"."businesses"."id", "public"."businesses"."slug", "public"."businesses"."name", "public"."businesses"."bio", "public"."businesses"."suburb", "public"."businesses"."category", "public"."businesses"."phone", "public"."businesses"."email", "public"."businesses"."website", "public"."businesses"."logo", "public"."businesses"."serviceAreas", "public"."businesses"."status"::text, "public"."businesses"."createdAt" FROM "public"."businesses" WHERE "public"."businesses"."status" = CAST($1::text AS "public"."BusinessStatus") ORDER BY "public"."businesses"."createdAt" DESC, "public"."businesses"."name" ASC LIMIT $2 OFFSET $3
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."businesses"."id" FROM "public"."businesses" WHERE "public"."businesses"."status" = CAST($1::text AS "public"."BusinessStatus") OFFSET $2) AS "sub"
 GET /api/business/search?limit=20&offset=0 200 in 3768ms
prisma:query SELECT COUNT(*) AS "_count._all" FROM (SELECT "public"."businesses"."id" FROM "public"."businesses" WHERE "public"."businesses"."status" = CAST($1::text AS "public"."BusinessStatus") OFFSET $2) AS "sub"
prisma:query SELECT "public"."businesses"."id", "public"."businesses"."slug", "public"."businesses"."name", "public"."businesses"."bio", "public"."businesses"."suburb", "public"."businesses"."category", "public"."businesses"."phone", "public"."businesses"."email", "public"."businesses"."website", "public"."businesses"."logo", "public"."businesses"."serviceAreas", "public"."businesses"."status"::text, "public"."businesses"."createdAt" FROM "public"."businesses" WHERE "public"."businesses"."status" = CAST($1::text AS "public"."BusinessStatus") ORDER BY "public"."businesses"."createdAt" DESC, "public"."businesses"."name" ASC LIMIT $2 OFFSET $3
 GET /api/business/search?limit=20&offset=0 200 in 581ms
 âš  metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
 GET / 200 in 260ms
 âœ“ Compiled /api/auth/[...nextauth] in 266ms (1486 modules)
 GET /api/auth/session 200 in 925ms
 GET /api/auth/session 200 in 24ms
 GET /api/auth/session 200 in 15ms
 GET /api/auth/session 200 in 20ms
 â—‹ Compiling /signup ...
 âœ“ Compiled /signup in 981ms (2503 modules)
 âš  metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
 GET /signup 200 in 1102ms
 â—‹ Compiling /api/signup ...
 âœ“ Compiled /api/signup in 606ms (2554 modules)
User created, Supabase confirmation email sent to: carl.gallardo@yahoo.com
User will be redirected to dashboard after email confirmation
 POST /api/signup 200 in 2546ms
 âœ“ Compiled /login in 453ms (1570 modules)
 âš  metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
 GET /login?message=Please+check+your+email+to+confirm+your+account 200 in 574ms
 GET /api/auth/providers 200 in 81ms
 GET /api/auth/csrf 200 in 15ms
prisma:query SELECT 1
prisma:query SELECT "public"."users"."id", "public"."users"."email", "public"."users"."role"::text, "public"."users"."createdAt", "public"."users"."updatedAt" FROM "public"."users" WHERE ("public"."users"."email" = $1 AND 1=1) LIMIT $2 OFFSET $3
 POST /api/auth/callback/credentials 401 in 76ms
 âœ“ Compiled in 1953ms (2141 modules)
 â¨¯ [Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/prerender-manifest.json'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/prerender-manifest.json',
  page: '/'
}
 â¨¯ Error: Cannot find module './5611.js'
Require stack:
- /Users/carlg/Documents/PROJECTS/suburbmates/.next/server/webpack-runtime.js
- /Users/carlg/Documents/PROJECTS/suburbmates/.next/server/app/page.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/server/require.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/server/load-components.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/build/utils.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/build/swc/options.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/build/swc/index.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/build/analysis/parse-module.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/build/analysis/get-page-static-info.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/server/lib/router-utils/setup-dev-bundler.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/server/lib/router-server.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/server/lib/start-server.js
    at <unknown> (.next/server/pages/_document.js:1:327)
    at Object.<anonymous> (.next/server/pages/_document.js:1:374) {
  code: 'MODULE_NOT_FOUND',
  requireStack: [Array]
}
[Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/prerender-manifest.json'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/prerender-manifest.json',
  page: '/'
}
 â¨¯ Error: Cannot find module './5611.js'
Require stack:
- /Users/carlg/Documents/PROJECTS/suburbmates/.next/server/webpack-runtime.js
- /Users/carlg/Documents/PROJECTS/suburbmates/.next/server/app/page.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/server/require.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/server/load-components.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/build/utils.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/build/swc/options.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/build/swc/index.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/build/analysis/parse-module.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/build/analysis/get-page-static-info.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/server/lib/router-utils/setup-dev-bundler.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/server/lib/router-server.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/server/lib/start-server.js
    at <unknown> (.next/server/pages/_document.js:1:327)
    at Object.<anonymous> (.next/server/pages/_document.js:1:374) {
  code: 'MODULE_NOT_FOUND',
  requireStack: [Array]
}
 â¨¯ [Error: Cannot find module './vendor-chunks/@swc.js'
Require stack:
- /Users/carlg/Documents/PROJECTS/suburbmates/.next/server/webpack-runtime.js
- /Users/carlg/Documents/PROJECTS/suburbmates/.next/server/app/category/[slug]/page.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/server/require.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/server/load-components.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/build/utils.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/server/dev/static-paths-worker.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/compiled/jest-worker/processChild.js] {
  type: 'Error',
  code: 'MODULE_NOT_FOUND',
  requireStack: [Array],
  page: '/category/plumbing'
}
 â¨¯ Error: Cannot find module './5611.js'
Require stack:
- /Users/carlg/Documents/PROJECTS/suburbmates/.next/server/webpack-runtime.js
- /Users/carlg/Documents/PROJECTS/suburbmates/.next/server/app/page.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/server/require.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/server/load-components.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/build/utils.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/build/swc/options.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/build/swc/index.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/build/analysis/parse-module.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/build/analysis/get-page-static-info.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/server/lib/router-utils/setup-dev-bundler.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/server/lib/router-server.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/server/lib/start-server.js
    at <unknown> (.next/server/pages/_document.js:1:327)
    at Object.<anonymous> (.next/server/pages/_document.js:1:374) {
  code: 'MODULE_NOT_FOUND',
  requireStack: [Array]
}
[Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/fallback-build-manifest.json'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/fallback-build-manifest.json'
}
 GET / 500 in 926ms
 GET / 500 in 230ms
 â¨¯ [Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/prerender-manifest.json'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/prerender-manifest.json',
  page: '/'
}
[Error: Cannot find module './vendor-chunks/@swc.js'
Require stack:
- /Users/carlg/Documents/PROJECTS/suburbmates/.next/server/webpack-runtime.js
- /Users/carlg/Documents/PROJECTS/suburbmates/.next/server/app/category/[slug]/page.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/server/require.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/server/load-components.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/build/utils.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/server/dev/static-paths-worker.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/compiled/jest-worker/processChild.js] {
  type: 'Error',
  code: 'MODULE_NOT_FOUND',
  requireStack: [Array],
  page: '/category/plumbing'
}
 â¨¯ Error: Cannot find module './5611.js'
Require stack:
- /Users/carlg/Documents/PROJECTS/suburbmates/.next/server/webpack-runtime.js
- /Users/carlg/Documents/PROJECTS/suburbmates/.next/server/app/page.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/server/require.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/server/load-components.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/build/utils.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/build/swc/options.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/build/swc/index.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/build/analysis/parse-module.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/build/analysis/get-page-static-info.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/server/lib/router-utils/setup-dev-bundler.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/server/lib/router-server.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/server/lib/start-server.js
    at <unknown> (.next/server/pages/_document.js:1:327)
    at Object.<anonymous> (.next/server/pages/_document.js:1:374) {
  code: 'MODULE_NOT_FOUND',
  requireStack: [Array]
}
 â¨¯ Error: Cannot find module './5611.js'
Require stack:
- /Users/carlg/Documents/PROJECTS/suburbmates/.next/server/webpack-runtime.js
- /Users/carlg/Documents/PROJECTS/suburbmates/.next/server/app/page.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/server/require.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/server/load-components.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/build/utils.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/build/swc/options.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/build/swc/index.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/build/analysis/parse-module.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/build/analysis/get-page-static-info.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/server/lib/router-utils/setup-dev-bundler.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/server/lib/router-server.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/server/lib/start-server.js
    at <unknown> (.next/server/pages/_document.js:1:327)
    at Object.<anonymous> (.next/server/pages/_document.js:1:374) {
  code: 'MODULE_NOT_FOUND',
  requireStack: [Array]
}
[Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/prerender-manifest.json'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/prerender-manifest.json',
  page: '/'
}
[Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/fallback-build-manifest.json'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/fallback-build-manifest.json'
}
 GET /category/plumbing 500 in 1457ms
 GET /category/plumbing 500 in 354ms
 â¨¯ Error: Cannot find module './5611.js'
Require stack:
- /Users/carlg/Documents/PROJECTS/suburbmates/.next/server/webpack-runtime.js
- /Users/carlg/Documents/PROJECTS/suburbmates/.next/server/app/page.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/server/require.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/server/load-components.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/build/utils.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/build/swc/options.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/build/swc/index.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/build/analysis/parse-module.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/build/analysis/get-page-static-info.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/server/lib/router-utils/setup-dev-bundler.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/server/lib/router-server.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/server/lib/start-server.js
    at <unknown> (.next/server/pages/_document.js:1:327)
    at Object.<anonymous> (.next/server/pages/_document.js:1:374) {
  code: 'MODULE_NOT_FOUND',
  requireStack: [Array]
}
[Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/fallback-build-manifest.json'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/fallback-build-manifest.json'
}
 GET / 500 in 753ms
 GET / 500 in 244ms
 â¨¯ [Error: Cannot find module './vendor-chunks/@swc.js'
Require stack:
- /Users/carlg/Documents/PROJECTS/suburbmates/.next/server/webpack-runtime.js
- /Users/carlg/Documents/PROJECTS/suburbmates/.next/server/app/category/[slug]/page.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/server/require.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/server/load-components.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/build/utils.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/server/dev/static-paths-worker.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/compiled/jest-worker/processChild.js] {
  type: 'Error',
  code: 'MODULE_NOT_FOUND',
  requireStack: [Array],
  page: '/category/plumbing'
}
 â¨¯ Error: Cannot find module './5611.js'
Require stack:
- /Users/carlg/Documents/PROJECTS/suburbmates/.next/server/webpack-runtime.js
- /Users/carlg/Documents/PROJECTS/suburbmates/.next/server/app/page.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/server/require.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/server/load-components.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/build/utils.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/build/swc/options.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/build/swc/index.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/build/analysis/parse-module.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/build/analysis/get-page-static-info.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/server/lib/router-utils/setup-dev-bundler.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/server/lib/router-server.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/server/lib/start-server.js
    at <unknown> (.next/server/pages/_document.js:1:327)
    at Object.<anonymous> (.next/server/pages/_document.js:1:374) {
  code: 'MODULE_NOT_FOUND',
  requireStack: [Array]
}
[Error: Cannot find module './vendor-chunks/@swc.js'
Require stack:
- /Users/carlg/Documents/PROJECTS/suburbmates/.next/server/webpack-runtime.js
- /Users/carlg/Documents/PROJECTS/suburbmates/.next/server/app/category/[slug]/page.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/server/require.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/server/load-components.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/build/utils.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/server/dev/static-paths-worker.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/compiled/jest-worker/processChild.js] {
  type: 'Error',
  code: 'MODULE_NOT_FOUND',
  requireStack: [Array],
  page: '/category/plumbing'
}
 â¨¯ Error: Cannot find module './5611.js'
Require stack:
- /Users/carlg/Documents/PROJECTS/suburbmates/.next/server/webpack-runtime.js
- /Users/carlg/Documents/PROJECTS/suburbmates/.next/server/app/page.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/server/require.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/server/load-components.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/build/utils.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/build/swc/options.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/build/swc/index.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/build/analysis/parse-module.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/build/analysis/get-page-static-info.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/server/lib/router-utils/setup-dev-bundler.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/server/lib/router-server.js
- /Users/carlg/Documents/PROJECTS/suburbmates/node_modules/next/dist/server/lib/start-server.js
    at <unknown> (.next/server/pages/_document.js:1:327)
    at Object.<anonymous> (.next/server/pages/_document.js:1:374) {
  code: 'MODULE_NOT_FOUND',
  requireStack: [Array]
}
[Error: ENOENT: no such file or directory, open '/Users/carlg/Documents/PROJECTS/suburbmates/.next/fallback-build-manifest.json'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/carlg/Documents/PROJECTS/suburbmates/.next/fallback-build-manifest.json'
}
 GET /category/plumbing 500 in 702ms
 GET /category/plumbing 500 in 235ms
 âœ“ Compiled in 1067ms (2141 modules)
 â—‹ Compiling /_not-found ...
 âœ“ Compiled /_not-found in 718ms (2132 modules)
 âš  metadataBase property in metadata export is not set for resolving social open graph or twitter images, using "http://localhost:3000". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase
 HEAD /category 404 in 934ms
 âœ“ Compiled in 381ms (1008 modules)
 âœ“ Compiled in 1550ms (2141 modules)
[?25h
